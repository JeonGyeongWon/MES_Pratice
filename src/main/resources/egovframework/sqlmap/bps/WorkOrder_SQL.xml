<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap PUBLIC "-//iBATIS.com//DTD SQL Map 2.0//EN" "http://www.ibatis.com/dtd/sql-map-2.dtd">

<sqlMap namespace="workorder">
    <parameterMap class="java.util.Map" id="procCalendarParams">
        <parameter property="ORGID" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
        <parameter property="COMPANYID" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
        <parameter property="STANDARDDATE" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
        <parameter property="REGISTID" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
        <parameter property="RETURNSTATUS" jdbcType="VARCHAR" javaType="java.lang.String" mode="OUT"/>
        <parameter property="MSGDATA" jdbcType="VARCHAR" javaType="java.lang.String" mode="OUT"/>
    </parameterMap>
    
    <procedure id="work.order.chart.create.calendar.Procedure" parameterClass="java.util.Map"  parameterMap="procCalendarParams" resultClass="java.util.HashMap" >
    <![CDATA[
       {call CB_CALENDAR_PROC( ?, ?, ?, ?, ?, ? ) }
       ]]>
    </procedure>
    
    
  <sql id="work.order.dummy.month.sql-select">
      SELECT TO_CHAR(TRUNC(SYSDATE, 'MM'), 'YYYY-MM-DD') AS DATEFROM
               ,TO_CHAR(LAST_DAY(SYSDATE), 'YYYY-MM-DD') AS DATETO
               ,TO_CHAR(SYSDATE,'YYYY-MM-DD') AS DATESYS
               ,TO_CHAR(TO_DATE(TO_CHAR(SYSDATE, 'YYYY-MM-DD'), 'YYYY-MM-DD') - 1, 'YYYY-MM-DD') AS YESTERDAY
               ,TO_CHAR(SYSDATE,'YYYY-MM') AS DATEMONTH
               ,TO_CHAR(LAST_DAY(SYSDATE),'DD') AS LASTDAY
               ,TO_CHAR(SYSDATE, 'YYYY') AS DATEYEAR
               <isNotEmpty property="dateMonth" prepend=",">
                 TO_CHAR(LAST_DAY(TO_DATE(#dateMonth#, 'YYYY-MM')),'DD') AS LASTDAY1
               </isNotEmpty>
        FROM DUAL
  </sql>

  <sql id="work.order.dummy.month.sql-where">
       WHERE 1 = 1
  </sql>

  <select id="work.order.dummy.month.select" parameterClass="java.util.Map"
      resultClass="java.util.HashMap">
      <include refid="work.order.dummy.month.sql-select" />
      <include refid="work.order.dummy.month.sql-where" />
  </select>
  
  <sql id="work.order.dummy.week.sql-select">
			SELECT TO_CHAR(A.S_DATE, 'YYYY-MM-DD')   MONDAY
			     , TO_CHAR(A.S_DATE+1, 'YYYY-MM-DD')  TUESDAY
			     , TO_CHAR(A.S_DATE+2, 'YYYY-MM-DD')  WEDNESDAY
			     , TO_CHAR(A.S_DATE+3, 'YYYY-MM-DD')  THURSDAY
			     , TO_CHAR(A.S_DATE+4, 'YYYY-MM-DD')  FRIDAY
			     , TO_CHAR(A.S_DATE+5, 'YYYY-MM-DD')  SATURDAY
			     , TO_CHAR(A.S_DATE+6, 'YYYY-MM-DD')  SUNDAY
			  FROM (
			  SELECT SYSDATE - (TO_NUMBER(TO_CHAR(SYSDATE, 'D')) - 2) S_DATE
			    FROM DUAL) A
  </sql>

  <sql id="work.order.dummy.week.sql-where">
       WHERE 1 = 1
  </sql>

  <select id="work.order.dummy.week.select" parameterClass="java.util.Map"
      resultClass="java.util.HashMap">
      <include refid="work.order.dummy.week.sql-select" />
      <include refid="work.order.dummy.week.sql-where" />
  </select>
  
  <!-- 기간별 이력관리 시작 -->
  <sql id="work.order.checkyn.sql-select">
<!--       SELECT '전체' AS LABEL, '' AS VALUE FROM DUAL -->
<!--      UNION ALL -->
      SELECT '합격' AS LABEL, '합격' AS VALUE FROM DUAL
      UNION ALL
      SELECT '불합격' AS LABEL, '불합격' AS VALUE FROM DUAL
      UNION ALL
      SELECT '미입력' AS LABEL, '미입력' AS VALUE FROM DUAL
  </sql>
  
  <select id="work.order.checkyn.select" parameterClass="java.util.Map" resultClass="java.util.HashMap">
      <include refid="work.order.checkyn.sql-select" />
  </select>
  
  <sql id="work.order.history.list.sql-select">
      SELECT ROW_NUMBER() OVER(ORDER BY ORG_ID, COMPANY_ID, CHECK_DATE DESC, TO_DATE(CHECK_TIME, 'HH24:MI') DESC, ITEM_NAME, EQUIPMENT_NAME, CHECK_BIG, ORDER_NO) AS RN
              ,ORG_ID AS ORGID
              ,COMPANY_ID AS COMPANYID
              ,FML_ID AS FMLID
              ,ORDER_NO AS ORDERNO
              ,CHECK_LIST_ID AS CHECKLISTID
              ,ITEM_CODE AS ITEMCODE
              ,ITEM_NAME AS ITEMNAME
              ,ORDER_NAME AS ORDERNAME
              ,DRAWING_NO AS DRAWINGNO
              ,WORK_ORDER_ID AS WORKORDERID
              ,WORK_ORDER_SEQ AS WORKORDERSEQ
              ,FML_TYPE AS FMLTYPE
              ,FML_TYPE_NAME AS FMLTYPENAME
              ,FML_ID AS FMLID
              ,CHECK_TYPE_NAME AS CHECKTYPENAME
              ,CHECK_DATE CHECKDATE
              ,CHECK_START_TIME AS CHECKSTARTTIME
              ,CHECK_TIME AS CHECKTIME
              ,STANDARD_START_TIME AS STANDARDSTARTTIME
              ,STANDARD_END_TIME AS STANDARDENDTIME
              ,ROUTING_ID AS ROUTINGID
              ,ROUTING_OP AS ROUTINGOP
              ,ROUTING_NAME AS ROUTINGNAME
              ,EQUIPMENT_CODE AS EQUIPMENTCODE
              ,EQUIPMENT_NAME AS EQUIPMENTNAME
              ,KR_NAME AS KRNAME
              ,CHECK_BIG AS CHECKBIG
              ,CHECK_BIG_NAME AS CHECKBIGNAME
              ,CHECK_MIDDLE_NAME AS CHECKMIDDLENAME
              ,CHECK_SMALL_NAME AS CHECKSMALLNAME
              ,SPECIAL_CHECK_NAME AS SPECIALCHECKNAME
              ,CHECK_STANDARD AS CHECKSTANDARD
              ,STANDARD_VALUE AS STANDARDVALUE
              ,MAX_VALUE AS MAXVALUE
              ,MIN_VALUE AS MINVALUE
              ,CHECK_QTY AS CHECKQTY
              ,EMPLOYEE_NUMBER AS EMPLOYEENUMBER
              ,EMPLOYEE_NAME AS EMPLOYEENAME
              ,CHECK_CYCLE_NAME AS CHECKCYCLENAME
              ,CHECK_CYCLE AS CHECKCYCLE
              ,CHECK_RESULT1 AS CHECKRESULT1
              ,CHECK_RESULT2 AS CHECKRESULT2
              ,CHECK_RESULT3 AS CHECKRESULT3
              ,CHECK_RESULT4 AS CHECKRESULT4
              ,CHECK_RESULT5 AS CHECKRESULT5
              ,CHECK_RESULT6 AS CHECKRESULT6
              ,CHECK_RESULT7 AS CHECKRESULT7
              ,CHECK_RESULT8 AS CHECKRESULT8
              ,CHECK_RESULT9 AS CHECKRESULT9
              ,CHECK_RESULT10 AS CHECKRESULT10
              ,CHECK_RESULT11 AS CHECKRESULT11
              ,CHECK_RESULT12 AS CHECKRESULT12
              ,CHECK_RESULT13 AS CHECKRESULT13
              ,CHECK_RESULT14 AS CHECKRESULT14
              ,CHECK_RESULT15 AS CHECKRESULT15
              ,CHECK_RESULT16 AS CHECKRESULT16
              ,CHECK_RESULT17 AS CHECKRESULT17
              ,CHECK_RESULT18 AS CHECKRESULT18
              ,CHECK_RESULT19 AS CHECKRESULT19
              ,CHECK_RESULT20 AS CHECKRESULT20    
              ,CHECK_RESULT21 AS CHECKRESULT21
              ,CHECK_RESULT22 AS CHECKRESULT22
              ,CHECK_RESULT23 AS CHECKRESULT23
              ,CHECK_RESULT24 AS CHECKRESULT24
              ,CHECK_RESULT25 AS CHECKRESULT25
              ,CHECK_RESULT26 AS CHECKRESULT26
              ,CHECK_RESULT27 AS CHECKRESULT27
              ,CHECK_RESULT28 AS CHECKRESULT28
              ,CHECK_RESULT29 AS CHECKRESULT29
              ,CHECK_RESULT30 AS CHECKRESULT30
              ,CHECK_RESULT31 AS CHECKRESULT31
              ,CHECK_RESULT32 AS CHECKRESULT32
              ,CHECK_RESULT33 AS CHECKRESULT33
              ,CHECK_RESULT34 AS CHECKRESULT34
              ,CHECK_RESULT35 AS CHECKRESULT35
              ,CHECK_RESULT36 AS CHECKRESULT36
              ,CHECK_RESULT37 AS CHECKRESULT37
              ,CHECK_RESULT38 AS CHECKRESULT38
              ,CHECK_RESULT39 AS CHECKRESULT39
              ,CHECK_RESULT40 AS CHECKRESULT40
              ,CHECK_RESULT41 AS CHECKRESULT41
              ,CHECK_RESULT42 AS CHECKRESULT42
              ,CHECK_RESULT43 AS CHECKRESULT43
              ,CHECK_RESULT44 AS CHECKRESULT44
              ,CHECK_RESULT45 AS CHECKRESULT45
              ,CHECK_RESULT46 AS CHECKRESULT46
              ,CHECK_RESULT47 AS CHECKRESULT47
              ,CHECK_RESULT48 AS CHECKRESULT48
              ,CHECK_RESULT49 AS CHECKRESULT49
              ,CHECK_RESULT50 AS CHECKRESULT50
              ,CHECK_RESULT_NG1 AS CHECKRESULTNG1
              ,CHECK_RESULT_NG2 AS CHECKRESULTNG2
              ,CHECK_RESULT_NG3 AS CHECKRESULTNG3
              ,CHECK_RESULT_NG4 AS CHECKRESULTNG4
              ,CHECK_RESULT_NG5 AS CHECKRESULTNG5
              ,CHECK_RESULT_NG6 AS CHECKRESULTNG6
              ,CHECK_RESULT_NG7 AS CHECKRESULTNG7
              ,CHECK_RESULT_NG8 AS CHECKRESULTNG8
              ,CHECK_RESULT_NG9 AS CHECKRESULTNG9
              ,CHECK_RESULT_NG10 AS CHECKRESULTNG10
              ,CHECK_RESULT_NG11 AS CHECKRESULTNG11
              ,CHECK_RESULT_NG12 AS CHECKRESULTNG12
              ,CHECK_RESULT_NG13 AS CHECKRESULTNG13
              ,CHECK_RESULT_NG14 AS CHECKRESULTNG14
              ,CHECK_RESULT_NG15 AS CHECKRESULTNG15
              ,CHECK_RESULT_NG16 AS CHECKRESULTNG16
              ,CHECK_RESULT_NG17 AS CHECKRESULTNG17
              ,CHECK_RESULT_NG18 AS CHECKRESULTNG18
              ,CHECK_RESULT_NG19 AS CHECKRESULTNG19
              ,CHECK_RESULT_NG20 AS CHECKRESULTNG20    
              ,CHECK_RESULT_NG21 AS CHECKRESULTNG21
              ,CHECK_RESULT_NG22 AS CHECKRESULTNG22
              ,CHECK_RESULT_NG23 AS CHECKRESULTNG23
              ,CHECK_RESULT_NG24 AS CHECKRESULTNG24
              ,CHECK_RESULT_NG25 AS CHECKRESULTNG25
              ,CHECK_RESULT_NG26 AS CHECKRESULTNG26
              ,CHECK_RESULT_NG27 AS CHECKRESULTNG27
              ,CHECK_RESULT_NG28 AS CHECKRESULTNG28
              ,CHECK_RESULT_NG29 AS CHECKRESULTNG29
              ,CHECK_RESULT_NG30 AS CHECKRESULTNG30
              ,CHECK_RESULT_NG31 AS CHECKRESULTNG31
              ,CHECK_RESULT_NG32 AS CHECKRESULTNG32
              ,CHECK_RESULT_NG33 AS CHECKRESULTNG33
              ,CHECK_RESULT_NG34 AS CHECKRESULTNG34
              ,CHECK_RESULT_NG35 AS CHECKRESULTNG35
              ,CHECK_RESULT_NG36 AS CHECKRESULTNG36
              ,CHECK_RESULT_NG37 AS CHECKRESULTNG37
              ,CHECK_RESULT_NG38 AS CHECKRESULTNG38
              ,CHECK_RESULT_NG39 AS CHECKRESULTNG39
              ,CHECK_RESULT_NG40 AS CHECKRESULTNG40
              ,CHECK_RESULT_NG41 AS CHECKRESULTNG41
              ,CHECK_RESULT_NG42 AS CHECKRESULTNG42
              ,CHECK_RESULT_NG43 AS CHECKRESULTNG43
              ,CHECK_RESULT_NG44 AS CHECKRESULTNG44
              ,CHECK_RESULT_NG45 AS CHECKRESULTNG45
              ,CHECK_RESULT_NG46 AS CHECKRESULTNG46
              ,CHECK_RESULT_NG47 AS CHECKRESULTNG47
              ,CHECK_RESULT_NG48 AS CHECKRESULTNG48
              ,CHECK_RESULT_NG49 AS CHECKRESULTNG49
              ,CHECK_RESULT_NG50 AS CHECKRESULTNG50
              ,CHECK1 AS CHECK1
              ,CHECK2 AS CHECK2
              ,CHECK3 AS CHECK3
              ,CHECK4 AS CHECK4
              ,CHECK5 AS CHECK5
              ,CHECK6 AS CHECK6
              ,CHECK7 AS CHECK7
              ,CHECK8 AS CHECK8
              ,CHECK9 AS CHECK9
              ,CHECK10 AS CHECK10
              ,CHECK11 AS CHECK11
              ,CHECK12 AS CHECK12
              ,CHECK13 AS CHECK13
              ,CHECK14 AS CHECK14
              ,CHECK15 AS CHECK15
              ,CHECK16 AS CHECK16
              ,CHECK17 AS CHECK17
              ,CHECK18 AS CHECK18
              ,CHECK19 AS CHECK19
              ,CHECK20 AS CHECK20    
              ,CHECK21 AS CHECK21
              ,CHECK22 AS CHECK22
              ,CHECK23 AS CHECK23
              ,CHECK24 AS CHECK24
              ,CHECK25 AS CHECK25
              ,CHECK26 AS CHECK26
              ,CHECK27 AS CHECK27
              ,CHECK28 AS CHECK28
              ,CHECK29 AS CHECK29
              ,CHECK30 AS CHECK30
              ,CHECK31 AS CHECK31
              ,CHECK32 AS CHECK32
              ,CHECK33 AS CHECK33
              ,CHECK34 AS CHECK34
              ,CHECK35 AS CHECK35
              ,CHECK36 AS CHECK36
              ,CHECK37 AS CHECK37
              ,CHECK38 AS CHECK38
              ,CHECK39 AS CHECK39
              ,CHECK40 AS CHECK40
              ,CHECK41 AS CHECK41
              ,CHECK42 AS CHECK42
              ,CHECK43 AS CHECK43
              ,CHECK44 AS CHECK44
              ,CHECK45 AS CHECK45
              ,CHECK46 AS CHECK46
              ,CHECK47 AS CHECK47
              ,CHECK48 AS CHECK48
              ,CHECK49 AS CHECK49
              ,CHECK50 AS CHECK50
              ,CHECK_TIME1 AS CHECKTIME1
              ,CHECK_TIME2 AS CHECKTIME2
              ,CHECK_TIME3 AS CHECKTIME3
              ,CHECK_TIME4 AS CHECKTIME4
              ,CHECK_TIME5 AS CHECKTIME5
              ,CHECK_TIME6 AS CHECKTIME6
              ,CHECK_TIME7 AS CHECKTIME7
              ,CHECK_TIME8 AS CHECKTIME8
              ,CHECK_TIME9 AS CHECKTIME9
              ,CHECK_TIME10 AS CHECKTIME10
              ,CHECK_TIME11 AS CHECKTIME11
              ,CHECK_TIME12 AS CHECKTIME12
              ,CHECK_TIME13 AS CHECKTIME13
              ,CHECK_TIME14 AS CHECKTIME14
              ,CHECK_TIME15 AS CHECKTIME15
              ,CHECK_TIME16 AS CHECKTIME16
              ,CHECK_TIME17 AS CHECKTIME17
              ,CHECK_TIME18 AS CHECKTIME18
              ,CHECK_TIME19 AS CHECKTIME19
              ,CHECK_TIME20 AS CHECKTIME20    
              ,CHECK_TIME21 AS CHECKTIME21
              ,CHECK_TIME22 AS CHECKTIME22
              ,CHECK_TIME23 AS CHECKTIME23
              ,CHECK_TIME24 AS CHECKTIME24
              ,CHECK_TIME25 AS CHECKTIME25
              ,CHECK_TIME26 AS CHECKTIME26
              ,CHECK_TIME27 AS CHECKTIME27
              ,CHECK_TIME28 AS CHECKTIME28
              ,CHECK_TIME29 AS CHECKTIME29
              ,CHECK_TIME30 AS CHECKTIME30
              ,CHECK_TIME31 AS CHECKTIME31
              ,CHECK_TIME32 AS CHECKTIME32
              ,CHECK_TIME33 AS CHECKTIME33
              ,CHECK_TIME34 AS CHECKTIME34
              ,CHECK_TIME35 AS CHECKTIME35
              ,CHECK_TIME36 AS CHECKTIME36
              ,CHECK_TIME37 AS CHECKTIME37
              ,CHECK_TIME38 AS CHECKTIME38
              ,CHECK_TIME39 AS CHECKTIME39
              ,CHECK_TIME40 AS CHECKTIME40
              ,CHECK_TIME41 AS CHECKTIME41
              ,CHECK_TIME42 AS CHECKTIME42
              ,CHECK_TIME43 AS CHECKTIME43
              ,CHECK_TIME44 AS CHECKTIME44
              ,CHECK_TIME45 AS CHECKTIME45
              ,CHECK_TIME46 AS CHECKTIME46
              ,CHECK_TIME47 AS CHECKTIME47
              ,CHECK_TIME48 AS CHECKTIME48
              ,CHECK_TIME49 AS CHECKTIME49
              ,CHECK_TIME50 AS CHECKTIME50   
              ,CHECK_YN AS CHECKYN
              ,INSPECTION_YN AS INSPECTIONYN
              ,(CASE
                  WHEN CHECK_QTY = 1 THEN
                    CHECK_RESULT1
                  WHEN CHECK_QTY = 2 THEN
                    (CASE
                       WHEN RESULT1 = '합격' THEN
                         CHECK_RESULT2
                       ELSE
                         CHECK_RESULT1
                     END)
                  WHEN CHECK_QTY = 3 THEN
                    (CASE
                       WHEN RESULT1 = '합격' THEN
                        (CASE
                           WHEN RESULT2 = '합격' THEN
                             CHECK_RESULT3
                           ELSE
                             CHECK_RESULT2
                         END)
                       ELSE
                         CHECK_RESULT1
                     END)
                  WHEN CHECK_QTY = 4 THEN
                    (CASE
                       WHEN RESULT1 = '합격' THEN
                        (CASE
                           WHEN RESULT2 = '합격' THEN
                             (CASE
                               WHEN RESULT3 = '합격' THEN
                                 CHECK_RESULT4
                               ELSE
                                 CHECK_RESULT3
                             END)
                           ELSE
                             CHECK_RESULT2
                         END)
                       ELSE
                         CHECK_RESULT1
                     END)
                 ELSE
                   ''
                 END) AS CHECKRESULT
              ,TOTAL_RESULT AS TOTALRESULT
              ,CHECK_RESULT_M AS CHECKRESULTM
              ,MANAGE_EMPLOYEE_NAME AS MANAGEEMPLOYEENAME
              ,REMARKS AS REMARKS
              ,EMPLOYEE_SEQ AS EMPLOYEESEQ
              ,TOTAL_QTY AS TOTALQTY
        FROM CB_WORK_ORDER_HISTORY_V
   </sql>

   <sql id="work.order.history.list.sql-where">
        WHERE 1 = 1
        <isNotEmpty property="ORGID" prepend="AND">
           ORG_ID = #ORGID#
        </isNotEmpty>
        <isNotEmpty property="COMPANYID" prepend="AND">
           COMPANY_ID = #COMPANYID#
        </isNotEmpty>
        <isNotEmpty property="ITEMCODE" prepend="AND">
           ITEM_CODE = #ITEMCODE#
        </isNotEmpty>
        <isNotEmpty property="ROUTINGID" prepend="AND">
           ROUTING_ID = #ROUTINGID#
        </isNotEmpty>
        <isNotEmpty property="GUBUN">
	        <isEqual property="GUBUN" compareValue="FMLREGIST">
		        <isNotEmpty property="WORKORDERID" prepend="AND">
		           WORK_ORDER_ID = #WORKORDERID#
		        </isNotEmpty>
		        <isNotEmpty property="WORKORDERSEQ" prepend="AND">
		           WORK_ORDER_SEQ = #WORKORDERSEQ#
		        </isNotEmpty>
		        <isNotEmpty property="FMLID" prepend="AND">
		           FML_ID = #FMLID#
		        </isNotEmpty>
		        <isNotEmpty property="ORDERNO" prepend="AND">
		           ORDER_NO = #ORDERNO#
		        </isNotEmpty>
            <isNotEmpty property="CHECKLISTID" prepend="AND">
               CHECK_LIST_ID = #CHECKLISTID#
            </isNotEmpty>
	        </isEqual>
        
          <isEqual property="GUBUN" compareValue="PREFMLREGIST">
            <isNotEmpty property="CHECKLISTID" prepend="AND">
               CHECK_LIST_ID = #CHECKLISTID#
            </isNotEmpty>
            <![CDATA[
            AND CHECK_BIG = 'F'
            AND EMPLOYEE_SEQ =
					       (SELECT MAX(WE.SEQ)
					          FROM CB_WORK_EMPLOYEE WE
					         WHERE 1 = 1
            ]]>
        <isNotEmpty property="ORGID" prepend="AND">
           ORG_ID = #ORGID#
        </isNotEmpty>
        <isNotEmpty property="COMPANYID" prepend="AND">
           COMPANY_ID = #COMPANYID#
        </isNotEmpty>
            <isNotEmpty property="WORKORDERSEQ" prepend="AND">
               WORK_ORDER_SEQ = #WORKORDERSEQ#
            </isNotEmpty>
            <![CDATA[
					           AND WE.WORK_ORDER_ID IN
					               (SELECT WO.WORK_ORDER_ID
					                  FROM CB_WORK_ORDER WO
					                 WHERE 1 = 1
            ]]>
        <isNotEmpty property="ORGID" prepend="AND">
           ORG_ID = #ORGID#
        </isNotEmpty>
        <isNotEmpty property="COMPANYID" prepend="AND">
           COMPANY_ID = #COMPANYID#
        </isNotEmpty>
        <isNotEmpty property="ITEMCODE" prepend="AND">
           ITEM_CODE = #ITEMCODE#
        </isNotEmpty>
            <isNotEmpty property="WORKORDERSEQ" prepend="AND">
               WORK_ORDER_SEQ = #WORKORDERSEQ#
            </isNotEmpty>
            <![CDATA[
					                )
					           AND WE.SEQ < (SELECT HV1.EMPLOYEE_SEQ
					                           FROM CB_WORK_ORDER_HISTORY_V HV1
					                          WHERE 1 = 1
            ]]>
		        <isNotEmpty property="ORGID" prepend="AND">
		           ORG_ID = #ORGID#
		        </isNotEmpty>
		        <isNotEmpty property="COMPANYID" prepend="AND">
		           COMPANY_ID = #COMPANYID#
		        </isNotEmpty>
		        <isNotEmpty property="ITEMCODE" prepend="AND">
		           ITEM_CODE = #ITEMCODE#
		        </isNotEmpty>
            <isNotEmpty property="WORKORDERID" prepend="AND">
               WORK_ORDER_ID = #WORKORDERID#
            </isNotEmpty>
            <isNotEmpty property="WORKORDERSEQ" prepend="AND">
               WORK_ORDER_SEQ = #WORKORDERSEQ#
            </isNotEmpty>
            <isNotEmpty property="FMLID" prepend="AND">
               FML_ID = #FMLID#
            </isNotEmpty>
            <isNotEmpty property="ORDERNO" prepend="AND">
               ORDER_NO = #ORDERNO#
            </isNotEmpty>
            <isNotEmpty property="CHECKLISTID" prepend="AND">
               CHECK_LIST_ID = #CHECKLISTID#
            </isNotEmpty>
            <![CDATA[
					                            ))
            ]]>
          </isEqual>
        </isNotEmpty>
        <isNotEmpty property="CHECKBIG" prepend="AND">
           CHECK_BIG = #CHECKBIG#
        </isNotEmpty>
        <isNotEmpty property="EMPLOYEENUMBER" prepend="AND">
           PERSON_ID = #EMPLOYEENUMBER#
        </isNotEmpty>
        <isNotEmpty property="EQUIPMENTCODE" prepend="AND">
           EQUIPMENT_CODE = #EQUIPMENTCODE#
        </isNotEmpty>
        <isNotEmpty property="TOTALRESULT" prepend="AND">
           TOTAL_RESULT = #TOTALRESULT#
        </isNotEmpty>
        <isNotEmpty property="SEARCHTO">
           <isNotEmpty property="SEARCHFROM" prepend="AND">
               (CHECK_DATE || ' ' || CHECK_START_TIME) BETWEEN (#SEARCHFROM# || ' 07:30') AND (TO_CHAR(TO_DATE(#SEARCHTO#, 'YYYY-MM-DD') + 1, 'YYYY-MM-DD') || ' 07:30')
           </isNotEmpty>
           <isEmpty property="SEARCHFROM" prepend="AND">
               CHECK_DATE1 = TO_DATE(#SEARCHTO#, 'YYYY-MM-DD')
           </isEmpty>
        </isNotEmpty>
        <isEmpty property="SEARCHTO">
           <isNotEmpty property="SEARCHFROM" prepend="AND">
               CHECK_DATE1 = TO_DATE(#SEARCHFROM#, 'YYYY-MM-DD')
           </isNotEmpty>
        </isEmpty>
        ORDER BY ORG_ID, COMPANY_ID, CHECK_DATE DESC, TO_DATE(CHECK_TIME, 'HH24:MI') DESC, ITEM_NAME, EQUIPMENT_NAME, CHECK_BIG, ORDER_NO
   </sql>

   <select id="work.order.history.list.select" parameterClass="java.util.Map"
       resultClass="java.util.HashMap" remapResults="true">
       <include refid="work.order.history.list.sql-select" />
       <include refid="work.order.history.list.sql-where" />
   </select>

   <select id="work.order.history.list.count" parameterClass="java.util.Map"
       resultClass="java.lang.Integer" remapResults="true">
       SELECT COUNT(*) FROM (
           <include refid="work.order.history.list.sql-select" />
           <include refid="work.order.history.list.sql-where" />
       ) TOT
   </select>
  <!-- 기간별 이력관리 종료 -->
  
  <!-- SPC 관리 시작 -->
  <sql id="work.order.chart.dummy.list.sql-select">
  <![CDATA[
  SELECT LEV AS RN
		      ,TO_CHAR(LEV) AS GUBUN
		      ,0 AS CNT
		      ,NULL AS X1
		      ,NULL AS X2
		      ,NULL AS X3
		      ,NULL AS X4
		      ,NULL AS X5
		      ,NULL AS X6
		      ,NULL AS X7
		      ,NULL AS X8
		      ,NULL AS X9
		      ,NULL AS X10
		      ,NULL AS X11
		      ,NULL AS X12
		      ,NULL AS X13
		      ,NULL AS X14
		      ,NULL AS X15
		      ,NULL AS X16
		      ,NULL AS X17
		      ,NULL AS X18
		      ,NULL AS X19
		      ,NULL AS X20
		      ,NULL AS X21
		      ,NULL AS X22
		      ,NULL AS X23
		      ,NULL AS X24
		      ,NULL AS X25
		  FROM (
		        SELECT LEVEL AS LEV
		          FROM DUAL
		        CONNECT BY LEVEL <= 5
		        ) TMP
		 WHERE 1=1
		 UNION ALL
		SELECT 6 AS RN
		      ,'합계' AS GUBUN
		      ,0 AS CNT
		      ,NULL AS X1
		      ,NULL AS X2
		      ,NULL AS X3
		      ,NULL AS X4
		      ,NULL AS X5
		      ,NULL AS X6
		      ,NULL AS X7
		      ,NULL AS X8
		      ,NULL AS X9
		      ,NULL AS X10
		      ,NULL AS X11
		      ,NULL AS X12
		      ,NULL AS X13
		      ,NULL AS X14
		      ,NULL AS X15
		      ,NULL AS X16
		      ,NULL AS X17
		      ,NULL AS X18
		      ,NULL AS X19
		      ,NULL AS X20
		      ,NULL AS X21
		      ,NULL AS X22
		      ,NULL AS X23
		      ,NULL AS X24
		      ,NULL AS X25
	  FROM DUAL
	 UNION ALL
	SELECT 7 AS RN
		      ,'평균' AS GUBUN
		      ,0 AS CNT
		      ,NULL AS X1
		      ,NULL AS X2
		      ,NULL AS X3
		      ,NULL AS X4
		      ,NULL AS X5
		      ,NULL AS X6
		      ,NULL AS X7
		      ,NULL AS X8
		      ,NULL AS X9
		      ,NULL AS X10
		      ,NULL AS X11
		      ,NULL AS X12
		      ,NULL AS X13
		      ,NULL AS X14
		      ,NULL AS X15
		      ,NULL AS X16
		      ,NULL AS X17
		      ,NULL AS X18
		      ,NULL AS X19
		      ,NULL AS X20
		      ,NULL AS X21
		      ,NULL AS X22
		      ,NULL AS X23
		      ,NULL AS X24
		      ,NULL AS X25
	  FROM DUAL
	 UNION ALL
	SELECT 8 AS RN
		      ,'편차' AS GUBUN
		      ,0 AS CNT
		      ,NULL AS X1
		      ,NULL AS X2
		      ,NULL AS X3
		      ,NULL AS X4
		      ,NULL AS X5
		      ,NULL AS X6
		      ,NULL AS X7
		      ,NULL AS X8
		      ,NULL AS X9
		      ,NULL AS X10
		      ,NULL AS X11
		      ,NULL AS X12
		      ,NULL AS X13
		      ,NULL AS X14
		      ,NULL AS X15
		      ,NULL AS X16
		      ,NULL AS X17
		      ,NULL AS X18
		      ,NULL AS X19
		      ,NULL AS X20
		      ,NULL AS X21
		      ,NULL AS X22
		      ,NULL AS X23
		      ,NULL AS X24
		      ,NULL AS X25
	  FROM DUAL
  ]]>
  </sql>
    
    <select id="work.order.chart.dummy.list.select" parameterClass="java.util.Map"
        resultClass="java.util.HashMap" remapResults="true">
        <include refid="work.order.chart.dummy.list.sql-select" />
    </select>
    
    <select id="work.order.chart.dummy.list.count" parameterClass="java.util.Map"
        resultClass="java.lang.Integer">
        SELECT COUNT(*) FROM (
            <include refid="work.order.chart.dummy.list.sql-select" />
        ) TOT
    </select>
  
    <sql id="work.order.chart.fml.list.sql-select1">
    <![CDATA[
    SELECT LEV AS RN
			      ,TO_CHAR(LEV) AS GUBUN
			      ,CB_REPORT_PKG.CB_SPC_CALC_CHECK_FIND(CM.ORG_ID
			                                           ,CM.COMPANY_ID
			                                           ,CM.ITEM_CODE
			                                           ,CM.ROUTING_ID
			                                           ,CM.CHECK_SEQ
			                                           ,TMP.SEARCH_FROM
			                                           ,TMP.SEARCH_TO
			                                           ,'SAMPLE_COUNT'
			                                           ,1
			                                            ) AS CNT
			      ,TO_NUMBER(CB_COMMON_STANDARD_PKG.CB_SPC_CHECK_DATA_FIND(CM.ORG_ID
			                                                    ,CM.COMPANY_ID
			                                                    ,CM.ITEM_CODE
			                                                    ,CM.CHECK_SEQ
			                                                    ,TMP.SEARCH_FROM
			                                                    ,TMP.SEARCH_TO
			                                                    ,LEV + ( 0  * 5 )
			                                                    ,'VALUE'
			                                                     )
			                                                     ) AS X1
			      ,TO_NUMBER(CB_COMMON_STANDARD_PKG.CB_SPC_CHECK_DATA_FIND(CM.ORG_ID
			                                                    ,CM.COMPANY_ID
			                                                    ,CM.ITEM_CODE
			                                                    ,CM.CHECK_SEQ
			                                                    ,TMP.SEARCH_FROM
			                                                    ,TMP.SEARCH_TO
			                                                    ,LEV + ( 1  * 5 )
			                                                    ,'VALUE'
			                                                     )
			                                                     ) AS X2
			      ,TO_NUMBER(CB_COMMON_STANDARD_PKG.CB_SPC_CHECK_DATA_FIND(CM.ORG_ID
			                                                    ,CM.COMPANY_ID
			                                                    ,CM.ITEM_CODE
			                                                    ,CM.CHECK_SEQ
			                                                    ,TMP.SEARCH_FROM
			                                                    ,TMP.SEARCH_TO
			                                                    ,LEV + ( 2  * 5 )
			                                                    ,'VALUE'
			                                                     )
			                                                     ) AS X3
			      ,TO_NUMBER(CB_COMMON_STANDARD_PKG.CB_SPC_CHECK_DATA_FIND(CM.ORG_ID
			                                                    ,CM.COMPANY_ID
			                                                    ,CM.ITEM_CODE
			                                                    ,CM.CHECK_SEQ
			                                                    ,TMP.SEARCH_FROM
			                                                    ,TMP.SEARCH_TO
			                                                    ,LEV + ( 3  * 5 )
			                                                    ,'VALUE'
			                                                     )
			                                                     ) AS X4
			      ,TO_NUMBER(CB_COMMON_STANDARD_PKG.CB_SPC_CHECK_DATA_FIND(CM.ORG_ID
			                                                    ,CM.COMPANY_ID
			                                                    ,CM.ITEM_CODE
			                                                    ,CM.CHECK_SEQ
			                                                    ,TMP.SEARCH_FROM
			                                                    ,TMP.SEARCH_TO
			                                                    ,LEV + ( 4  * 5 )
			                                                    ,'VALUE'
			                                                     )
			                                                     ) AS X5
			      ,TO_NUMBER(CB_COMMON_STANDARD_PKG.CB_SPC_CHECK_DATA_FIND(CM.ORG_ID
			                                                    ,CM.COMPANY_ID
			                                                    ,CM.ITEM_CODE
			                                                    ,CM.CHECK_SEQ
			                                                    ,TMP.SEARCH_FROM
			                                                    ,TMP.SEARCH_TO
			                                                    ,LEV + ( 5  * 5 )
			                                                    ,'VALUE'
			                                                     )
			                                                     ) AS X6
			      ,TO_NUMBER(CB_COMMON_STANDARD_PKG.CB_SPC_CHECK_DATA_FIND(CM.ORG_ID
			                                                    ,CM.COMPANY_ID
			                                                    ,CM.ITEM_CODE
			                                                    ,CM.CHECK_SEQ
			                                                    ,TMP.SEARCH_FROM
			                                                    ,TMP.SEARCH_TO
			                                                    ,LEV + ( 6  * 5 )
			                                                    ,'VALUE'
			                                                     )
			                                                     ) AS X7
			      ,TO_NUMBER(CB_COMMON_STANDARD_PKG.CB_SPC_CHECK_DATA_FIND(CM.ORG_ID
			                                                    ,CM.COMPANY_ID
			                                                    ,CM.ITEM_CODE
			                                                    ,CM.CHECK_SEQ
			                                                    ,TMP.SEARCH_FROM
			                                                    ,TMP.SEARCH_TO
			                                                    ,LEV + ( 7  * 5 )
			                                                    ,'VALUE'
			                                                     )
			                                                     ) AS X8
			      ,TO_NUMBER(CB_COMMON_STANDARD_PKG.CB_SPC_CHECK_DATA_FIND(CM.ORG_ID
			                                                    ,CM.COMPANY_ID
			                                                    ,CM.ITEM_CODE
			                                                    ,CM.CHECK_SEQ
			                                                    ,TMP.SEARCH_FROM
			                                                    ,TMP.SEARCH_TO
			                                                    ,LEV + ( 8  * 5 )
			                                                    ,'VALUE'
			                                                     )
			                                                     ) AS X9
			      ,TO_NUMBER(CB_COMMON_STANDARD_PKG.CB_SPC_CHECK_DATA_FIND(CM.ORG_ID
			                                                    ,CM.COMPANY_ID
			                                                    ,CM.ITEM_CODE
			                                                    ,CM.CHECK_SEQ
			                                                    ,TMP.SEARCH_FROM
			                                                    ,TMP.SEARCH_TO
			                                                    ,LEV + ( 9  * 5 )
			                                                    ,'VALUE'
			                                                     )
			                                                     ) AS X10
			      ,TO_NUMBER(CB_COMMON_STANDARD_PKG.CB_SPC_CHECK_DATA_FIND(CM.ORG_ID
			                                                    ,CM.COMPANY_ID
			                                                    ,CM.ITEM_CODE
			                                                    ,CM.CHECK_SEQ
			                                                    ,TMP.SEARCH_FROM
			                                                    ,TMP.SEARCH_TO
			                                                    ,LEV + ( 10 * 5 )
			                                                    ,'VALUE'
			                                                     )
			                                                     ) AS X11
			      ,TO_NUMBER(CB_COMMON_STANDARD_PKG.CB_SPC_CHECK_DATA_FIND(CM.ORG_ID
			                                                    ,CM.COMPANY_ID
			                                                    ,CM.ITEM_CODE
			                                                    ,CM.CHECK_SEQ
			                                                    ,TMP.SEARCH_FROM
			                                                    ,TMP.SEARCH_TO
			                                                    ,LEV + ( 11 * 5 )
			                                                    ,'VALUE'
			                                                     )
			                                                     ) AS X12
			      ,TO_NUMBER(CB_COMMON_STANDARD_PKG.CB_SPC_CHECK_DATA_FIND(CM.ORG_ID
			                                                    ,CM.COMPANY_ID
			                                                    ,CM.ITEM_CODE
			                                                    ,CM.CHECK_SEQ
			                                                    ,TMP.SEARCH_FROM
			                                                    ,TMP.SEARCH_TO
			                                                    ,LEV + ( 12 * 5 )
			                                                    ,'VALUE'
			                                                     )
			                                                     ) AS X13
			      ,TO_NUMBER(CB_COMMON_STANDARD_PKG.CB_SPC_CHECK_DATA_FIND(CM.ORG_ID
			                                                    ,CM.COMPANY_ID
			                                                    ,CM.ITEM_CODE
			                                                    ,CM.CHECK_SEQ
			                                                    ,TMP.SEARCH_FROM
			                                                    ,TMP.SEARCH_TO
			                                                    ,LEV + ( 13 * 5 )
			                                                    ,'VALUE'
			                                                     )
			                                                     ) AS X14
			      ,TO_NUMBER(CB_COMMON_STANDARD_PKG.CB_SPC_CHECK_DATA_FIND(CM.ORG_ID
			                                                    ,CM.COMPANY_ID
			                                                    ,CM.ITEM_CODE
			                                                    ,CM.CHECK_SEQ
			                                                    ,TMP.SEARCH_FROM
			                                                    ,TMP.SEARCH_TO
			                                                    ,LEV + ( 14 * 5 )
			                                                    ,'VALUE'
			                                                     )
			                                                     ) AS X15
			      ,TO_NUMBER(CB_COMMON_STANDARD_PKG.CB_SPC_CHECK_DATA_FIND(CM.ORG_ID
			                                                    ,CM.COMPANY_ID
			                                                    ,CM.ITEM_CODE
			                                                    ,CM.CHECK_SEQ
			                                                    ,TMP.SEARCH_FROM
			                                                    ,TMP.SEARCH_TO
			                                                    ,LEV + ( 15 * 5 )
			                                                    ,'VALUE'
			                                                     )
			                                                     ) AS X16
			      ,TO_NUMBER(CB_COMMON_STANDARD_PKG.CB_SPC_CHECK_DATA_FIND(CM.ORG_ID
			                                                    ,CM.COMPANY_ID
			                                                    ,CM.ITEM_CODE
			                                                    ,CM.CHECK_SEQ
			                                                    ,TMP.SEARCH_FROM
			                                                    ,TMP.SEARCH_TO
			                                                    ,LEV + ( 16 * 5 )
			                                                    ,'VALUE'
			                                                     )
			                                                     ) AS X17
			      ,TO_NUMBER(CB_COMMON_STANDARD_PKG.CB_SPC_CHECK_DATA_FIND(CM.ORG_ID
			                                                    ,CM.COMPANY_ID
			                                                    ,CM.ITEM_CODE
			                                                    ,CM.CHECK_SEQ
			                                                    ,TMP.SEARCH_FROM
			                                                    ,TMP.SEARCH_TO
			                                                    ,LEV + ( 17 * 5 )
			                                                    ,'VALUE'
			                                                     )
			                                                     ) AS X18
			      ,TO_NUMBER(CB_COMMON_STANDARD_PKG.CB_SPC_CHECK_DATA_FIND(CM.ORG_ID
			                                                    ,CM.COMPANY_ID
			                                                    ,CM.ITEM_CODE
			                                                    ,CM.CHECK_SEQ
			                                                    ,TMP.SEARCH_FROM
			                                                    ,TMP.SEARCH_TO
			                                                    ,LEV + ( 18 * 5 )
			                                                    ,'VALUE'
			                                                     )
			                                                     ) AS X19
			      ,TO_NUMBER(CB_COMMON_STANDARD_PKG.CB_SPC_CHECK_DATA_FIND(CM.ORG_ID
			                                                    ,CM.COMPANY_ID
			                                                    ,CM.ITEM_CODE
			                                                    ,CM.CHECK_SEQ
			                                                    ,TMP.SEARCH_FROM
			                                                    ,TMP.SEARCH_TO
			                                                    ,LEV + ( 19 * 5 )
			                                                    ,'VALUE'
			                                                     )
			                                                     ) AS X20
			      ,TO_NUMBER(CB_COMMON_STANDARD_PKG.CB_SPC_CHECK_DATA_FIND(CM.ORG_ID
			                                                    ,CM.COMPANY_ID
			                                                    ,CM.ITEM_CODE
			                                                    ,CM.CHECK_SEQ
			                                                    ,TMP.SEARCH_FROM
			                                                    ,TMP.SEARCH_TO
			                                                    ,LEV + ( 20 * 5 )
			                                                    ,'VALUE'
			                                                     )
			                                                     ) AS X21
			      ,TO_NUMBER(CB_COMMON_STANDARD_PKG.CB_SPC_CHECK_DATA_FIND(CM.ORG_ID
			                                                    ,CM.COMPANY_ID
			                                                    ,CM.ITEM_CODE
			                                                    ,CM.CHECK_SEQ
			                                                    ,TMP.SEARCH_FROM
			                                                    ,TMP.SEARCH_TO
			                                                    ,LEV + ( 21 * 5 )
			                                                    ,'VALUE'
			                                                     )
			                                                     ) AS X22
			      ,TO_NUMBER(CB_COMMON_STANDARD_PKG.CB_SPC_CHECK_DATA_FIND(CM.ORG_ID
			                                                    ,CM.COMPANY_ID
			                                                    ,CM.ITEM_CODE
			                                                    ,CM.CHECK_SEQ
			                                                    ,TMP.SEARCH_FROM
			                                                    ,TMP.SEARCH_TO
			                                                    ,LEV + ( 22 * 5 )
			                                                    ,'VALUE'
			                                                     )
			                                                     ) AS X23
			      ,TO_NUMBER(CB_COMMON_STANDARD_PKG.CB_SPC_CHECK_DATA_FIND(CM.ORG_ID
			                                                    ,CM.COMPANY_ID
			                                                    ,CM.ITEM_CODE
			                                                    ,CM.CHECK_SEQ
			                                                    ,TMP.SEARCH_FROM
			                                                    ,TMP.SEARCH_TO
			                                                    ,LEV + ( 23 * 5 )
			                                                    ,'VALUE'
			                                                     )
			                                                     ) AS X24
			      ,TO_NUMBER(CB_COMMON_STANDARD_PKG.CB_SPC_CHECK_DATA_FIND(CM.ORG_ID
			                                                    ,CM.COMPANY_ID
			                                                    ,CM.ITEM_CODE
			                                                    ,CM.CHECK_SEQ
			                                                    ,TMP.SEARCH_FROM
			                                                    ,TMP.SEARCH_TO
			                                                    ,LEV + ( 24 * 5 )
			                                                    ,'VALUE'
			                                                     )
			                                                     ) AS X25
		  FROM CB_CHECK_MASTER CM
		      ,(
		        SELECT LEVEL AS LEV
		              ,#ORGID# AS ORG_ID
		              ,#COMPANYID# AS COMPANY_ID
		              ,#ITEMCODE# AS ITEM_CODE
		              ,#CHECKBIG# AS CHECK_BIG
		              ,#CHECKLISTID# AS CHECK_LIST_ID
		              ,TO_DATE(#SEARCHFROM#, 'YYYY-MM-DD') AS SEARCH_FROM
		              ,TO_DATE(#SEARCHTO#, 'YYYY-MM-DD') AS SEARCH_TO
		          FROM DUAL
		        CONNECT BY LEVEL <= 5
		        ) TMP
		 WHERE 1=1
		   AND CM.ORG_ID = TMP.ORG_ID
		   AND CM.COMPANY_ID = TMP.COMPANY_ID
		   AND CM.ITEM_CODE = TMP.ITEM_CODE
		   AND CM.CHECK_BIG = TMP.CHECK_BIG
		   AND CM.CHECK_SEQ = TMP.CHECK_LIST_ID
		]]>
    </sql>
    
    <sql id="work.order.chart.fml.list.sql-select2">
    <![CDATA[
    SELECT 6 AS RN
		      ,'합계' AS GUBUN
		      ,CB_REPORT_PKG.CB_SPC_CALC_CHECK_FIND(CM.ORG_ID
		                                           ,CM.COMPANY_ID
		                                           ,CM.ITEM_CODE
		                                           ,CM.ROUTING_ID
		                                           ,CM.CHECK_SEQ
		                                           ,TMP.SEARCH_FROM
		                                           ,TMP.SEARCH_TO
		                                           ,'SAMPLE_COUNT'
		                                           ,1
		                                            ) AS CNT
		      ,CB_REPORT_PKG.CB_SPC_CALC_CHECK_FIND(CM.ORG_ID
		                                           ,CM.COMPANY_ID
		                                           ,CM.ITEM_CODE
		                                           ,CM.ROUTING_ID
		                                           ,CM.CHECK_SEQ
		                                           ,TMP.SEARCH_FROM
		                                           ,TMP.SEARCH_TO
		                                           ,'SUM'
		                                           ,1
		                                            ) AS X1
		      ,CB_REPORT_PKG.CB_SPC_CALC_CHECK_FIND(CM.ORG_ID
		                                           ,CM.COMPANY_ID
		                                           ,CM.ITEM_CODE
		                                           ,CM.ROUTING_ID
		                                           ,CM.CHECK_SEQ
		                                           ,TMP.SEARCH_FROM
		                                           ,TMP.SEARCH_TO
		                                           ,'SUM'
		                                           ,2
		                                            ) AS X2
		      ,CB_REPORT_PKG.CB_SPC_CALC_CHECK_FIND(CM.ORG_ID
		                                           ,CM.COMPANY_ID
		                                           ,CM.ITEM_CODE
		                                           ,CM.ROUTING_ID
		                                           ,CM.CHECK_SEQ
		                                           ,TMP.SEARCH_FROM
		                                           ,TMP.SEARCH_TO
		                                           ,'SUM'
		                                           ,3
		                                            ) AS X3
		      ,CB_REPORT_PKG.CB_SPC_CALC_CHECK_FIND(CM.ORG_ID
		                                           ,CM.COMPANY_ID
		                                           ,CM.ITEM_CODE
		                                           ,CM.ROUTING_ID
		                                           ,CM.CHECK_SEQ
		                                           ,TMP.SEARCH_FROM
		                                           ,TMP.SEARCH_TO
		                                           ,'SUM'
		                                           ,4
		                                            ) AS X4
		      ,CB_REPORT_PKG.CB_SPC_CALC_CHECK_FIND(CM.ORG_ID
		                                           ,CM.COMPANY_ID
		                                           ,CM.ITEM_CODE
		                                           ,CM.ROUTING_ID
		                                           ,CM.CHECK_SEQ
		                                           ,TMP.SEARCH_FROM
		                                           ,TMP.SEARCH_TO
		                                           ,'SUM'
		                                           ,5
		                                            ) AS X5
		      ,CB_REPORT_PKG.CB_SPC_CALC_CHECK_FIND(CM.ORG_ID
		                                           ,CM.COMPANY_ID
		                                           ,CM.ITEM_CODE
		                                           ,CM.ROUTING_ID
		                                           ,CM.CHECK_SEQ
		                                           ,TMP.SEARCH_FROM
		                                           ,TMP.SEARCH_TO
		                                           ,'SUM'
		                                           ,6
		                                            ) AS X6
		      ,CB_REPORT_PKG.CB_SPC_CALC_CHECK_FIND(CM.ORG_ID
		                                           ,CM.COMPANY_ID
		                                           ,CM.ITEM_CODE
		                                           ,CM.ROUTING_ID
		                                           ,CM.CHECK_SEQ
		                                           ,TMP.SEARCH_FROM
		                                           ,TMP.SEARCH_TO
		                                           ,'SUM'
		                                           ,7
		                                            ) AS X7
		      ,CB_REPORT_PKG.CB_SPC_CALC_CHECK_FIND(CM.ORG_ID
		                                           ,CM.COMPANY_ID
		                                           ,CM.ITEM_CODE
		                                           ,CM.ROUTING_ID
		                                           ,CM.CHECK_SEQ
		                                           ,TMP.SEARCH_FROM
		                                           ,TMP.SEARCH_TO
		                                           ,'SUM'
		                                           ,8
		                                            ) AS X8
		      ,CB_REPORT_PKG.CB_SPC_CALC_CHECK_FIND(CM.ORG_ID
		                                           ,CM.COMPANY_ID
		                                           ,CM.ITEM_CODE
		                                           ,CM.ROUTING_ID
		                                           ,CM.CHECK_SEQ
		                                           ,TMP.SEARCH_FROM
		                                           ,TMP.SEARCH_TO
		                                           ,'SUM'
		                                           ,9
		                                            ) AS X9
		      ,CB_REPORT_PKG.CB_SPC_CALC_CHECK_FIND(CM.ORG_ID
		                                           ,CM.COMPANY_ID
		                                           ,CM.ITEM_CODE
		                                           ,CM.ROUTING_ID
		                                           ,CM.CHECK_SEQ
		                                           ,TMP.SEARCH_FROM
		                                           ,TMP.SEARCH_TO
		                                           ,'SUM'
		                                           ,10
		                                            ) AS X10
		      ,CB_REPORT_PKG.CB_SPC_CALC_CHECK_FIND(CM.ORG_ID
		                                           ,CM.COMPANY_ID
		                                           ,CM.ITEM_CODE
		                                           ,CM.ROUTING_ID
		                                           ,CM.CHECK_SEQ
		                                           ,TMP.SEARCH_FROM
		                                           ,TMP.SEARCH_TO
		                                           ,'SUM'
		                                           ,11
		                                            ) AS X11
		      ,CB_REPORT_PKG.CB_SPC_CALC_CHECK_FIND(CM.ORG_ID
		                                           ,CM.COMPANY_ID
		                                           ,CM.ITEM_CODE
		                                           ,CM.ROUTING_ID
		                                           ,CM.CHECK_SEQ
		                                           ,TMP.SEARCH_FROM
		                                           ,TMP.SEARCH_TO
		                                           ,'SUM'
		                                           ,12
		                                            ) AS X12
		      ,CB_REPORT_PKG.CB_SPC_CALC_CHECK_FIND(CM.ORG_ID
		                                           ,CM.COMPANY_ID
		                                           ,CM.ITEM_CODE
		                                           ,CM.ROUTING_ID
		                                           ,CM.CHECK_SEQ
		                                           ,TMP.SEARCH_FROM
		                                           ,TMP.SEARCH_TO
		                                           ,'SUM'
		                                           ,13
		                                            ) AS X13
		      ,CB_REPORT_PKG.CB_SPC_CALC_CHECK_FIND(CM.ORG_ID
		                                           ,CM.COMPANY_ID
		                                           ,CM.ITEM_CODE
		                                           ,CM.ROUTING_ID
		                                           ,CM.CHECK_SEQ
		                                           ,TMP.SEARCH_FROM
		                                           ,TMP.SEARCH_TO
		                                           ,'SUM'
		                                           ,14
		                                            ) AS X14
		      ,CB_REPORT_PKG.CB_SPC_CALC_CHECK_FIND(CM.ORG_ID
		                                           ,CM.COMPANY_ID
		                                           ,CM.ITEM_CODE
		                                           ,CM.ROUTING_ID
		                                           ,CM.CHECK_SEQ
		                                           ,TMP.SEARCH_FROM
		                                           ,TMP.SEARCH_TO
		                                           ,'SUM'
		                                           ,15
		                                            ) AS X15
		      ,CB_REPORT_PKG.CB_SPC_CALC_CHECK_FIND(CM.ORG_ID
		                                           ,CM.COMPANY_ID
		                                           ,CM.ITEM_CODE
		                                           ,CM.ROUTING_ID
		                                           ,CM.CHECK_SEQ
		                                           ,TMP.SEARCH_FROM
		                                           ,TMP.SEARCH_TO
		                                           ,'SUM'
		                                           ,16
		                                            ) AS X16
		      ,CB_REPORT_PKG.CB_SPC_CALC_CHECK_FIND(CM.ORG_ID
		                                           ,CM.COMPANY_ID
		                                           ,CM.ITEM_CODE
		                                           ,CM.ROUTING_ID
		                                           ,CM.CHECK_SEQ
		                                           ,TMP.SEARCH_FROM
		                                           ,TMP.SEARCH_TO
		                                           ,'SUM'
		                                           ,17
		                                            ) AS X17
		      ,CB_REPORT_PKG.CB_SPC_CALC_CHECK_FIND(CM.ORG_ID
		                                           ,CM.COMPANY_ID
		                                           ,CM.ITEM_CODE
		                                           ,CM.ROUTING_ID
		                                           ,CM.CHECK_SEQ
		                                           ,TMP.SEARCH_FROM
		                                           ,TMP.SEARCH_TO
		                                           ,'SUM'
		                                           ,18
		                                            ) AS X18
		      ,CB_REPORT_PKG.CB_SPC_CALC_CHECK_FIND(CM.ORG_ID
		                                           ,CM.COMPANY_ID
		                                           ,CM.ITEM_CODE
		                                           ,CM.ROUTING_ID
		                                           ,CM.CHECK_SEQ
		                                           ,TMP.SEARCH_FROM
		                                           ,TMP.SEARCH_TO
		                                           ,'SUM'
		                                           ,19
		                                            ) AS X19
		      ,CB_REPORT_PKG.CB_SPC_CALC_CHECK_FIND(CM.ORG_ID
		                                           ,CM.COMPANY_ID
		                                           ,CM.ITEM_CODE
		                                           ,CM.ROUTING_ID
		                                           ,CM.CHECK_SEQ
		                                           ,TMP.SEARCH_FROM
		                                           ,TMP.SEARCH_TO
		                                           ,'SUM'
		                                           ,20
		                                            ) AS X20
		      ,CB_REPORT_PKG.CB_SPC_CALC_CHECK_FIND(CM.ORG_ID
		                                           ,CM.COMPANY_ID
		                                           ,CM.ITEM_CODE
		                                           ,CM.ROUTING_ID
		                                           ,CM.CHECK_SEQ
		                                           ,TMP.SEARCH_FROM
		                                           ,TMP.SEARCH_TO
		                                           ,'SUM'
		                                           ,21
		                                            ) AS X21
		      ,CB_REPORT_PKG.CB_SPC_CALC_CHECK_FIND(CM.ORG_ID
		                                           ,CM.COMPANY_ID
		                                           ,CM.ITEM_CODE
		                                           ,CM.ROUTING_ID
		                                           ,CM.CHECK_SEQ
		                                           ,TMP.SEARCH_FROM
		                                           ,TMP.SEARCH_TO
		                                           ,'SUM'
		                                           ,22
		                                            ) AS X22
		      ,CB_REPORT_PKG.CB_SPC_CALC_CHECK_FIND(CM.ORG_ID
		                                           ,CM.COMPANY_ID
		                                           ,CM.ITEM_CODE
		                                           ,CM.ROUTING_ID
		                                           ,CM.CHECK_SEQ
		                                           ,TMP.SEARCH_FROM
		                                           ,TMP.SEARCH_TO
		                                           ,'SUM'
		                                           ,23
		                                            ) AS X23
		      ,CB_REPORT_PKG.CB_SPC_CALC_CHECK_FIND(CM.ORG_ID
		                                           ,CM.COMPANY_ID
		                                           ,CM.ITEM_CODE
		                                           ,CM.ROUTING_ID
		                                           ,CM.CHECK_SEQ
		                                           ,TMP.SEARCH_FROM
		                                           ,TMP.SEARCH_TO
		                                           ,'SUM'
		                                           ,24
		                                            ) AS X24
		      ,CB_REPORT_PKG.CB_SPC_CALC_CHECK_FIND(CM.ORG_ID
		                                           ,CM.COMPANY_ID
		                                           ,CM.ITEM_CODE
		                                           ,CM.ROUTING_ID
		                                           ,CM.CHECK_SEQ
		                                           ,TMP.SEARCH_FROM
		                                           ,TMP.SEARCH_TO
		                                           ,'SUM'
		                                           ,25
		                                            ) AS X25
		  FROM CB_CHECK_MASTER CM
		      ,(
		        SELECT #ORGID# AS ORG_ID
		              ,#COMPANYID# AS COMPANY_ID
		              ,#ITEMCODE# AS ITEM_CODE
		              ,#CHECKBIG# AS CHECK_BIG
		              ,#CHECKLISTID# AS CHECK_LIST_ID
		              ,TO_DATE(#SEARCHFROM#, 'YYYY-MM-DD') AS SEARCH_FROM
		              ,TO_DATE(#SEARCHTO#, 'YYYY-MM-DD') AS SEARCH_TO
		          FROM DUAL
		        ) TMP
		 WHERE 1=1
		   AND CM.ORG_ID = TMP.ORG_ID
		   AND CM.COMPANY_ID = TMP.COMPANY_ID
		   AND CM.ITEM_CODE = TMP.ITEM_CODE
		   AND CM.CHECK_BIG = TMP.CHECK_BIG
		   AND CM.CHECK_SEQ = TMP.CHECK_LIST_ID
    ]]>
    </sql>
    
    <sql id="work.order.chart.fml.list.sql-select3">
    <![CDATA[
    SELECT 7 AS RN
		      ,'평균' AS GUBUN
		      ,CB_REPORT_PKG.CB_SPC_CALC_CHECK_FIND(CM.ORG_ID
		                                           ,CM.COMPANY_ID
		                                           ,CM.ITEM_CODE
		                                           ,CM.ROUTING_ID
		                                           ,CM.CHECK_SEQ
		                                           ,TMP.SEARCH_FROM
		                                           ,TMP.SEARCH_TO
		                                           ,'SAMPLE_COUNT'
		                                           ,1
		                                            ) AS CNT
		      ,CB_REPORT_PKG.CB_SPC_CALC_CHECK_FIND(CM.ORG_ID
		                                           ,CM.COMPANY_ID
		                                           ,CM.ITEM_CODE
		                                           ,CM.ROUTING_ID
		                                           ,CM.CHECK_SEQ
		                                           ,TMP.SEARCH_FROM
		                                           ,TMP.SEARCH_TO
		                                           ,'AVERAGE'
		                                           ,1
		                                            ) AS X1
		      ,CB_REPORT_PKG.CB_SPC_CALC_CHECK_FIND(CM.ORG_ID
		                                           ,CM.COMPANY_ID
		                                           ,CM.ITEM_CODE
		                                           ,CM.ROUTING_ID
		                                           ,CM.CHECK_SEQ
		                                           ,TMP.SEARCH_FROM
		                                           ,TMP.SEARCH_TO
		                                           ,'AVERAGE'
		                                           ,2
		                                            ) AS X2
		      ,CB_REPORT_PKG.CB_SPC_CALC_CHECK_FIND(CM.ORG_ID
		                                           ,CM.COMPANY_ID
		                                           ,CM.ITEM_CODE
		                                           ,CM.ROUTING_ID
		                                           ,CM.CHECK_SEQ
		                                           ,TMP.SEARCH_FROM
		                                           ,TMP.SEARCH_TO
		                                           ,'AVERAGE'
		                                           ,3
		                                            ) AS X3
		      ,CB_REPORT_PKG.CB_SPC_CALC_CHECK_FIND(CM.ORG_ID
		                                           ,CM.COMPANY_ID
		                                           ,CM.ITEM_CODE
		                                           ,CM.ROUTING_ID
		                                           ,CM.CHECK_SEQ
		                                           ,TMP.SEARCH_FROM
		                                           ,TMP.SEARCH_TO
		                                           ,'AVERAGE'
		                                           ,4
		                                            ) AS X4
		      ,CB_REPORT_PKG.CB_SPC_CALC_CHECK_FIND(CM.ORG_ID
		                                           ,CM.COMPANY_ID
		                                           ,CM.ITEM_CODE
		                                           ,CM.ROUTING_ID
		                                           ,CM.CHECK_SEQ
		                                           ,TMP.SEARCH_FROM
		                                           ,TMP.SEARCH_TO
		                                           ,'AVERAGE'
		                                           ,5
		                                            ) AS X5
		      ,CB_REPORT_PKG.CB_SPC_CALC_CHECK_FIND(CM.ORG_ID
		                                           ,CM.COMPANY_ID
		                                           ,CM.ITEM_CODE
		                                           ,CM.ROUTING_ID
		                                           ,CM.CHECK_SEQ
		                                           ,TMP.SEARCH_FROM
		                                           ,TMP.SEARCH_TO
		                                           ,'AVERAGE'
		                                           ,6
		                                            ) AS X6
		      ,CB_REPORT_PKG.CB_SPC_CALC_CHECK_FIND(CM.ORG_ID
		                                           ,CM.COMPANY_ID
		                                           ,CM.ITEM_CODE
		                                           ,CM.ROUTING_ID
		                                           ,CM.CHECK_SEQ
		                                           ,TMP.SEARCH_FROM
		                                           ,TMP.SEARCH_TO
		                                           ,'AVERAGE'
		                                           ,7
		                                            ) AS X7
		      ,CB_REPORT_PKG.CB_SPC_CALC_CHECK_FIND(CM.ORG_ID
		                                           ,CM.COMPANY_ID
		                                           ,CM.ITEM_CODE
		                                           ,CM.ROUTING_ID
		                                           ,CM.CHECK_SEQ
		                                           ,TMP.SEARCH_FROM
		                                           ,TMP.SEARCH_TO
		                                           ,'AVERAGE'
		                                           ,8
		                                            ) AS X8
		      ,CB_REPORT_PKG.CB_SPC_CALC_CHECK_FIND(CM.ORG_ID
		                                           ,CM.COMPANY_ID
		                                           ,CM.ITEM_CODE
		                                           ,CM.ROUTING_ID
		                                           ,CM.CHECK_SEQ
		                                           ,TMP.SEARCH_FROM
		                                           ,TMP.SEARCH_TO
		                                           ,'AVERAGE'
		                                           ,9
		                                            ) AS X9
		      ,CB_REPORT_PKG.CB_SPC_CALC_CHECK_FIND(CM.ORG_ID
		                                           ,CM.COMPANY_ID
		                                           ,CM.ITEM_CODE
		                                           ,CM.ROUTING_ID
		                                           ,CM.CHECK_SEQ
		                                           ,TMP.SEARCH_FROM
		                                           ,TMP.SEARCH_TO
		                                           ,'AVERAGE'
		                                           ,10
		                                            ) AS X10
		      ,CB_REPORT_PKG.CB_SPC_CALC_CHECK_FIND(CM.ORG_ID
		                                           ,CM.COMPANY_ID
		                                           ,CM.ITEM_CODE
		                                           ,CM.ROUTING_ID
		                                           ,CM.CHECK_SEQ
		                                           ,TMP.SEARCH_FROM
		                                           ,TMP.SEARCH_TO
		                                           ,'AVERAGE'
		                                           ,11
		                                            ) AS X11
		      ,CB_REPORT_PKG.CB_SPC_CALC_CHECK_FIND(CM.ORG_ID
		                                           ,CM.COMPANY_ID
		                                           ,CM.ITEM_CODE
		                                           ,CM.ROUTING_ID
		                                           ,CM.CHECK_SEQ
		                                           ,TMP.SEARCH_FROM
		                                           ,TMP.SEARCH_TO
		                                           ,'AVERAGE'
		                                           ,12
		                                            ) AS X12
		      ,CB_REPORT_PKG.CB_SPC_CALC_CHECK_FIND(CM.ORG_ID
		                                           ,CM.COMPANY_ID
		                                           ,CM.ITEM_CODE
		                                           ,CM.ROUTING_ID
		                                           ,CM.CHECK_SEQ
		                                           ,TMP.SEARCH_FROM
		                                           ,TMP.SEARCH_TO
		                                           ,'AVERAGE'
		                                           ,13
		                                            ) AS X13
		      ,CB_REPORT_PKG.CB_SPC_CALC_CHECK_FIND(CM.ORG_ID
		                                           ,CM.COMPANY_ID
		                                           ,CM.ITEM_CODE
		                                           ,CM.ROUTING_ID
		                                           ,CM.CHECK_SEQ
		                                           ,TMP.SEARCH_FROM
		                                           ,TMP.SEARCH_TO
		                                           ,'AVERAGE'
		                                           ,14
		                                            ) AS X14
		      ,CB_REPORT_PKG.CB_SPC_CALC_CHECK_FIND(CM.ORG_ID
		                                           ,CM.COMPANY_ID
		                                           ,CM.ITEM_CODE
		                                           ,CM.ROUTING_ID
		                                           ,CM.CHECK_SEQ
		                                           ,TMP.SEARCH_FROM
		                                           ,TMP.SEARCH_TO
		                                           ,'AVERAGE'
		                                           ,15
		                                            ) AS X15
		      ,CB_REPORT_PKG.CB_SPC_CALC_CHECK_FIND(CM.ORG_ID
		                                           ,CM.COMPANY_ID
		                                           ,CM.ITEM_CODE
		                                           ,CM.ROUTING_ID
		                                           ,CM.CHECK_SEQ
		                                           ,TMP.SEARCH_FROM
		                                           ,TMP.SEARCH_TO
		                                           ,'AVERAGE'
		                                           ,16
		                                            ) AS X16
		      ,CB_REPORT_PKG.CB_SPC_CALC_CHECK_FIND(CM.ORG_ID
		                                           ,CM.COMPANY_ID
		                                           ,CM.ITEM_CODE
		                                           ,CM.ROUTING_ID
		                                           ,CM.CHECK_SEQ
		                                           ,TMP.SEARCH_FROM
		                                           ,TMP.SEARCH_TO
		                                           ,'AVERAGE'
		                                           ,17
		                                            ) AS X17
		      ,CB_REPORT_PKG.CB_SPC_CALC_CHECK_FIND(CM.ORG_ID
		                                           ,CM.COMPANY_ID
		                                           ,CM.ITEM_CODE
		                                           ,CM.ROUTING_ID
		                                           ,CM.CHECK_SEQ
		                                           ,TMP.SEARCH_FROM
		                                           ,TMP.SEARCH_TO
		                                           ,'AVERAGE'
		                                           ,18
		                                            ) AS X18
		      ,CB_REPORT_PKG.CB_SPC_CALC_CHECK_FIND(CM.ORG_ID
		                                           ,CM.COMPANY_ID
		                                           ,CM.ITEM_CODE
		                                           ,CM.ROUTING_ID
		                                           ,CM.CHECK_SEQ
		                                           ,TMP.SEARCH_FROM
		                                           ,TMP.SEARCH_TO
		                                           ,'AVERAGE'
		                                           ,19
		                                            ) AS X19
		      ,CB_REPORT_PKG.CB_SPC_CALC_CHECK_FIND(CM.ORG_ID
		                                           ,CM.COMPANY_ID
		                                           ,CM.ITEM_CODE
		                                           ,CM.ROUTING_ID
		                                           ,CM.CHECK_SEQ
		                                           ,TMP.SEARCH_FROM
		                                           ,TMP.SEARCH_TO
		                                           ,'AVERAGE'
		                                           ,20
		                                            ) AS X20
		      ,CB_REPORT_PKG.CB_SPC_CALC_CHECK_FIND(CM.ORG_ID
		                                           ,CM.COMPANY_ID
		                                           ,CM.ITEM_CODE
		                                           ,CM.ROUTING_ID
		                                           ,CM.CHECK_SEQ
		                                           ,TMP.SEARCH_FROM
		                                           ,TMP.SEARCH_TO
		                                           ,'AVERAGE'
		                                           ,21
		                                            ) AS X21
		      ,CB_REPORT_PKG.CB_SPC_CALC_CHECK_FIND(CM.ORG_ID
		                                           ,CM.COMPANY_ID
		                                           ,CM.ITEM_CODE
		                                           ,CM.ROUTING_ID
		                                           ,CM.CHECK_SEQ
		                                           ,TMP.SEARCH_FROM
		                                           ,TMP.SEARCH_TO
		                                           ,'AVERAGE'
		                                           ,22
		                                            ) AS X22
		      ,CB_REPORT_PKG.CB_SPC_CALC_CHECK_FIND(CM.ORG_ID
		                                           ,CM.COMPANY_ID
		                                           ,CM.ITEM_CODE
		                                           ,CM.ROUTING_ID
		                                           ,CM.CHECK_SEQ
		                                           ,TMP.SEARCH_FROM
		                                           ,TMP.SEARCH_TO
		                                           ,'AVERAGE'
		                                           ,23
		                                            ) AS X23
		      ,CB_REPORT_PKG.CB_SPC_CALC_CHECK_FIND(CM.ORG_ID
		                                           ,CM.COMPANY_ID
		                                           ,CM.ITEM_CODE
		                                           ,CM.ROUTING_ID
		                                           ,CM.CHECK_SEQ
		                                           ,TMP.SEARCH_FROM
		                                           ,TMP.SEARCH_TO
		                                           ,'AVERAGE'
		                                           ,24
		                                            ) AS X24
		      ,CB_REPORT_PKG.CB_SPC_CALC_CHECK_FIND(CM.ORG_ID
		                                           ,CM.COMPANY_ID
		                                           ,CM.ITEM_CODE
		                                           ,CM.ROUTING_ID
		                                           ,CM.CHECK_SEQ
		                                           ,TMP.SEARCH_FROM
		                                           ,TMP.SEARCH_TO
		                                           ,'AVERAGE'
		                                           ,25
		                                            ) AS X25
		  FROM CB_CHECK_MASTER CM
		      ,(
		        SELECT #ORGID# AS ORG_ID
		              ,#COMPANYID# AS COMPANY_ID
		              ,#ITEMCODE# AS ITEM_CODE
		              ,#CHECKBIG# AS CHECK_BIG
		              ,#CHECKLISTID# AS CHECK_LIST_ID
		              ,TO_DATE(#SEARCHFROM#, 'YYYY-MM-DD') AS SEARCH_FROM
		              ,TO_DATE(#SEARCHTO#, 'YYYY-MM-DD') AS SEARCH_TO
		          FROM DUAL
		        ) TMP
		 WHERE 1=1
		   AND CM.ORG_ID = TMP.ORG_ID
		   AND CM.COMPANY_ID = TMP.COMPANY_ID
		   AND CM.ITEM_CODE = TMP.ITEM_CODE
		   AND CM.CHECK_BIG = TMP.CHECK_BIG
		   AND CM.CHECK_SEQ = TMP.CHECK_LIST_ID
    ]]>
    </sql>
    
    <sql id="work.order.chart.fml.list.sql-select4">
    <![CDATA[
    SELECT 8 AS RN
		      ,'편차' AS GUBUN
		      ,CB_REPORT_PKG.CB_SPC_CALC_CHECK_FIND(CM.ORG_ID
		                                           ,CM.COMPANY_ID
		                                           ,CM.ITEM_CODE
		                                           ,CM.ROUTING_ID
		                                           ,CM.CHECK_SEQ
		                                           ,TMP.SEARCH_FROM
		                                           ,TMP.SEARCH_TO
		                                           ,'SAMPLE_COUNT'
		                                           ,1
		                                            ) AS CNT
		      ,CB_REPORT_PKG.CB_SPC_CALC_CHECK_FIND(CM.ORG_ID
		                                           ,CM.COMPANY_ID
		                                           ,CM.ITEM_CODE
		                                           ,CM.ROUTING_ID
		                                           ,CM.CHECK_SEQ
		                                           ,TMP.SEARCH_FROM
		                                           ,TMP.SEARCH_TO
		                                           ,'DEVIATION_AVERAGE'
		                                           ,1
		                                            ) AS X1
		      ,CB_REPORT_PKG.CB_SPC_CALC_CHECK_FIND(CM.ORG_ID
		                                           ,CM.COMPANY_ID
		                                           ,CM.ITEM_CODE
		                                           ,CM.ROUTING_ID
		                                           ,CM.CHECK_SEQ
		                                           ,TMP.SEARCH_FROM
		                                           ,TMP.SEARCH_TO
		                                           ,'DEVIATION_AVERAGE'
		                                           ,2
		                                            ) AS X2
		      ,CB_REPORT_PKG.CB_SPC_CALC_CHECK_FIND(CM.ORG_ID
		                                           ,CM.COMPANY_ID
		                                           ,CM.ITEM_CODE
		                                           ,CM.ROUTING_ID
		                                           ,CM.CHECK_SEQ
		                                           ,TMP.SEARCH_FROM
		                                           ,TMP.SEARCH_TO
		                                           ,'DEVIATION_AVERAGE'
		                                           ,3
		                                            ) AS X3
		      ,CB_REPORT_PKG.CB_SPC_CALC_CHECK_FIND(CM.ORG_ID
		                                           ,CM.COMPANY_ID
		                                           ,CM.ITEM_CODE
		                                           ,CM.ROUTING_ID
		                                           ,CM.CHECK_SEQ
		                                           ,TMP.SEARCH_FROM
		                                           ,TMP.SEARCH_TO
		                                           ,'DEVIATION_AVERAGE'
		                                           ,4
		                                            ) AS X4
		      ,CB_REPORT_PKG.CB_SPC_CALC_CHECK_FIND(CM.ORG_ID
		                                           ,CM.COMPANY_ID
		                                           ,CM.ITEM_CODE
		                                           ,CM.ROUTING_ID
		                                           ,CM.CHECK_SEQ
		                                           ,TMP.SEARCH_FROM
		                                           ,TMP.SEARCH_TO
		                                           ,'DEVIATION_AVERAGE'
		                                           ,5
		                                            ) AS X5
		      ,CB_REPORT_PKG.CB_SPC_CALC_CHECK_FIND(CM.ORG_ID
		                                           ,CM.COMPANY_ID
		                                           ,CM.ITEM_CODE
		                                           ,CM.ROUTING_ID
		                                           ,CM.CHECK_SEQ
		                                           ,TMP.SEARCH_FROM
		                                           ,TMP.SEARCH_TO
		                                           ,'DEVIATION_AVERAGE'
		                                           ,6
		                                            ) AS X6
		      ,CB_REPORT_PKG.CB_SPC_CALC_CHECK_FIND(CM.ORG_ID
		                                           ,CM.COMPANY_ID
		                                           ,CM.ITEM_CODE
		                                           ,CM.ROUTING_ID
		                                           ,CM.CHECK_SEQ
		                                           ,TMP.SEARCH_FROM
		                                           ,TMP.SEARCH_TO
		                                           ,'DEVIATION_AVERAGE'
		                                           ,7
		                                            ) AS X7
		      ,CB_REPORT_PKG.CB_SPC_CALC_CHECK_FIND(CM.ORG_ID
		                                           ,CM.COMPANY_ID
		                                           ,CM.ITEM_CODE
		                                           ,CM.ROUTING_ID
		                                           ,CM.CHECK_SEQ
		                                           ,TMP.SEARCH_FROM
		                                           ,TMP.SEARCH_TO
		                                           ,'DEVIATION_AVERAGE'
		                                           ,8
		                                            ) AS X8
		      ,CB_REPORT_PKG.CB_SPC_CALC_CHECK_FIND(CM.ORG_ID
		                                           ,CM.COMPANY_ID
		                                           ,CM.ITEM_CODE
		                                           ,CM.ROUTING_ID
		                                           ,CM.CHECK_SEQ
		                                           ,TMP.SEARCH_FROM
		                                           ,TMP.SEARCH_TO
		                                           ,'DEVIATION_AVERAGE'
		                                           ,9
		                                            ) AS X9
		      ,CB_REPORT_PKG.CB_SPC_CALC_CHECK_FIND(CM.ORG_ID
		                                           ,CM.COMPANY_ID
		                                           ,CM.ITEM_CODE
		                                           ,CM.ROUTING_ID
		                                           ,CM.CHECK_SEQ
		                                           ,TMP.SEARCH_FROM
		                                           ,TMP.SEARCH_TO
		                                           ,'DEVIATION_AVERAGE'
		                                           ,10
		                                            ) AS X10
		      ,CB_REPORT_PKG.CB_SPC_CALC_CHECK_FIND(CM.ORG_ID
		                                           ,CM.COMPANY_ID
		                                           ,CM.ITEM_CODE
		                                           ,CM.ROUTING_ID
		                                           ,CM.CHECK_SEQ
		                                           ,TMP.SEARCH_FROM
		                                           ,TMP.SEARCH_TO
		                                           ,'DEVIATION_AVERAGE'
		                                           ,11
		                                            ) AS X11
		      ,CB_REPORT_PKG.CB_SPC_CALC_CHECK_FIND(CM.ORG_ID
		                                           ,CM.COMPANY_ID
		                                           ,CM.ITEM_CODE
		                                           ,CM.ROUTING_ID
		                                           ,CM.CHECK_SEQ
		                                           ,TMP.SEARCH_FROM
		                                           ,TMP.SEARCH_TO
		                                           ,'DEVIATION_AVERAGE'
		                                           ,12
		                                            ) AS X12
		      ,CB_REPORT_PKG.CB_SPC_CALC_CHECK_FIND(CM.ORG_ID
		                                           ,CM.COMPANY_ID
		                                           ,CM.ITEM_CODE
		                                           ,CM.ROUTING_ID
		                                           ,CM.CHECK_SEQ
		                                           ,TMP.SEARCH_FROM
		                                           ,TMP.SEARCH_TO
		                                           ,'DEVIATION_AVERAGE'
		                                           ,13
		                                            ) AS X13
		      ,CB_REPORT_PKG.CB_SPC_CALC_CHECK_FIND(CM.ORG_ID
		                                           ,CM.COMPANY_ID
		                                           ,CM.ITEM_CODE
		                                           ,CM.ROUTING_ID
		                                           ,CM.CHECK_SEQ
		                                           ,TMP.SEARCH_FROM
		                                           ,TMP.SEARCH_TO
		                                           ,'DEVIATION_AVERAGE'
		                                           ,14
		                                            ) AS X14
		      ,CB_REPORT_PKG.CB_SPC_CALC_CHECK_FIND(CM.ORG_ID
		                                           ,CM.COMPANY_ID
		                                           ,CM.ITEM_CODE
		                                           ,CM.ROUTING_ID
		                                           ,CM.CHECK_SEQ
		                                           ,TMP.SEARCH_FROM
		                                           ,TMP.SEARCH_TO
		                                           ,'DEVIATION_AVERAGE'
		                                           ,15
		                                            ) AS X15
		      ,CB_REPORT_PKG.CB_SPC_CALC_CHECK_FIND(CM.ORG_ID
		                                           ,CM.COMPANY_ID
		                                           ,CM.ITEM_CODE
		                                           ,CM.ROUTING_ID
		                                           ,CM.CHECK_SEQ
		                                           ,TMP.SEARCH_FROM
		                                           ,TMP.SEARCH_TO
		                                           ,'DEVIATION_AVERAGE'
		                                           ,16
		                                            ) AS X16
		      ,CB_REPORT_PKG.CB_SPC_CALC_CHECK_FIND(CM.ORG_ID
		                                           ,CM.COMPANY_ID
		                                           ,CM.ITEM_CODE
		                                           ,CM.ROUTING_ID
		                                           ,CM.CHECK_SEQ
		                                           ,TMP.SEARCH_FROM
		                                           ,TMP.SEARCH_TO
		                                           ,'DEVIATION_AVERAGE'
		                                           ,17
		                                            ) AS X17
		      ,CB_REPORT_PKG.CB_SPC_CALC_CHECK_FIND(CM.ORG_ID
		                                           ,CM.COMPANY_ID
		                                           ,CM.ITEM_CODE
		                                           ,CM.ROUTING_ID
		                                           ,CM.CHECK_SEQ
		                                           ,TMP.SEARCH_FROM
		                                           ,TMP.SEARCH_TO
		                                           ,'DEVIATION_AVERAGE'
		                                           ,18
		                                            ) AS X18
		      ,CB_REPORT_PKG.CB_SPC_CALC_CHECK_FIND(CM.ORG_ID
		                                           ,CM.COMPANY_ID
		                                           ,CM.ITEM_CODE
		                                           ,CM.ROUTING_ID
		                                           ,CM.CHECK_SEQ
		                                           ,TMP.SEARCH_FROM
		                                           ,TMP.SEARCH_TO
		                                           ,'DEVIATION_AVERAGE'
		                                           ,19
		                                            ) AS X19
		      ,CB_REPORT_PKG.CB_SPC_CALC_CHECK_FIND(CM.ORG_ID
		                                           ,CM.COMPANY_ID
		                                           ,CM.ITEM_CODE
		                                           ,CM.ROUTING_ID
		                                           ,CM.CHECK_SEQ
		                                           ,TMP.SEARCH_FROM
		                                           ,TMP.SEARCH_TO
		                                           ,'DEVIATION_AVERAGE'
		                                           ,20
		                                            ) AS X20
		      ,CB_REPORT_PKG.CB_SPC_CALC_CHECK_FIND(CM.ORG_ID
		                                           ,CM.COMPANY_ID
		                                           ,CM.ITEM_CODE
		                                           ,CM.ROUTING_ID
		                                           ,CM.CHECK_SEQ
		                                           ,TMP.SEARCH_FROM
		                                           ,TMP.SEARCH_TO
		                                           ,'DEVIATION_AVERAGE'
		                                           ,21
		                                            ) AS X21
		      ,CB_REPORT_PKG.CB_SPC_CALC_CHECK_FIND(CM.ORG_ID
		                                           ,CM.COMPANY_ID
		                                           ,CM.ITEM_CODE
		                                           ,CM.ROUTING_ID
		                                           ,CM.CHECK_SEQ
		                                           ,TMP.SEARCH_FROM
		                                           ,TMP.SEARCH_TO
		                                           ,'DEVIATION_AVERAGE'
		                                           ,22
		                                            ) AS X22
		      ,CB_REPORT_PKG.CB_SPC_CALC_CHECK_FIND(CM.ORG_ID
		                                           ,CM.COMPANY_ID
		                                           ,CM.ITEM_CODE
		                                           ,CM.ROUTING_ID
		                                           ,CM.CHECK_SEQ
		                                           ,TMP.SEARCH_FROM
		                                           ,TMP.SEARCH_TO
		                                           ,'DEVIATION_AVERAGE'
		                                           ,23
		                                            ) AS X23
		      ,CB_REPORT_PKG.CB_SPC_CALC_CHECK_FIND(CM.ORG_ID
		                                           ,CM.COMPANY_ID
		                                           ,CM.ITEM_CODE
		                                           ,CM.ROUTING_ID
		                                           ,CM.CHECK_SEQ
		                                           ,TMP.SEARCH_FROM
		                                           ,TMP.SEARCH_TO
		                                           ,'DEVIATION_AVERAGE'
		                                           ,24
		                                            ) AS X24
		      ,CB_REPORT_PKG.CB_SPC_CALC_CHECK_FIND(CM.ORG_ID
		                                           ,CM.COMPANY_ID
		                                           ,CM.ITEM_CODE
		                                           ,CM.ROUTING_ID
		                                           ,CM.CHECK_SEQ
		                                           ,TMP.SEARCH_FROM
		                                           ,TMP.SEARCH_TO
		                                           ,'DEVIATION_AVERAGE'
		                                           ,25
		                                            ) AS X25
		  FROM CB_CHECK_MASTER CM
		      ,(
		        SELECT #ORGID# AS ORG_ID
		              ,#COMPANYID# AS COMPANY_ID
		              ,#ITEMCODE# AS ITEM_CODE
		              ,#CHECKBIG# AS CHECK_BIG
		              ,#CHECKLISTID# AS CHECK_LIST_ID
		              ,TO_DATE(#SEARCHFROM#, 'YYYY-MM-DD') AS SEARCH_FROM
		              ,TO_DATE(#SEARCHTO#, 'YYYY-MM-DD') AS SEARCH_TO
		          FROM DUAL
		        ) TMP
		 WHERE 1=1
		   AND CM.ORG_ID = TMP.ORG_ID
		   AND CM.COMPANY_ID = TMP.COMPANY_ID
		   AND CM.ITEM_CODE = TMP.ITEM_CODE
		   AND CM.CHECK_BIG = TMP.CHECK_BIG
		   AND CM.CHECK_SEQ = TMP.CHECK_LIST_ID
    ]]>
    </sql>
    
    <select id="work.order.chart.fml.list.select" parameterClass="java.util.Map"
        resultClass="java.util.HashMap" remapResults="true">
        SELECT TA.*
          FROM (
            <include refid="work.order.chart.fml.list.sql-select1" />
            UNION ALL
            <include refid="work.order.chart.fml.list.sql-select2" />
            UNION ALL
            <include refid="work.order.chart.fml.list.sql-select3" />
            UNION ALL
            <include refid="work.order.chart.fml.list.sql-select4" />
        ) TA
    </select>
    
    <select id="work.order.chart.fml.list.count" parameterClass="java.util.Map"
        resultClass="java.lang.Integer">
        SELECT COUNT(*) FROM (
            <include refid="work.order.chart.fml.list.sql-select1" />
            UNION ALL
            <include refid="work.order.chart.fml.list.sql-select2" />
            UNION ALL
            <include refid="work.order.chart.fml.list.sql-select3" />
            UNION ALL
            <include refid="work.order.chart.fml.list.sql-select4" />
        ) TOT
    </select>
    
    <sql id="work.order.chart.xchart.sql-select">
    <![CDATA[
    SELECT LEV AS RN
			      ,CB_REPORT_PKG.CB_SPC_CALC_CHECK_FIND(ORG_ID
			                                           ,COMPANY_ID
			                                           ,ITEM_CODE
			                                           ,NULL
			                                           ,CHECK_LIST_ID
			                                           ,SEARCH_FROM
			                                           ,SEARCH_TO
			                                           ,'AVERAGE'
			                                           ,LEV
			                                            ) AS VALUE
			      ,CB_REPORT_PKG.CB_SPC_CALC_CHECK_FIND(ORG_ID
			                                           ,COMPANY_ID
			                                           ,ITEM_CODE
			                                           ,NULL
			                                           ,CHECK_LIST_ID
			                                           ,SEARCH_FROM
			                                           ,SEARCH_TO
			                                           ,'USL'
			                                           ,1
			                                            ) AS USL
			      ,CB_REPORT_PKG.CB_SPC_CALC_CHECK_FIND(ORG_ID
			                                           ,COMPANY_ID
			                                           ,ITEM_CODE
			                                           ,NULL
			                                           ,CHECK_LIST_ID
			                                           ,SEARCH_FROM
			                                           ,SEARCH_TO
			                                           ,'LSL'
			                                           ,1
			                                            ) AS LSL
		  FROM (SELECT LEVEL AS LEV
				              ,#ORGID# AS ORG_ID
		                  ,#COMPANYID# AS COMPANY_ID
		                  ,#ITEMCODE# AS ITEM_CODE
		                  ,#CHECKBIG# AS CHECK_BIG
		                  ,#CHECKLISTID# AS CHECK_LIST_ID
		                  ,TO_DATE(#SEARCHFROM#, 'YYYY-MM-DD') AS SEARCH_FROM
		                  ,TO_DATE(#SEARCHTO#, 'YYYY-MM-DD') AS SEARCH_TO
              FROM DUAL
		       CONNECT BY LEVEL <= 25) TMP
		 WHERE 1=1
    ]]>
    </sql>
    
    <select id="work.order.chart.xchart.select" parameterClass="java.util.Map"
        resultClass="java.util.HashMap" remapResults="true">
            <include refid="work.order.chart.xchart.sql-select" />
    </select>
    
    <select id="work.order.chart.xchart.count" parameterClass="java.util.Map"
        resultClass="java.lang.Integer">
        SELECT COUNT(*)
          FROM (
            <include refid="work.order.chart.xchart.sql-select" />
            )
    </select>
    
    <sql id="work.order.chart.rchart.sql-select">
    <![CDATA[
    SELECT LEV AS RN
            ,CB_REPORT_PKG.CB_SPC_CALC_CHECK_FIND(ORG_ID
                                                 ,COMPANY_ID
                                                 ,ITEM_CODE
                                                 ,NULL
                                                 ,CHECK_LIST_ID
                                                 ,SEARCH_FROM
                                                 ,SEARCH_TO
                                                 ,'DEVIATION_AVERAGE'
                                                 ,LEV
                                                  ) AS VALUE
            ,CB_REPORT_PKG.CB_SPC_CALC_CHECK_FIND(ORG_ID
                                                 ,COMPANY_ID
                                                 ,ITEM_CODE
                                                 ,NULL
                                                 ,CHECK_LIST_ID
                                                 ,SEARCH_FROM
                                                 ,SEARCH_TO
                                                 ,'UCR'
                                                 ,1
                                                  ) AS USL
            ,CB_REPORT_PKG.CB_SPC_CALC_CHECK_FIND(ORG_ID
                                                 ,COMPANY_ID
                                                 ,ITEM_CODE
                                                 ,NULL
                                                 ,CHECK_LIST_ID
                                                 ,SEARCH_FROM
                                                 ,SEARCH_TO
                                                 ,'LCR'
                                                 ,1
                                                  ) AS LSL
      FROM (SELECT LEVEL AS LEV
                      ,#ORGID# AS ORG_ID
                      ,#COMPANYID# AS COMPANY_ID
                      ,#ITEMCODE# AS ITEM_CODE
                      ,#CHECKBIG# AS CHECK_BIG
                      ,#CHECKLISTID# AS CHECK_LIST_ID
                      ,TO_DATE(#SEARCHFROM#, 'YYYY-MM-DD') AS SEARCH_FROM
                      ,TO_DATE(#SEARCHTO#, 'YYYY-MM-DD') AS SEARCH_TO
              FROM DUAL
           CONNECT BY LEVEL <= 25) TMP
     WHERE 1=1
    ]]>
    </sql>
    
    <select id="work.order.chart.rchart.select" parameterClass="java.util.Map"
        resultClass="java.util.HashMap" remapResults="true">
            <include refid="work.order.chart.rchart.sql-select" />
    </select>
    
    <select id="work.order.chart.rchart.count" parameterClass="java.util.Map"
        resultClass="java.lang.Integer">
        SELECT COUNT(*)
          FROM (
            <include refid="work.order.chart.rchart.sql-select" />
            )
    </select>
    
    <sql id="work.order.spc.total.sql-select">
        SELECT CB_REPORT_PKG.CB_SPC_CALC_CHECK_FIND(ORG_ID
                                                 ,COMPANY_ID
                                                 ,ITEM_CODE
                                                 ,NULL
                                                 ,CHECK_LIST_ID
                                                 ,SEARCH_FROM
                                                 ,SEARCH_TO
                                                 ,'AVERAGE_TOTAL'
                                                 ,1
                                                  ) AS AVGVAL
                ,CB_REPORT_PKG.CB_SPC_CALC_CHECK_FIND(ORG_ID
                                                 ,COMPANY_ID
                                                 ,ITEM_CODE
                                                 ,NULL
                                                 ,CHECK_LIST_ID
                                                 ,SEARCH_FROM
                                                 ,SEARCH_TO
                                                 ,'USL'
                                                 ,1
                                                  ) AS USLVAL
                ,CB_REPORT_PKG.CB_SPC_CALC_CHECK_FIND(ORG_ID
                                                 ,COMPANY_ID
                                                 ,ITEM_CODE
                                                 ,NULL
                                                 ,CHECK_LIST_ID
                                                 ,SEARCH_FROM
                                                 ,SEARCH_TO
                                                 ,'LSL'
                                                 ,1
                                                  ) AS LSLVAL
                ,CB_REPORT_PKG.CB_SPC_CALC_CHECK_FIND(ORG_ID
                                                 ,COMPANY_ID
                                                 ,ITEM_CODE
                                                 ,NULL
                                                 ,CHECK_LIST_ID
                                                 ,SEARCH_FROM
                                                 ,SEARCH_TO
                                                 ,'DEV_TOTAL'
                                                 ,1
                                                  ) AS DEVVAL
                ,CB_REPORT_PKG.CB_SPC_CALC_CHECK_FIND(ORG_ID
                                                 ,COMPANY_ID
                                                 ,ITEM_CODE
                                                 ,NULL
                                                 ,CHECK_LIST_ID
                                                 ,SEARCH_FROM
                                                 ,SEARCH_TO
                                                 ,'UCR'
                                                 ,1
                                                  ) AS UCRVAL
                ,CB_REPORT_PKG.CB_SPC_CALC_CHECK_FIND(ORG_ID
                                                 ,COMPANY_ID
                                                 ,ITEM_CODE
                                                 ,NULL
                                                 ,CHECK_LIST_ID
                                                 ,SEARCH_FROM
                                                 ,SEARCH_TO
                                                 ,'LCR'
                                                 ,1
                                                  ) AS LCRVAL
                ,CB_REPORT_PKG.CB_SPC_CALC_CHECK_FIND(ORG_ID
                                                 ,COMPANY_ID
                                                 ,ITEM_CODE
                                                 ,NULL
                                                 ,CHECK_LIST_ID
                                                 ,SEARCH_FROM
                                                 ,SEARCH_TO
                                                 ,'CP'
                                                 ,1
                                                  ) AS CPVAL
                ,CB_REPORT_PKG.CB_SPC_CALC_CHECK_FIND(ORG_ID
                                                 ,COMPANY_ID
                                                 ,ITEM_CODE
                                                 ,NULL
                                                 ,CHECK_LIST_ID
                                                 ,SEARCH_FROM
                                                 ,SEARCH_TO
                                                 ,'CPK'
                                                 ,1
                                                  ) AS CPKVAL
	      FROM (SELECT #ORGID# AS ORG_ID
	                      ,#COMPANYID# AS COMPANY_ID
	                      ,#ITEMCODE# AS ITEM_CODE
	                      ,#CHECKBIG# AS CHECK_BIG
	                      ,#CHECKLISTID# AS CHECK_LIST_ID
	                      ,TO_DATE(#SEARCHFROM#, 'YYYY-MM-DD') AS SEARCH_FROM
	                      ,TO_DATE(#SEARCHTO#, 'YYYY-MM-DD') AS SEARCH_TO
	              FROM DUAL) TMP
    </sql>
    
    <select id="work.order.spc.total.select" parameterClass="java.util.Map"
        resultClass="java.util.HashMap" remapResults="true">
            <include refid="work.order.spc.total.sql-select" />
    </select>
    
    <select id="work.order.spc.total.count" parameterClass="java.util.Map"
        resultClass="java.lang.Integer">
        SELECT COUNT(*)
          FROM (
            <include refid="work.order.spc.total.sql-select" />
            )
    </select>
  <!-- SPC 관리 종료 -->
  
  <!-- 공구변경점 현황관리 화면 조회 시작 -->
  <sql id="work.order.toolchange.manage.sql-select">
      SELECT RANK() OVER(ORDER BY ORG_ID, COMPANY_ID, ROUTING_NAME, CHANGE_DATE, EQUIPMENT_NAME) AS RN
				      ,ORG_ID AS ORGID
				      ,COMPANY_ID AS COMPANYID
				      ,CHANGE_SEQ AS CHANGESEQ
				      ,CHECK_SEQ AS CHECKSEQ
				      ,EQUIPMENT_CODE AS EQUIPMENTCODE
				      ,EQUIPMENT_NAME AS EQUIPMENTNAME
              ,WORK_CENTER_CODE AS WORKCENTERCODE
              ,WORK_CENTER_NAME AS WORKCENTERNAME
				      ,ROUTING_ITEM_CODE AS ROUTINGITEMCODE
				      ,ROUTING_ITEM_NAME AS ROUTINGITEMNAME
				      ,ROUTING_ID AS ROUTINGID
				      ,ROUTING_NO AS ROUTINGNO
				      ,ROUTING_NAME AS ROUTINGNAME
				      ,ITEM_CODE AS ITEMCODE
				      ,ITEM_NAME AS ITEMNAME
				      ,CAR_TYPE_NAME AS CARTYPENAME
				      ,CHANGE_DATE AS CHANGEDATE
              ,CHANGE_DATE1 AS CHANGEDATE1
              ,CHANGE_DATE2 AS CHANGEDATE2
              ,CHANGE_DATE3 AS CHANGEDATE3
              ,TOOL_LIFE AS TOOLLIFE
              ,PROD_QTY AS PRODQTY
              ,TOOL_LIFE_CHECK AS TOOLLIFECHECK
				      ,EMPLOYEE_NUMBER AS EMPLOYEENUMBER
				      ,KR_NAME AS KRNAME
				      ,CHANGE_TYPE AS CHANGETYPE
				      ,CHANGE_TYPE_NAME AS CHANGETYPENAME
				      ,BACK_QTY AS BACKQTY
				      ,NCR_QTY AS NCRQTY
				      ,CHECK_NAME1 AS CHECKNAME1
				      ,CHECK_METHOD_NAME1 AS CHECKMETHODNAME1
				      ,CHECK_STANDARD1 AS CHECKSTANDARD1
				      ,PRE_CHECK1 AS PRECHECK1
				      ,POST_CHECK1 AS POSTCHECK1
				      ,CHECK_NAME2 AS CHECKNAME2
				      ,CHECK_METHOD_NAME2 AS CHECKMETHODNAME2
				      ,CHECK_STANDARD2 AS CHECKSTANDARD2
				      ,PRE_CHECK2 AS PRECHECK2
				      ,POST_CHECK2 AS POSTCHECK2
				      ,CHECK_NAME3 AS CHECKNAME3
				      ,CHECK_METHOD_NAME3 AS CHECKMETHODNAME3
				      ,CHECK_STANDARD3 AS CHECKSTANDARD3
				      ,PRE_CHECK3 AS PRECHECK3
				      ,POST_CHECK3 AS POSTCHECK3
				      ,CHECK_NAME4 AS CHECKNAME4
				      ,CHECK_METHOD_NAME4 AS CHECKMETHODNAME4
				      ,CHECK_STANDARD4 AS CHECKSTANDARD4
				      ,PRE_CHECK4 AS PRECHECK4
				      ,POST_CHECK4 AS POSTCHECK4
				      ,MANAGE_CHECK AS MANAGECHECK
				      ,MANAGE_CHECK_NAME AS MANAGECHECKNAME
			  FROM CB_TOOL_CHANGE_RESULT_V
  </sql>
  
  
  <sql id="work.order.toolchange.manage.sql-where">
      WHERE 1=1
        <isNotEmpty property="ORGID" prepend="AND">
           ORG_ID = #ORGID#
        </isNotEmpty>
        <isNotEmpty property="COMPANYID" prepend="AND">
           COMPANY_ID = #COMPANYID#
        </isNotEmpty>
        <isNotEmpty property="SEARCHTO">
            <isNotEmpty property="SEARCHFROM" prepend="AND">
               CHANGE_DATE3 BETWEEN TO_DATE(#SEARCHFROM#,'YYYY-MM-DD') AND TO_DATE(#SEARCHTO#,'YYYY-MM-DD')
            </isNotEmpty>
            <isEmpty property="SEARCHFROM" prepend="AND">
               CHANGE_DATE3 = TO_DATE(#SEARCHTO#,'YYYY-MM-DD')
            </isEmpty>
        </isNotEmpty>
        <isEmpty property="SEARCHTO">
            <isNotEmpty property="SEARCHFROM" prepend="AND">
               CHANGE_DATE3 = TO_DATE(#SEARCHFROM#,'YYYY-MM-DD')
            </isNotEmpty>
        </isEmpty>
        <isNotEmpty property="ROUTINGITEMCODE" prepend="AND">
               ROUTING_ITEM_CODE = #ROUTINGITEMCODE#
        </isNotEmpty>
        <isNotEmpty property="ROUTINGID" prepend="AND">
               ROUTING_ID = #ROUTINGID#
        </isNotEmpty>
        <isNotEmpty property="ITEMCODE" prepend="AND">
               ITEM_CODE = #ITEMCODE#
        </isNotEmpty>
      ORDER BY ORG_ID, COMPANY_ID, ROUTING_NAME, CHANGE_DATE, EQUIPMENT_NAME
  </sql>
  
  <select id="work.order.toolchange.manage.select" parameterClass="java.util.Map"
      resultClass="java.util.HashMap" remapResults="true">
          <include refid="work.order.toolchange.manage.sql-select" />
          <include refid="work.order.toolchange.manage.sql-where" />
  </select>
  
  <select id="work.order.toolchange.manage.count" parameterClass="java.util.Map"
      resultClass="java.lang.Integer">
      SELECT COUNT(*)
        FROM (
          <include refid="work.order.toolchange.manage.sql-select" />
          <include refid="work.order.toolchange.manage.sql-where" />
          )
  </select>
  <!-- 공구변경점 현황관리 화면 조회 끝 -->
    
  <!-- 생산 실적현황 화면 조회 시작 -->
  <sql id="work.order.total.manage.sql-select">
      SELECT ROW_NUMBER() OVER(ORDER BY ORG_ID, COMPANY_ID, ITEM_CODE, WORK_ORDER_ID, WORK_ORDER_SEQ ) AS RN
              ,ORG_ID AS ORGID
              ,COMPANY_ID AS COMPANYID
              ,ITEM_CODE AS ITEMCODE
              ,UPPER_ITEM_CODE AS UPPERITEMCODE
              ,WORK_ORDER_ID AS WORKORDERID
              ,WORK_ORDER_SEQ AS WORKORDERSEQ
              ,WORK_CENTER_CODE AS WORKCENTERCODE
              ,SEQ AS SEQ
              ,ROUTING_NO AS ROUTINGNO
              ,ROUTING_ID AS ROUTINGID
              ,ROUTING_OP AS ROUTINGOP
              ,WV.ROUTING_GROUP AS ROUTINGGROUP
              ,DECODE(ROUTING_NAME
                     ,NULL, ''                                 
                     ,DECODE(EQUIPMENT_NAME
                            ,NULL, ''
                            ,(SELECT SC.SMALL_NAME
                                FROM CB_SMALL_CODE SC
                               WHERE 1=1
                                 AND SC.ORG_ID = WV.ORG_ID
                                 AND SC.COMPANY_ID = WV.COMPANY_ID
                                 AND SC.BIG_CODE = 'MFG'
                                 AND SC.MIDDLE_CODE = 'ROUTING_GROUP'
                                 AND SC.SMALL_CODE = WV.ROUTING_GROUP)
                            )
                     ) AS ROUTINGGROUPNAME
              ,WV.OUTSIDE_ORDER_GUBUN AS OUTSIDEORDERGUBUN
              ,DECODE(ROUTING_NAME
                     ,NULL, ''                                 
                     ,DECODE(EQUIPMENT_NAME
                            ,NULL, ''
                            ,ROUTING_NAME
                            )
                     ) AS ROUTINGNAME
              ,EQUIPMENT_CODE AS EQUIPMENTCODE
              ,DECODE(ROUTING_NAME
                     ,NULL, ''
                     ,DECODE(EQUIPMENT_NAME
                            ,NULL, ''
                            ,EQUIPMENT_NAME
                            )
                     ) AS EQUIPMENTNAME
              ,WORK_TYPE AS WORKTYPE
              ,DECODE(ROUTING_NAME
                     ,NULL, ''
                     ,DECODE(EQUIPMENT_NAME
                            ,NULL, ''
                            ,WORK_TYPE_NAME
                            )
                     ) AS WORKTYPENAME
              ,PERSON_ID AS PERSONID
              ,DECODE(ROUTING_NAME
                     ,NULL, '합계'
                     ,DECODE(EQUIPMENT_NAME
                            ,NULL, '소계'
                            ,KR_NAME
                            )
                     ) AS KRNAME
              ,MAX(WORK_ORDER_QTY) AS WORKORDERQTY
              ,SUM(PROD_QTY) AS PRODQTY
              ,ROUND((SUM(PROD_QTY) / DECODE(SUM(WORK_ORDER_QTY), 0, NULL, SUM(WORK_ORDER_QTY))) * 100, 0) AS RATEQTY
              ,SUM(FAULT_QTY1) AS FAULTQTY1
<!--               ,ROUND((SUM(FAULT_QTY1) / DECODE(SUM(PROD_QTY), 0, NULL, SUM(PROD_QTY)) ) * 100, 0) AS RATEFAULT1 -->
              ,SUM(FAULT_QTY2) AS FAULTQTY2
<!--               ,ROUND((SUM(FAULT_QTY2) / DECODE(SUM(PROD_QTY), 0, NULL, SUM(PROD_QTY)) ) * 100, 0) AS RATEFAULT2 -->
              ,#SEARCHFROM# AS SEARCHFROM
              ,#SEARCHTO# AS SEARCHTO
              ,START_TIME AS STARTTIME 
              ,END_TIME AS ENDTIME
      FROM CB_WORK_ORDER_TOTAL_V WV
  </sql>
  
  
  <sql id="work.order.total.manage.sql-where">
      WHERE 1=1
         AND NVL(PROD_QTY,0)  <![CDATA[ <> ]]> 0
        <isNotEmpty property="ORGID" prepend="AND">
           ORG_ID = #ORGID#
        </isNotEmpty>
        <isNotEmpty property="COMPANYID" prepend="AND">
           COMPANY_ID = #COMPANYID#
        </isNotEmpty>
        <isNotEmpty property="SEARCHTO">
            <isNotEmpty property="SEARCHFROM" prepend="AND">
               TO_DATE(SUBSTR(START_TIME,1,10), 'YYYY-MM-DD') BETWEEN TO_DATE(#SEARCHFROM#,'YYYY-MM-DD') AND TO_DATE(#SEARCHTO#,'YYYY-MM-DD')
            </isNotEmpty>
            <isEmpty property="SEARCHFROM" prepend="AND">
               TO_DATE(SUBSTR(START_TIME,1,10), 'YYYY-MM-DD') = TO_DATE(#SEARCHTO#,'YYYY-MM-DD')
            </isEmpty>
        </isNotEmpty>
        <isEmpty property="SEARCHTO">
            <isNotEmpty property="SEARCHFROM" prepend="AND">
               TO_DATE(SUBSTR(START_TIME,1,10), 'YYYY-MM-DD')) = TO_DATE(#SEARCHFROM#,'YYYY-MM-DD')
            </isNotEmpty>
        </isEmpty>
        <isNotEmpty property="ITEMCODE" prepend="AND">
               ITEM_CODE = #ITEMCODE#
        </isNotEmpty>
        <isNotEmpty property="ROUTINGID" prepend="AND">
               ROUTING_ID = #ROUTINGID#
        </isNotEmpty>
      GROUP BY ORG_ID
                   ,COMPANY_ID
                   ,ITEM_CODE
                   ,UPPER_ITEM_CODE
                   ,SEQ
                   ,ROUTING_NO
                   ,ROUTING_ID
                   ,ROUTING_OP
                   ,WORK_ORDER_ID
                   ,WORK_ORDER_SEQ
                   ,PERSON_ID
                   ,WORK_CENTER_CODE
                   ,EQUIPMENT_CODE
                   ,ROLLUP(ROUTING_NAME, EQUIPMENT_NAME)
                   ,WORK_TYPE
                   ,WORK_TYPE_NAME
                   ,PERSON_ID
                   ,KR_NAME
                   ,WV.ROUTING_GROUP
                   ,WV.OUTSIDE_ORDER_GUBUN
                   ,START_TIME
                  ,END_TIME
         <!-- ORDER BY ORG_ID
                     ,COMPANY_ID
                     ,ITEM_CODE
                     ,ROUTING_OP
                     ,EQUIPMENT_NAME
                     ,WORK_TYPE_NAME
                     ,KR_NAME -->
  </sql>
  
  <sql id="work.order.total.manage.sql-select1">
      SELECT 0 AS RN 
              ,ORG_ID AS ORGID
              ,COMPANY_ID AS COMPANYID
<!--               ,ITEM_CODE AS ITEMCODE -->
              ,NULL AS ITEMCODE
              ,NULL AS UPPERITEMCODE
              ,NULL AS WORKORDERID
              ,NULL AS WORKORDERSEQ
              ,NULL AS WORKCENTERCODE
              ,NULL AS SEQ
              ,NULL AS ROUTINGNO
              ,NULL AS ROUTINGID
              ,NULL AS ROUTINGOP
              ,NULL AS ROUTINGGROUP
              ,NULL AS ROUTINGGROUPNAME
              ,NULL AS OUTSIDEORDERGUBUN
              ,NULL AS ROUTINGNAME
              ,NULL AS EQUIPMENTCODE
              ,NULL AS EQUIPMENTNAME
              ,NULL AS WORKTYPE
              ,NULL AS WORKTYPENAME
              ,NULL AS PERSONID
              ,'총계' AS KRNAME
              ,SUM(WORK_ORDER_QTY) AS WORKORDERQTY
              ,SUM(PROD_QTY) AS PRODQTY
              ,ROUND((SUM(PROD_QTY) / DECODE(SUM(WORK_ORDER_QTY), 0, NULL, SUM(WORK_ORDER_QTY))), 0) AS RATEQTY
              ,SUM(FAULT_QTY1) AS FAULTQTY1
<!--               ,ROUND((SUM(FAULT_QTY1) / DECODE(SUM(PROD_QTY), 0, NULL, SUM(PROD_QTY)) ) * 100, 0) AS RATEFAULT1 -->
              ,SUM(FAULT_QTY2) AS FAULTQTY2
<!--               ,ROUND((SUM(FAULT_QTY2) / DECODE(SUM(PROD_QTY), 0, NULL, SUM(PROD_QTY)) ) * 100, 0) AS RATEFAULT2 -->
              ,#SEARCHFROM# AS SEARCHFROM
              ,#SEARCHTO# AS SEARCHTO
              ,START_TIME AS STARTTIME
              ,END_TIME AS ENDTIME
              
      FROM CB_WORK_ORDER_TOTAL_V WV
  </sql>
  
  <sql id="work.order.total.manage.sql-where1">
      WHERE 1=1
        AND NVL(PROD_QTY,0) <![CDATA[ <> ]]> 0
        <isNotEmpty property="ORGID" prepend="AND">
           ORG_ID = #ORGID#
        </isNotEmpty>
        <isNotEmpty property="COMPANYID" prepend="AND">
           COMPANY_ID = #COMPANYID#
        </isNotEmpty>
        <isNotEmpty property="SEARCHTO">
            <isNotEmpty property="SEARCHFROM" prepend="AND">
               TO_DATE(SUBSTR(START_TIME,1,10), 'YYYY-MM-DD') BETWEEN TO_DATE(#SEARCHFROM#,'YYYY-MM-DD') AND TO_DATE(#SEARCHTO#,'YYYY-MM-DD')
            </isNotEmpty>
            <isEmpty property="SEARCHFROM" prepend="AND">
              TO_DATE(SUBSTR(START_TIME,1,10), 'YYYY-MM-DD') = TO_DATE(#SEARCHTO#,'YYYY-MM-DD')
            </isEmpty>
        </isNotEmpty>
        <isEmpty property="SEARCHTO">
            <isNotEmpty property="SEARCHFROM" prepend="AND">
               TO_DATE(SUBSTR(START_TIME,1,10), 'YYYY-MM-DD') = TO_DATE(#SEARCHFROM#,'YYYY-MM-DD')
            </isNotEmpty>
        </isEmpty>
        <isNotEmpty property="ITEMCODE" prepend="AND">
               ITEM_CODE = #ITEMCODE#
        </isNotEmpty>
        <isNotEmpty property="ROUTINGID" prepend="AND">
               ROUTING_ID = #ROUTINGID#
        </isNotEmpty>
      GROUP BY ORG_ID
                   ,COMPANY_ID
                   ,ITEM_CODE
                   ,START_TIME
                   ,END_TIME
  </sql>
  
  <select id="work.order.total.manage.select" parameterClass="java.util.Map"
      resultClass="java.util.HashMap" remapResults="true">
      SELECT RANK() OVER(ORDER BY ORGID, COMPANYID, ITEMCODE, RN) AS RN
              ,ORGID
              ,COMPANYID
              ,ITEMCODE
              ,IM.ITEM_NAME AS ITEMNAME
              ,IM.ORDER_NAME AS ORDERNAME
              ,IM.CAR_TYPE AS MODEL
              ,IM.CAR_TYPE_NAME AS MODELNAME
              ,IM.ITEM_STANDARD_DETAIL AS ITEMSTANDARDDETAIL
              ,UPPERITEMCODE
              ,IM2.ITEM_NAME AS UPPERITEMNAME
              ,IM2.ORDER_NAME AS UPPERORDERNAME
              ,ROUTINGNO
              ,ROUTINGID
              ,ROUTINGOP
              ,ROUTINGNAME
              ,ROUTINGGROUP
              ,ROUTINGGROUPNAME
              ,OUTSIDEORDERGUBUN
              ,EQUIPMENTNAME
              ,WORKTYPENAME
              ,KRNAME
              ,WORKORDERQTY
              ,PRODQTY
              ,SUM(PRODQTY) OVER(PARTITION BY ITEMCODE, ROUTINGNO ORDER BY ORGID, COMPANYID, RN) AS SUMPRODQTY
              ,DECODE(WORKORDERQTY,0,0,(SUM(PRODQTY) OVER(PARTITION BY ITEMCODE, ROUTINGNO ORDER BY ORGID, COMPANYID, RN)/WORKORDERQTY)*100)  AS RATEQTY
               ,FAULTQTY1
              ,FAULTQTY2
              ,FAULTQTY1 + FAULTQTY2 AS FAULTTOTAL
              ,STARTTIME
              ,ENDTIME
              ,WORKORDERID
      FROM (
          <include refid="work.order.total.manage.sql-select" />
          <include refid="work.order.total.manage.sql-where" />
          UNION ALL
          <include refid="work.order.total.manage.sql-select1" />
          <include refid="work.order.total.manage.sql-where1" />
          ) GA
          ,CB_ITEM_MASTER_V IM
          ,CB_ITEM_MASTER IM2
     WHERE 1=1
       AND GA.ORGID = IM.ORG_ID
       AND GA.COMPANYID = IM.COMPANY_ID
       AND GA.ITEMCODE = IM.ITEM_CODE
       AND GA.ORGID = IM2.ORG_ID(+)
       AND GA.COMPANYID = IM2.COMPANY_ID(+)
       AND GA.UPPERITEMCODE = IM2.ITEM_CODE(+)
       AND NVL(GA.KRNAME, 'ZZ') NOT IN ('소계', '합계')
    <isNotEmpty property="GAGUBUN" prepend="AND">
        GA.OUTSIDEORDERGUBUN = #GAGUBUN#
    </isNotEmpty>
    <isNotEmpty property="ORDERNAME" prepend="AND">
        IM.ORDER_NAME LIKE '%'|| #ORDERNAME# ||'%'
    </isNotEmpty>
    <isNotEmpty property="ITEMNAME" prepend="AND">
        IM.ITEM_NAME LIKE '%'|| #ITEMNAME# ||'%'
    </isNotEmpty>
    <isNotEmpty property="MODELNAME" prepend="AND">
        IM.CAR_TYPE_NAME LIKE '%'|| #MODELNAME# ||'%'
    </isNotEmpty>
    <isNotEmpty property="ROUTINGNAME" prepend="AND">
        GA.ROUTINGNAME LIKE '%'|| #ROUTINGNAME#||'%'
    </isNotEmpty>
    <isNotEmpty property="UPPERORDERNAME" prepend="AND">
        IM2.ORDER_NAME LIKE '%'|| #UPPERORDERNAME# ||'%'
    </isNotEmpty>
    <isNotEmpty property="UPPERITEMNAME" prepend="AND">
        IM2.ITEM_NAME LIKE '%'|| #UPPERITEMNAME# ||'%'
    </isNotEmpty>
    <isNotEmpty property="ROUTINGGROUP" prepend="AND">
        GA.ROUTINGGROUP = #ROUTINGGROUP#
    </isNotEmpty>
    <isNotEmpty property="WORKER" prepend="AND">
        GA.KRNAME LIKE '%'||#WORKER#||'%'
    </isNotEmpty>
    <isNotEmpty property="WORKORDERID" prepend="AND">
        GA.WORKORDERID LIKE '%'||#WORKORDERID#||'%'
    </isNotEmpty>
    <isEqual property="ITEMTYPE" compareValue="Y" prepend="AND">
        IM.ITEM_TYPE IN ('A', 'B')
    </isEqual>
    <isEqual property="ITEMTYPE" compareValue="N" prepend="AND">
        IM.ITEM_TYPE = 'C'
    </isEqual>
    <isNotEmpty property="EQUIPMENTNAME" prepend="AND">
        GA.EQUIPMENTNAME LIKE '%'||#EQUIPMENTNAME#||'%'
    </isNotEmpty>
       
     ORDER BY ORGID, COMPANYID, ITEMCODE, RN
  </select>
  
  <select id="work.order.total.manage.count" parameterClass="java.util.Map"
      resultClass="java.lang.Integer">
      SELECT COUNT(*)
        FROM (
            SELECT ORGID
                    ,COMPANYID
                    ,ITEMCODE
                    ,IM.ITEM_NAME AS ITEMNAME
                    ,ROUTINGID
                    ,ROUTINGOP
                    ,ROUTINGNAME
                    ,EQUIPMENTNAME
                    ,WORKTYPENAME
                    ,KRNAME
                    ,WORKORDERQTY
                    ,PRODQTY
                    ,DECODE(KRNAME
                   ,'총계', RATEQTY * 100
                   ,RATEQTY) AS RATEQTY
                    ,FAULTQTY1
<!--                    ,RATEFAULT1 -->
<!--                    ,RATEFAULT1 * 1000000 AS PPM1 -->
                    ,FAULTQTY2
<!--                    ,RATEFAULT2 -->
<!--                    ,RATEFAULT2 * 1000000 AS PPM2 -->
                    ,FAULTQTY1 + FAULTQTY2 AS FAULTTOTAL
                    ,ROUND(((FAULTQTY1 + FAULTQTY2) / PRODQTY) * 100, 0) AS FAULTRATETOTAL
                    ,ROUND(((FAULTQTY1 + FAULTQTY2) / PRODQTY) * 100, 0) * 1000000 AS FAULTTOTALPPM
                    ,DECODE(KRNAME
                           ,'총계', (SELECT ROUND((SUM(FAULT_QTY1 / PROD_QTY)) * 100, 0) * 1000000
                                     FROM CB_WORK_ORDER_TOTAL_V WV
                                    WHERE 1=1
                                      AND WV.ORG_ID = GA.ORGID
                                      AND WV.COMPANY_ID = GA.COMPANYID
                                      AND WV.ITEM_CODE = GA.ITEMCODE/*
                                      AND WV.ROUTING_ID = GA.ROUTINGID
                                      AND WV.EQUIPMENT_CODE = GA.EQUIPMENTCODE
                                      AND WV.WORK_TYPE = GA.WORKTYPE
                                      AND WV.PERSON_ID = GA.PERSONID
                                      AND WV.WORK_END_DATE BETWEEN TRUNC(SYSDATE, 'MM') AND LAST_DAY(SYSDATE)
                                    GROUP BY ORG_ID
                                            ,COMPANY_ID
                                            ,ITEM_CODE)
                           ,(SELECT ROUND((SUM(FAULT_QTY1 / PROD_QTY)) * 100, 0) * 1000000
                               FROM CB_WORK_ORDER_TOTAL_V WV
                              WHERE 1=1
                                AND WV.ORG_ID = GA.ORGID
                                AND WV.COMPANY_ID = GA.COMPANYID
                                AND WV.ITEM_CODE = GA.ITEMCODE
                                AND WV.ROUTING_ID = GA.ROUTINGID
                                AND WV.EQUIPMENT_CODE = GA.EQUIPMENTCODE
                                AND WV.WORK_TYPE = GA.WORKTYPE
                                AND WV.PERSON_ID = GA.PERSONID
                                AND WV.WORK_END_DATE BETWEEN TRUNC(SYSDATE, 'MM') AND LAST_DAY(SYSDATE)
                              GROUP BY ORG_ID
                                      ,COMPANY_ID
                                      ,ITEM_CODE
                                      ,ROUTING_ID
                                      ,ROUTING_OP
                                      ,ROUTING_NAME
                                      ,EQUIPMENT_CODE
                                      ,EQUIPMENT_NAME
                                      ,WORK_TYPE
                                      ,WORK_TYPE_NAME
                                      ,PERSON_ID
                                      ,KR_NAME)
                            ) AS MONTHPPM1
                    ,DECODE(KRNAME
                           ,'총계', (SELECT ROUND((SUM(FAULT_QTY2 / PROD_QTY)) * 100, 0) * 1000000
                                     FROM CB_WORK_ORDER_TOTAL_V WV
                                    WHERE 1=1
                                      AND WV.ORG_ID = GA.ORGID
                                      AND WV.COMPANY_ID = GA.COMPANYID
                                      AND WV.ITEM_CODE = GA.ITEMCODE/*
                                      AND WV.ROUTING_ID = GA.ROUTINGID
                                      AND WV.EQUIPMENT_CODE = GA.EQUIPMENTCODE
                                      AND WV.WORK_TYPE = GA.WORKTYPE
                                      AND WV.PERSON_ID = GA.PERSONID*/
                                      AND WV.WORK_END_DATE BETWEEN TRUNC(SYSDATE, 'MM') AND LAST_DAY(SYSDATE)
                                    GROUP BY ORG_ID
                                            ,COMPANY_ID
                                            ,ITEM_CODE)
                           ,(SELECT ROUND((SUM(FAULT_QTY2 / PROD_QTY)) * 100, 0) * 1000000
                               FROM CB_WORK_ORDER_TOTAL_V WV
                              WHERE 1=1
                                AND WV.ORG_ID = GA.ORGID
                                AND WV.COMPANY_ID = GA.COMPANYID
                                AND WV.ITEM_CODE = GA.ITEMCODE
                                AND WV.ROUTING_ID = GA.ROUTINGID
                                AND WV.EQUIPMENT_CODE = GA.EQUIPMENTCODE
                                AND WV.WORK_TYPE = GA.WORKTYPE
                                AND WV.PERSON_ID = GA.PERSONID
                                AND WV.WORK_END_DATE BETWEEN TRUNC(SYSDATE, 'MM') AND LAST_DAY(SYSDATE)
                              GROUP BY ORG_ID
                                      ,COMPANY_ID
                                      ,ITEM_CODE
                                      ,ROUTING_ID
                                      ,ROUTING_OP
                                      ,ROUTING_NAME
                                      ,EQUIPMENT_CODE
                                      ,EQUIPMENT_NAME
                                      ,WORK_TYPE
                                      ,WORK_TYPE_NAME
                                      ,PERSON_ID
                                      ,KR_NAME)
                            ) AS MONTHPPM2
                    ,DECODE(KRNAME
                           ,'총계', (SELECT ROUND((SUM((FAULT_QTY1 + FAULT_QTY2) / PROD_QTY)) * 100, 0) * 1000000
                                     FROM CB_WORK_ORDER_TOTAL_V WV
                                    WHERE 1=1
                                      AND WV.ORG_ID = GA.ORGID
                                      AND WV.COMPANY_ID = GA.COMPANYID
                                      AND WV.ITEM_CODE = GA.ITEMCODE/*
                                      AND WV.ROUTING_ID = GA.ROUTINGID
                                      AND WV.EQUIPMENT_CODE = GA.EQUIPMENTCODE
                                      AND WV.WORK_TYPE = GA.WORKTYPE
                                      AND WV.PERSON_ID = GA.PERSONID*/
                                      AND WV.WORK_END_DATE BETWEEN TRUNC(SYSDATE, 'MM') AND LAST_DAY(SYSDATE)
                                    GROUP BY ORG_ID
                                            ,COMPANY_ID
                                            ,ITEM_CODE)
                           ,(SELECT ROUND((SUM((FAULT_QTY1 + FAULT_QTY2) / PROD_QTY)) * 100, 0) * 1000000
                               FROM CB_WORK_ORDER_TOTAL_V WV
                              WHERE 1=1
                                AND WV.ORG_ID = GA.ORGID
                                AND WV.COMPANY_ID = GA.COMPANYID
                                AND WV.ITEM_CODE = GA.ITEMCODE
                                AND WV.ROUTING_ID = GA.ROUTINGID
                                AND WV.EQUIPMENT_CODE = GA.EQUIPMENTCODE
                                AND WV.WORK_TYPE = GA.WORKTYPE
                                AND WV.PERSON_ID = GA.PERSONID
                                AND WV.WORK_END_DATE BETWEEN TRUNC(SYSDATE, 'MM') AND LAST_DAY(SYSDATE)
                              GROUP BY ORG_ID
                                      ,COMPANY_ID
                                      ,ITEM_CODE
                                      ,ROUTING_ID
                                      ,ROUTING_OP
                                      ,ROUTING_NAME
                                      ,EQUIPMENT_CODE
                                      ,EQUIPMENT_NAME
                                      ,WORK_TYPE
                                      ,WORK_TYPE_NAME
                                      ,PERSON_ID
                                      ,KR_NAME)
                            ) AS MONTHTOTALPPM
            FROM (
            <include refid="work.order.total.manage.sql-select" />
            <include refid="work.order.total.manage.sql-where" />
            UNION ALL
            <include refid="work.order.total.manage.sql-select1" />
            <include refid="work.order.total.manage.sql-where1" />
            ) GA
          ,CB_ITEM_MASTER IM
     WHERE 1=1
       AND GA.ORGID = IM.ORG_ID
       AND GA.COMPANYID = IM.COMPANY_ID
       AND GA.ITEMCODE = IM.ITEM_CODE
          )
  </select>
  <!-- 생산 실적현황 화면 조회 끝 -->
  
  <!-- 작업자별 실적현황 화면 조회 시작 -->
  <sql id="prod.state.workeraccperform.sql-select">
			SELECT DENSE_RANK() OVER(ORDER BY WV.ORG_ID, WV.COMPANY_ID, WV.PROD_DATE DESC, (SELECT HM.KR_NAME
					                                                                                  FROM CB_HUMANRESOURCE_MANAGER_V HM
					                                                                                 WHERE 1=1
					                                                                                   AND HM.ORG_ID = WV.ORG_ID
					                                                                                   AND HM.COMPANY_ID = WV.COMPANY_ID
					                                                                                   AND HM.EMPLOYEE_NUMBER = WV.EMPLOYEE_NUMBER)
					                                 ,(SELECT (SELECT SC.SMALL_NAME
					                                             FROM CB_SMALL_CODE SC
					                                            WHERE 1=1
					                                              AND SC.ORG_ID = WC.ORG_ID
					                                              AND SC.COMPANY_ID = WC.COMPANY_ID
					                                              AND SC.BIG_CODE = 'CMM'
					                                              AND SC.MIDDLE_CODE = 'WORK_DEPT'
					                                              AND SC.SMALL_CODE = WC.WORK_DEPT)
					                                     FROM CB_WORK_CENTER WC
					                                    WHERE 1=1
					                                      AND WC.ORG_ID = WV.ORG_ID
					                                      AND WC.COMPANY_ID = WV.COMPANY_ID
					                                      AND WC.WORK_CENTER_CODE = WV.WORK_CENTER_CODE)
					                                 ,(SELECT WC.WORK_CENTER_NAME
					                                     FROM CB_WORK_CENTER WC
					                                    WHERE 1=1
					                                      AND WC.ORG_ID = WV.ORG_ID
					                                      AND WC.COMPANY_ID = WV.COMPANY_ID
					                                      AND WC.WORK_CENTER_CODE = WV.WORK_CENTER_CODE)
					                                 ,(SELECT IM.ITEM_NAME
					                                     FROM CB_ITEM_MASTER IM
					                                    WHERE 1=1
					                                      AND IM.ORG_ID = WV.ORG_ID
					                                      AND IM.COMPANY_ID = WV.COMPANY_ID
					                                      AND IM.ITEM_CODE = WV.ITEM_CODE)
					                                 ,(SELECT (SELECT SC.SMALL_NAME
					                                             FROM CB_SMALL_CODE SC
					                                            WHERE 1=1
					                                              AND SC.ORG_ID = RC.ORG_ID
					                                              AND SC.COMPANY_ID = RC.COMPANY_ID
					                                              AND SC.BIG_CODE = 'MFG'
					                                              AND SC.MIDDLE_CODE = 'ROUTING_NAME'
					                                              AND SC.SMALL_CODE = RC.ROUTING_NO)
					                                     FROM CB_ROUTING_CONTROL RC
					                                    WHERE 1=1
					                                      AND RC.ORG_ID = WV.ORG_ID
					                                      AND RC.COMPANY_ID = WV.COMPANY_ID
					                                      AND RC.ITEM_CODE = WV.ITEM_CODE
					                                      AND RC.ROUTING_ID = WV.ROUTING_ID)) AS RN
					      ,WV.ORG_ID AS ORGID
					      ,WV.COMPANY_ID AS COMPANYID
					      ,WV.WORK_ORDER_ID AS WORKORDERID
					      ,WV.WORK_ORDER_SEQ AS WORKORDERSEQ
					      ,WV.PROD_DATE AS PRODDATE
					      ,WV.ITEM_CODE AS ITEMCODE
					      ,(SELECT IM.ORDER_NAME
					          FROM CB_ITEM_MASTER IM
					         WHERE 1=1
					           AND IM.ORG_ID = WV.ORG_ID
					           AND IM.COMPANY_ID = WV.COMPANY_ID
					           AND IM.ITEM_CODE = WV.ITEM_CODE) AS ORDERNAME
					      ,(SELECT IM.DRAWING_NO
					          FROM CB_ITEM_MASTER IM
					         WHERE 1=1
					           AND IM.ORG_ID = WV.ORG_ID
					           AND IM.COMPANY_ID = WV.COMPANY_ID
					           AND IM.ITEM_CODE = WV.ITEM_CODE) AS DRAWINGNO
					      ,(SELECT IM.ITEM_NAME
					          FROM CB_ITEM_MASTER IM
					         WHERE 1=1
					           AND IM.ORG_ID = WV.ORG_ID
					           AND IM.COMPANY_ID = WV.COMPANY_ID
					           AND IM.ITEM_CODE = WV.ITEM_CODE) AS ITEMNAME
					      ,(SELECT IM.CAR_TYPE
					          FROM CB_ITEM_MASTER IM
					         WHERE 1=1
					           AND IM.ORG_ID = WV.ORG_ID
					           AND IM.COMPANY_ID = WV.COMPANY_ID
					           AND IM.ITEM_CODE = WV.ITEM_CODE) AS MODEL
					      ,(SELECT (SELECT SC.SMALL_NAME
					                  FROM CB_SMALL_CODE SC
					                 WHERE 1=1
					                   AND SC.ORG_ID = IM.ORG_ID
					                   AND SC.COMPANY_ID = IM.COMPANY_ID
					                   AND SC.BIG_CODE = 'CMM'
					                   AND SC.MIDDLE_CODE = 'MODEL'
					                   AND SC.SMALL_CODE = IM.CAR_TYPE)
					          FROM CB_ITEM_MASTER IM
					         WHERE 1=1
					           AND IM.ORG_ID = WV.ORG_ID
					           AND IM.COMPANY_ID = WV.COMPANY_ID
					           AND IM.ITEM_CODE = WV.ITEM_CODE) AS MODELNAME
					      ,(SELECT IM.MATERIAL_TYPE
					          FROM CB_ITEM_MASTER IM
					         WHERE 1=1
					           AND IM.ORG_ID = WV.ORG_ID
					           AND IM.COMPANY_ID = WV.COMPANY_ID
					           AND IM.ITEM_CODE = WV.ITEM_CODE) AS MATERIALTYPE
					      ,WV.ROUTING_ID AS ROUTINGID
					      ,(SELECT RC.ROUTING_NO
					          FROM CB_ROUTING_CONTROL RC
					         WHERE 1=1
					           AND RC.ORG_ID = WV.ORG_ID
					           AND RC.COMPANY_ID = WV.COMPANY_ID
					           AND RC.ITEM_CODE = WV.ITEM_CODE
					           AND RC.ROUTING_ID = WV.ROUTING_ID) AS ROUTINGNO
					      ,(SELECT (SELECT SC.SMALL_NAME
					                  FROM CB_SMALL_CODE SC
					                 WHERE 1=1
					                   AND SC.ORG_ID = RC.ORG_ID
					                   AND SC.COMPANY_ID = RC.COMPANY_ID
					                   AND SC.BIG_CODE = 'MFG'
					                   AND SC.MIDDLE_CODE = 'ROUTING_NAME'
					                   AND SC.SMALL_CODE = RC.ROUTING_NO)
					          FROM CB_ROUTING_CONTROL RC
					         WHERE 1=1
					           AND RC.ORG_ID = WV.ORG_ID
					           AND RC.COMPANY_ID = WV.COMPANY_ID
					           AND RC.ITEM_CODE = WV.ITEM_CODE
					           AND RC.ROUTING_ID = WV.ROUTING_ID) AS ROUTINGNAME
					      ,(SELECT WC.WORK_DEPT
					          FROM CB_WORK_CENTER WC
					         WHERE 1=1
					           AND WC.ORG_ID = WV.ORG_ID
					           AND WC.COMPANY_ID = WV.COMPANY_ID
					           AND WC.WORK_CENTER_CODE = WV.WORK_CENTER_CODE) AS WORKDEPT
					      ,(SELECT (SELECT SC.SMALL_NAME
					                  FROM CB_SMALL_CODE SC
					                 WHERE 1=1
					                   AND SC.ORG_ID = WC.ORG_ID
					                   AND SC.COMPANY_ID = WC.COMPANY_ID
					                   AND SC.BIG_CODE = 'CMM'
					                   AND SC.MIDDLE_CODE = 'WORK_DEPT'
					                   AND SC.SMALL_CODE = WC.WORK_DEPT)
					          FROM CB_WORK_CENTER WC
					         WHERE 1=1
					           AND WC.ORG_ID = WV.ORG_ID
					           AND WC.COMPANY_ID = WV.COMPANY_ID
					           AND WC.WORK_CENTER_CODE = WV.WORK_CENTER_CODE) AS WORKDEPTNAME
					      ,WV.WORK_CENTER_CODE AS WORKCENTERCODE
					      ,(SELECT WC.WORK_CENTER_NAME
					          FROM CB_WORK_CENTER WC
					         WHERE 1=1
					           AND WC.ORG_ID = WV.ORG_ID
					           AND WC.COMPANY_ID = WV.COMPANY_ID
					           AND WC.WORK_CENTER_CODE = WV.WORK_CENTER_CODE) AS WORKCENTERNAME
					      ,WV.EMPLOYEE_NUMBER AS EMPLOYEENUMBER
					      ,(SELECT HM.KR_NAME
					          FROM CB_HUMANRESOURCE_MANAGER_V HM
					         WHERE 1=1
					           AND HM.ORG_ID = WV.ORG_ID
					           AND HM.COMPANY_ID = WV.COMPANY_ID
					           AND HM.EMPLOYEE_NUMBER = WV.EMPLOYEE_NUMBER) AS KRNAME
					      ,WV.WORK_DIV AS WORKDIV
					      ,(SELECT SC.SMALL_NAME
					          FROM CB_SMALL_CODE SC
					         WHERE 1=1
					           AND SC.ORG_ID = WV.ORG_ID
					           AND SC.COMPANY_ID = WV.COMPANY_ID
					           AND SC.BIG_CODE = 'MFG'
					           AND SC.MIDDLE_CODE = 'WORK_DIV'
					           AND SC.SMALL_CODE = WV.WORK_DIV) AS WORKDIVNAME
					      ,SUM(WV.CLOSING_TIME) AS CLOSINGTIME
					      ,SUM(WV.WORKER_TIME) AS WORKERTIME
					      ,SUM(WV.NONOPER_QTY) AS NONOPERQTY
					      ,SUM(TRUNC(WV.WORK_PLAN_QTY, 0)) AS WORKPLANQTY
					      ,SUM(WV.PROD_QTY + WV.DEFECTED_QTY) AS DEFECTEDQTY
					      ,SUM(WV.PROD_QTY) AS PRODQTY
					      ,SUM(WV.PROD_QTY * NVL((SELECT RC.CONVERSION_COST
					                                FROM CB_ROUTING_CONTROL RC
					                               WHERE 1=1
					                                 AND RC.ORG_ID = WV.ORG_ID
					                                 AND RC.COMPANY_ID = WV.COMPANY_ID
					                                 AND RC.ITEM_CODE = WV.ITEM_CODE
					                                 AND RC.ROUTING_ID = WV.ROUTING_ID), 0)) AS PRODCOST
					      ,SUM(WV.DEFECTED_QTY) AS FAULTQTY
					      ,SUM(WV.DEFECTED_QTY * NVL((SELECT RC.CONVERSION_COST
					                                    FROM CB_ROUTING_CONTROL RC
					                                   WHERE 1=1
					                                     AND RC.ORG_ID = WV.ORG_ID
					                                     AND RC.COMPANY_ID = WV.COMPANY_ID
					                                     AND RC.ITEM_CODE = WV.ITEM_CODE
					                                     AND RC.ROUTING_ID = WV.ROUTING_ID), 0)) AS FAULTCOST
					      ,MAX(REPLACE(WV.REMARKS, ',', ', ')) AS REMARKS
			  FROM CB_WORK_ORDER_D_BASE_V WV
  </sql>
   
  <sql id="prod.state.workeraccperform.sql-where">
       WHERE 1=1
	       <isNotEmpty property="ORGID" prepend="AND">
	              WV.ORG_ID = $ORGID$
	       </isNotEmpty>
	       <isNotEmpty property="COMPANYID" prepend="AND">
	              WV.COMPANY_ID = $COMPANYID$
	       </isNotEmpty>
        <isNotEmpty property="SEARCHTO">
            <isNotEmpty property="SEARCHFROM" prepend="AND">
               TO_DATE(TO_CHAR(WV.START_TIME, 'YYYY-MM-DD'), 'YYYY-MM-DD') BETWEEN TO_DATE(#SEARCHFROM# ,'YYYY-MM-DD') AND TO_DATE(#SEARCHTO# ,'YYYY-MM-DD')
            </isNotEmpty>
        </isNotEmpty>
        <isNotEmpty property="WORKDEPT" prepend="AND">
              (SELECT WC.WORK_DEPT
                 FROM CB_WORK_CENTER WC
                WHERE 1=1
                  AND WC.ORG_ID = WV.ORG_ID
                  AND WC.COMPANY_ID = WV.COMPANY_ID
                  AND WC.WORK_CENTER_CODE = WV.WORK_CENTER_CODE) = #WORKDEPT#
        </isNotEmpty>
         <isNotEmpty property="ORDERNAME" prepend="AND">
                (SELECT IM.ORDER_NAME
                  FROM CB_ITEM_MASTER IM
                 WHERE 1=1
                   AND IM.ORG_ID = WV.ORG_ID
                   AND IM.COMPANY_ID = WV.COMPANY_ID
                   AND IM.ITEM_CODE = WV.ITEM_CODE) LIKE '%' || #ORDERNAME# || '%'
         </isNotEmpty>
         <isNotEmpty property="ITEMNAME" prepend="AND">
                (SELECT IM.ITEM_NAME
                  FROM CB_ITEM_MASTER IM
                 WHERE 1=1
                   AND IM.ORG_ID = WV.ORG_ID
                   AND IM.COMPANY_ID = WV.COMPANY_ID
                   AND IM.ITEM_CODE = WV.ITEM_CODE) LIKE '%' || #ITEMNAME# || '%'
         </isNotEmpty>
         <isNotEmpty property="MODELNAME" prepend="AND">
                (SELECT IM.CAR_TYPE_NAME
                  FROM CB_ITEM_MASTER_V IM
                 WHERE 1=1
                   AND IM.ORG_ID = WV.ORG_ID
                   AND IM.COMPANY_ID = WV.COMPANY_ID
                   AND IM.ITEM_CODE = WV.ITEM_CODE) LIKE '%' || #MODELNAME# || '%'
         </isNotEmpty>
       <isNotEmpty property="WORKCENTERCODE" prepend="AND">
              WV.WORK_CENTER_CODE = #WORKCENTERCODE#
       </isNotEmpty>
       <isNotEmpty property="EMPLOYEENUMBER" prepend="AND">
              WV.EMPLOYEE_NUMBER = #EMPLOYEENUMBER#
       </isNotEmpty>
       <isNotEmpty property="ITEMCODE" prepend="AND">
              WV.ITEM_CODE = #ITEMCODE#
       </isNotEmpty>
      GROUP BY WV.ORG_ID, WV.COMPANY_ID, WV.WORK_ORDER_ID, WV.WORK_ORDER_SEQ, WV.PROD_DATE, WV.ITEM_CODE
			             ,WV.ROUTING_ID, WV.WORK_CENTER_CODE, WV.EMPLOYEE_NUMBER, WV.WORK_DIV
		  ORDER BY WV.ORG_ID, WV.COMPANY_ID, WV.PROD_DATE DESC, (SELECT HM.KR_NAME
															                                                          FROM CB_HUMANRESOURCE_MANAGER_V HM
															                                                         WHERE 1=1
															                                                           AND HM.ORG_ID = WV.ORG_ID
															                                                           AND HM.COMPANY_ID = WV.COMPANY_ID
															                                                           AND HM.EMPLOYEE_NUMBER = WV.EMPLOYEE_NUMBER)
															                                   ,(SELECT (SELECT SC.SMALL_NAME
															                                               FROM CB_SMALL_CODE SC
															                                              WHERE 1=1
															                                                AND SC.ORG_ID = WC.ORG_ID
															                                                AND SC.COMPANY_ID = WC.COMPANY_ID
															                                                AND SC.BIG_CODE = 'CMM'
															                                                AND SC.MIDDLE_CODE = 'WORK_DEPT'
															                                                AND SC.SMALL_CODE = WC.WORK_DEPT)
															                                       FROM CB_WORK_CENTER WC
															                                      WHERE 1=1
															                                        AND WC.ORG_ID = WV.ORG_ID
															                                        AND WC.COMPANY_ID = WV.COMPANY_ID
															                                        AND WC.WORK_CENTER_CODE = WV.WORK_CENTER_CODE)
															                                   ,(SELECT WC.WORK_CENTER_NAME
															                                       FROM CB_WORK_CENTER WC
															                                      WHERE 1=1
															                                        AND WC.ORG_ID = WV.ORG_ID
															                                        AND WC.COMPANY_ID = WV.COMPANY_ID
															                                        AND WC.WORK_CENTER_CODE = WV.WORK_CENTER_CODE)
															                                   ,(SELECT IM.ITEM_NAME
															                                       FROM CB_ITEM_MASTER IM
															                                      WHERE 1=1
															                                        AND IM.ORG_ID = WV.ORG_ID
															                                        AND IM.COMPANY_ID = WV.COMPANY_ID
															                                        AND IM.ITEM_CODE = WV.ITEM_CODE)
															                                   ,(SELECT (SELECT SC.SMALL_NAME
															                                               FROM CB_SMALL_CODE SC
															                                              WHERE 1=1
															                                                AND SC.ORG_ID = RC.ORG_ID
															                                                AND SC.COMPANY_ID = RC.COMPANY_ID
															                                                AND SC.BIG_CODE = 'MFG'
															                                                AND SC.MIDDLE_CODE = 'ROUTING_NAME'
															                                                AND SC.SMALL_CODE = RC.ROUTING_NO)
															                                       FROM CB_ROUTING_CONTROL RC
															                                      WHERE 1=1
															                                        AND RC.ORG_ID = WV.ORG_ID
															                                        AND RC.COMPANY_ID = WV.COMPANY_ID
															                                        AND RC.ITEM_CODE = WV.ITEM_CODE
															                                        AND RC.ROUTING_ID = WV.ROUTING_ID)
  </sql>
  
  <select id="prod.state.workeraccperform.select" parameterClass="java.util.Map"
      resultClass="java.util.HashMap">
      <include refid="prod.state.workeraccperform.sql-select" />
      <include refid="prod.state.workeraccperform.sql-where" />
  </select>
  
  <select id="prod.state.workeraccperform.count" parameterClass="java.util.Map" resultClass="java.lang.Integer">
      SELECT COUNT(*) FROM (
        <include refid="prod.state.workeraccperform.sql-select" />
        <include refid="prod.state.workeraccperform.sql-where" />
      ) TOT
  </select>
  <!-- 작업자별 실적현황 화면 조회 끝 -->
  
  
  <!-- 공정 LOT 조회 시작 -->  
  <sql id="work.monitor.work.list.sql-select">
      SELECT RANK() OVER(ORDER BY LOT_NO, ROUTING_OP) AS RN
              ,ORG_ID AS ORGID
              ,COMPANY_ID AS COMPANYID
              ,LOT_NO AS LOTNO
              ,ITEM_CODE AS ITEMCODE
              ,ORDER_NAME AS ORDERNAME
              ,ITEM_NAME AS ITEMNAME
              ,ROUTING_ID AS ROUTINGID
              ,ROUTING_OP AS ROUTINGOP
              ,ROUTING_NAME AS ROUTINGNAME
              ,WORK_CENTER_CODE AS WORKCENTERCODE
              ,WORK_CENTER_NAME AS WORKCENTERNAME
              ,WORK_START_DATE AS WORKSTARTDATE
              ,WORK_END_DATE AS WORKENDDATE
              ,PRODUCED_QTY AS PRODUCEDQTY
              ,IMPORT_QTY AS IMPORTQTY
              ,FAULT_QTY AS FAULTQTY
<!--               ,FIRST_LOT_NO AS FIRSTLOTNO -->
              ,TRANS_LOT AS TRANSLOT
              ,LAST_LOT_NO AS LASTLOTNO
              ,WAREHOUSING_LOT AS WAREHOUSINGLOT
        FROM CB_LOT_HISTORY_WORK_V
  </sql>
  
  <sql id="work.monitor.work.list.sql-where">
      WHERE 1=1
      <isNotEmpty property="ORGID" prepend="AND">
              ORG_ID = #ORGID#
      </isNotEmpty>
      <isNotEmpty property="COMPANYID" prepend="AND">
              COMPANY_ID = #COMPANYID#
      </isNotEmpty>
      <isNotEmpty property="SEARCHTO">
          <isNotEmpty property="SEARCHFROM" prepend="AND">
              (NVL(WORK_START_DATE, TO_DATE(#SEARCHFROM#, 'YYYY-MM-DD')) <![CDATA[ >= ]]> TO_DATE(#SEARCHFROM#, 'YYYY-MM-DD')
              AND NVL(WORK_END_DATE, TO_DATE(#SEARCHTO#, 'YYYY-MM-DD')) <![CDATA[ <= ]]> TO_DATE(#SEARCHTO#, 'YYYY-MM-DD'))
          </isNotEmpty>
          <isEmpty property="SEARCHFROM" prepend="AND">
              NVL(WORK_END_DATE, TO_DATE(#SEARCHTO#, 'YYYY-MM-DD')) <![CDATA[ <= ]]> TO_DATE(#SEARCHTO#, 'YYYY-MM-DD')
          </isEmpty>
      </isNotEmpty>
      <isEmpty property="SEARCHTO">
          <isNotEmpty property="SEARCHFROM" prepend="AND">
              NVL(WORK_START_DATE, TO_DATE(#SEARCHFROM#, 'YYYY-MM-DD')) <![CDATA[ >= ]]> TO_DATE(#SEARCHFROM#, 'YYYY-MM-DD')
          </isNotEmpty>
      </isEmpty>
      <isNotEmpty property="ITEMCODE" prepend="AND">
              ITEM_CODE = #ITEMCODE#
      </isNotEmpty>
      <isNotEmpty property="LOTNO" prepend="AND">
              LOT_NO = #LOTNO#
      </isNotEmpty>
      ORDER BY LOT_NO, ROUTING_OP
  </sql>
  
  <select id="work.monitor.work.list.select" parameterClass="java.util.Map"
           resultClass="java.util.HashMap">
      <include refid="work.monitor.work.list.sql-select" />
      <include refid="work.monitor.work.list.sql-where" />
  </select>
    
  <select id="work.monitor.work.list.count" parameterClass="java.util.Map"
           resultClass="java.lang.Integer">
        SELECT COUNT(*)
          FROM (
              <include refid="work.monitor.work.list.sql-select" />
              <include refid="work.monitor.work.list.sql-where" />
           )
  </select>
  
    <select id="work.monitor.work.find.select" parameterClass="java.util.Map"
        resultClass="java.util.HashMap">
        SELECT *
          FROM (
        <include refid="work.monitor.work.list.sql-select" />
        <include refid="work.monitor.work.list.sql-where" />
        )
        WHERE 1=1
           AND RN = 1
    </select>
  <!-- 공정 LOT 조회 종료 -->
  
  
  <!-- 자재 LOT 조회 시작 -->  
  <sql id="work.monitor.trans.list.sql-select">
      SELECT RANK() OVER(ORDER BY TRANS_LOT, LOT_NO, LOT_SEQ) AS RN
              ,ORG_ID AS ORGID
              ,COMPANY_ID AS COMPANYID
              ,LOT_NO AS LOTNO
              ,TRANS_LOT AS TRANSLOT
              ,ITEM_CODE AS ITEMCODE
              ,ORDER_NAME AS ORDERNAME
              ,ITEM_NAME AS ITEMNAME
              ,TRANS_NO AS TRANSNO
              ,TRANS_SEQ AS TRANSSEQ
              ,TRANS_DATE AS TRANSDATE
              ,LOT_QTY AS LOTQTY
        FROM CB_LOT_HISTORY_TRANS_V
  </sql>
  
  <sql id="work.monitor.trans.list.sql-where">
      WHERE 1=1
      <isNotEmpty property="ORGID" prepend="AND">
              ORG_ID = #ORGID#
      </isNotEmpty>
      <isNotEmpty property="COMPANYID" prepend="AND">
              COMPANY_ID = #COMPANYID#
      </isNotEmpty>
      <!-- <isNotEmpty property="BIGCODE" prepend="AND">
              BIG_CODE = #BIGCODE#
      </isNotEmpty> -->
      <!-- <isNotEmpty property="ITEMCODE" prepend="AND">
              PROD_ITEM_CODE = #ITEMCODE#
      </isNotEmpty> -->
      <isNotEmpty property="LOTNO" prepend="AND">
              LOT_NO = #LOTNO#
      </isNotEmpty>
      <isNotEmpty property="TRANSLOT" prepend="AND">
              TRANS_LOT = #TRANSLOT#
      </isNotEmpty>
      ORDER BY TRANS_LOT, LOT_NO, LOT_SEQ
  </sql>
  
  <select id="work.monitor.trans.list.select" parameterClass="java.util.Map"
           resultClass="java.util.HashMap">
      <include refid="work.monitor.trans.list.sql-select" />
      <include refid="work.monitor.trans.list.sql-where" />
  </select>
    
  <select id="work.monitor.trans.list.count" parameterClass="java.util.Map"
           resultClass="java.lang.Integer">
        SELECT COUNT(*)
          FROM (
              <include refid="work.monitor.trans.list.sql-select" />
              <include refid="work.monitor.trans.list.sql-where" />
           )
  </select>
  <!-- 자재 LOT 조회 종료 -->
  
  
  <!-- 출하 LOT 조회 시작 -->  
  <sql id="work.monitor.warehousing.list.sql-select">
      SELECT RANK() OVER(ORDER BY LOT_NO) AS RN
              ,ORG_ID AS ORGID
              ,COMPANY_ID AS COMPANYID
              ,LOT_NO AS LOTNO
              ,BIG_CODE AS BIGCODE
              ,BIG_NAME AS BIGNAME
              ,ITEM_CODE AS ITEMCODE
              ,ORDER_NAME AS ORDERNAME
              ,ITEM_NAME AS ITEMNAME
              ,MATERIAL_TYPE AS MATERIALTYPE
              ,THICK AS THICK
              ,WIDTH AS WIDTH
              ,WORK_START_DATE AS WORKSTARTDATE
              ,WAREHOUSING_DATE AS WAREHOUSINGDATE
              ,WAREHOUSING_QTY AS WAREHOUSINGQTY
              ,CUST_LOT_NO AS CUSTLOTNO
              ,SHIP_NO AS SHIPNO
              ,SHIP_DATE AS SHIPDATE
              ,SHIP_QTY AS SHIPQTY
        FROM CB_LOT_HISTORY_WAREHOUSING_V
  </sql>
  
  <sql id="work.monitor.warehousing.list.sql-where">
      WHERE 1=1
      <isNotEmpty property="ORGID" prepend="AND">
              ORG_ID = #ORGID#
      </isNotEmpty>
      <isNotEmpty property="COMPANYID" prepend="AND">
              COMPANY_ID = #COMPANYID#
      </isNotEmpty>
      <isNotEmpty property="LASTLOTNO" prepend="AND">
              LOT_NO = #LASTLOTNO#
      </isNotEmpty>
      ORDER BY LOT_NO
  </sql>
  
  <select id="work.monitor.warehousing.list.select" parameterClass="java.util.Map"
           resultClass="java.util.HashMap">
      <include refid="work.monitor.warehousing.list.sql-select" />
      <include refid="work.monitor.warehousing.list.sql-where" />
  </select>
    
  <select id="work.monitor.warehousing.list.count" parameterClass="java.util.Map"
           resultClass="java.lang.Integer">
        SELECT COUNT(*)
          FROM (
              <include refid="work.monitor.warehousing.list.sql-select" />
              <include refid="work.monitor.warehousing.list.sql-where" />
           )
  </select>
  <!-- 출하 LOT 조회 종료 -->
  
  <!-- 설비부하율 조회 시작 -->  
  <select id="prod.state.equiploadfactor.select" parameterClass="java.util.Map"
      resultClass="java.util.HashMap">
			SELECT ROW_NUMBER() OVER(ORDER BY JT.ORGID, JT.COMPANYID, JT.DATES, JT.WORKCENTERCODE) AS RN
            ,JT.ORGID AS ORGID
			      ,JT.COMPANYID AS COMPANYID
			      ,MAX(JT.WORKSTARTDATE) AS WORKSTARTDATE
			      ,MAX(JT.WORKENDDATE) AS WORKENDDATE
            ,TO_CHAR(JT.DATES, 'YYYY-MM-DD') AS DATES
			      ,JT.WORKCENTERCODE AS WORKCENTERCODE
			      ,JT.WORKCENTERNAME AS WORKCENTERNAME
			      ,MAX(JT.WORKTIME) AS WORKTIME
			      ,MAX(JT.HAVECAPA) AS HAVECAPA
			      ,SUM(JT.NEEDCAPA) AS NEEDCAPA
			      ,AVG(JT.CAPARATE) AS CAPARATE
			  FROM(SELECT BB.ORGID
			            ,BB.COMPANYID
			            ,AA.WORKSTARTDATE
			            ,AA.WORKENDDATE
			            ,BB.DATES
			            ,BB.WORKCENTERCODE
			            ,BB.WORKCENTERNAME
			            ,AA.ITEMCODE
			            ,NVL(AA.WORKTIME, 0) AS WORKTIME
			            ,NVL(AA.HAVECAPA, 0) AS HAVECAPA
			            ,NVL(AA.NEEDCAPA, 0) AS NEEDCAPA
			            ,NVL(AA.CAPARATE, 0) AS CAPARATE
			        FROM(SELECT WO.ORGID AS ORGID
			                    ,WO.COMPANYID AS COMPANYID
			                    ,TO_CHAR(TO_DATE(DECODE(WO.WORKSTARTDATE, '', WO.WORKPLANSTARTDATE, WO.WORKSTARTDATE), 'YYYY-MM-DD HH24:MI'), 'YYYY-MM-DD') AS WORKSTARTDATE
			                    ,TO_CHAR(TO_DATE(DECODE(WO.WORKENDDATE, '', WO.WORKPLANENDDATE, WO.WORKENDDATE), 'YYYY-MM-DD HH24:MI'), 'YYYY-MM-DD') AS WORKENDDATE
			                    ,WO.ROUTINGCODE AS ROUTINGCODE
			                    ,WC.WORK_CENTER_CODE AS WORKCENTERCODE
			                    ,WC.WORK_CENTER_NAME AS WORKCENTERNAME
			                    ,WO.ITEMCODE AS ITEMCODE
			                    ,TRUNC((((24 * 60) - BT.BEAKTIME) / 60), 2) AS WORKTIME
			                    ,((24 * 60) - BT.BEAKTIME) AS HAVECAPA
			                    ,TRUNC(((NVL(RC.SETUP_TIME, 0) + NVL(RC.CYCLE_TIME, 0)) * (SUM(WO.WORKORDERQTY) - SUM(WO.PRODUCEDQTY)) /60), 2) AS NEEDCAPA
			                    ,TRUNC(((((NVL(RC.SETUP_TIME, 0) + NVL(RC.CYCLE_TIME, 0)) * (SUM(WO.WORKORDERQTY) - SUM(WO.PRODUCEDQTY)) / 60) / (((24 * 60) - BT.BEAKTIME) * 60)) * 100) , 2) AS CAPARATE
			                FROM CB_WORK_ORDER_LIST_V WO
			                    ,CB_EQUIPMENT_MASTER EM
			                    ,CB_WORK_CENTER WC
			                    ,CB_ROUTING_CONTROL RC
			                    ,(SELECT /*SUM(SC.REMARKS) AS BEAKTIME*/ SUM(SC.ATTRIBUTE1) AS BEAKTIME
			                        FROM CB_SMALL_CODE SC
			                       WHERE SC.ORG_ID = $ORGID$
			                         AND SC.COMPANY_ID = $COMPANYID$
			                         AND SC.BIG_CODE = 'MFG'
			                         AND SC.MIDDLE_CODE = 'BREAK_TIME') BT
			               WHERE WO.ORGID = EM.ORG_ID
			                 AND WO.COMPANYID= EM.COMPANY_ID
			                 AND WO.EQUIPMENTCODE = EM.EQUIPMENT_CODE
			                 AND EM.ORG_ID = WC.ORG_ID
			                 AND EM.COMPANY_ID= WC.COMPANY_ID
			                 AND EM.WORK_CENTER_CODE = WC.WORK_CENTER_CODE
			                 AND EM.USE_YN = 'Y'
			                 AND WC.WORK_CENTER_CODE NOT LIKE '%' || 'DJZ' || '%'
			                 AND WO.ORGID = RC.ORG_ID
			                 AND WO.COMPANYID = RC.COMPANY_ID
			                 AND WO.ITEMCODE = RC.ITEM_CODE
			                 AND WO.ROUTINGCODE = RC.ROUTING_ID
			                 AND WO.ORGID = $ORGID$
			                 AND WO.COMPANYID = $COMPANYID$
			               GROUP BY WO.ORGID, WO.COMPANYID,WC.WORK_CENTER_CODE,WC.WORK_CENTER_NAME
			                       ,BT.BEAKTIME, RC.SETUP_TIME, RC.CYCLE_TIME, WO.ITEMCODE, WO.WORKSTARTDATE
			                       ,WO.WORKENDDATE, WO.ROUTINGCODE, WO.WORKPLANSTARTDATE, WO.WORKPLANENDDATE)AA
			            ,(SELECT WC.ORG_ID AS ORGID
			                    ,WC.COMPANY_ID AS COMPANYID
			                    ,WC.WORK_CENTER_CODE AS WORKCENTERCODE
			                    ,WC.WORK_CENTER_NAME AS WORKCENTERNAME
			                    ,WC.ROUTING_CODE AS ROUTINGCODE
			                    ,AL.DATES AS DATES
			                FROM CB_WORK_CENTER WC
			                    ,(SELECT TO_DATE(#DATEFROM#,'YYYY-MM-DD') + level- 1 AS DATES
			                        FROM DUAL
			                       CONNECT BY level <![CDATA[ <= ]]> (TO_DATE(#DATETO#,'YYYY-MM-DD') + 1) - TO_DATE(#DATEFROM#,'YYYY-MM-DD')) AL
			               WHERE WC.ORG_ID = $ORGID$
			                 AND WC.COMPANY_ID = $COMPANYID$
			                 AND WC.WORK_CENTER_CODE NOT LIKE '%'||'DJZ'||'%')BB
			       WHERE AA.ORGID(+) = BB.ORGID
			         AND AA.COMPANYID(+) = BB.COMPANYID
			         AND AA.WORKCENTERCODE(+) = BB.WORKCENTERCODE
			         AND BB.DATES BETWEEN TO_DATE(AA.WORKSTARTDATE(+), 'YYYY-MM-DD') AND TO_DATE(AA.WORKENDDATE(+), 'YYYY-MM-DD'))JT
			 WHERE 1=1
      <isNotEmpty property="WORKCENTERCODE" prepend="AND">
              JT.WORKCENTERCODE = #WORKCENTERCODE#
      </isNotEmpty>
			   GROUP BY JT.ORGID, JT.COMPANYID, JT.DATES, JT.WORKCENTERCODE, JT.WORKCENTERNAME
			   ORDER BY JT.ORGID, JT.COMPANYID, JT.DATES, JT.WORKCENTERCODE
  </select>
  
  <select id="prod.state.equiploadfactor.count" parameterClass="java.util.Map" resultClass="java.lang.Integer">
      SELECT COUNT(*) FROM (
	      SELECT ROW_NUMBER() OVER(ORDER BY JT.ORGID, JT.COMPANYID, JT.DATES, JT.WORKCENTERCODE) AS RN
              ,JT.ORGID AS ORGID
	            ,JT.COMPANYID AS COMPANYID
	            ,MAX(JT.WORKSTARTDATE) AS WORKSTARTDATE
	            ,MAX(JT.WORKENDDATE) AS WORKENDDATE
              ,TO_CHAR(JT.DATES, 'YYYY-MM-DD') AS DATES
	            ,JT.WORKCENTERCODE AS WORKCENTERCODE
	            ,JT.WORKCENTERNAME AS WORKCENTERNAME
	            ,MAX(JT.WORKTIME) AS WORKTIME
	            ,MAX(JT.HAVECAPA) AS HAVECAPA
	            ,SUM(JT.NEEDCAPA) AS NEEDCAPA
	            ,AVG(JT.CAPARATE) AS CAPARATE
	        FROM(SELECT BB.ORGID
	                  ,BB.COMPANYID
	                  ,AA.WORKSTARTDATE
	                  ,AA.WORKENDDATE
	                  ,BB.DATES
	                  ,BB.WORKCENTERCODE
	                  ,BB.WORKCENTERNAME
	                  ,AA.ITEMCODE
	                  ,NVL(AA.WORKTIME, 0) AS WORKTIME
	                  ,NVL(AA.HAVECAPA, 0) AS HAVECAPA
	                  ,NVL(AA.NEEDCAPA, 0) AS NEEDCAPA
	                  ,NVL(AA.CAPARATE, 0) AS CAPARATE
	              FROM(SELECT WO.ORGID AS ORGID
	                          ,WO.COMPANYID AS COMPANYID
	                          ,TO_CHAR(TO_DATE(DECODE(WO.WORKSTARTDATE, '', WO.WORKPLANSTARTDATE, WO.WORKSTARTDATE), 'YYYY-MM-DD HH24:MI'), 'YYYY-MM-DD') AS WORKSTARTDATE
	                          ,TO_CHAR(TO_DATE(DECODE(WO.WORKENDDATE, '', WO.WORKPLANENDDATE, WO.WORKENDDATE), 'YYYY-MM-DD HH24:MI'), 'YYYY-MM-DD') AS WORKENDDATE
	                          ,WO.ROUTINGCODE AS ROUTINGCODE
	                          ,WC.WORK_CENTER_CODE AS WORKCENTERCODE
	                          ,WC.WORK_CENTER_NAME AS WORKCENTERNAME
	                          ,WO.ITEMCODE AS ITEMCODE
	                          ,TRUNC((((24 * 60) - BT.BEAKTIME) / 60), 2) AS WORKTIME
	                          ,((24 * 60) - BT.BEAKTIME) AS HAVECAPA
	                          ,TRUNC(((NVL(RC.SETUP_TIME, 0) + NVL(RC.CYCLE_TIME, 0)) * (SUM(WO.WORKORDERQTY) - SUM(WO.PRODUCEDQTY)) /60), 2) AS NEEDCAPA
	                          ,TRUNC(((((NVL(RC.SETUP_TIME, 0) + NVL(RC.CYCLE_TIME, 0)) * (SUM(WO.WORKORDERQTY) - SUM(WO.PRODUCEDQTY)) / 60) / (((24 * 60) - BT.BEAKTIME) * 60)) * 100) , 2) AS CAPARATE
	                      FROM CB_WORK_ORDER_LIST_V WO
	                          ,CB_EQUIPMENT_MASTER EM
	                          ,CB_WORK_CENTER WC
	                          ,CB_ROUTING_CONTROL RC
	                          ,(SELECT /*SUM(SC.REMARKS) AS BEAKTIME*/ SUM(SC.ATTRIBUTE1) AS BEAKTIME
	                              FROM CB_SMALL_CODE SC
	                             WHERE SC.ORG_ID = $ORGID$
	                               AND SC.COMPANY_ID = $COMPANYID$
	                               AND SC.BIG_CODE = 'MFG'
	                               AND SC.MIDDLE_CODE = 'BREAK_TIME') BT
	                     WHERE WO.ORGID = EM.ORG_ID
	                       AND WO.COMPANYID= EM.COMPANY_ID
	                       AND WO.EQUIPMENTCODE = EM.EQUIPMENT_CODE
	                       AND EM.ORG_ID = WC.ORG_ID
	                       AND EM.COMPANY_ID= WC.COMPANY_ID
	                       AND EM.WORK_CENTER_CODE = WC.WORK_CENTER_CODE
	                       AND EM.USE_YN = 'Y'
	                       AND WC.WORK_CENTER_CODE NOT LIKE '%' || 'DJZ' || '%'
	                       AND WO.ORGID = RC.ORG_ID
	                       AND WO.COMPANYID = RC.COMPANY_ID
	                       AND WO.ITEMCODE = RC.ITEM_CODE
	                       AND WO.ROUTINGCODE = RC.ROUTING_ID
	                       AND WO.ORGID = $ORGID$
	                       AND WO.COMPANYID = $COMPANYID$
	                     GROUP BY WO.ORGID, WO.COMPANYID,WC.WORK_CENTER_CODE,WC.WORK_CENTER_NAME
	                             ,BT.BEAKTIME, RC.SETUP_TIME, RC.CYCLE_TIME, WO.ITEMCODE, WO.WORKSTARTDATE
	                             ,WO.WORKENDDATE, WO.ROUTINGCODE, WO.WORKPLANSTARTDATE, WO.WORKPLANENDDATE)AA
	                  ,(SELECT WC.ORG_ID AS ORGID
	                          ,WC.COMPANY_ID AS COMPANYID
	                          ,WC.WORK_CENTER_CODE AS WORKCENTERCODE
	                          ,WC.WORK_CENTER_NAME AS WORKCENTERNAME
	                          ,WC.ROUTING_CODE AS ROUTINGCODE
	                          ,AL.DATES AS DATES
	                      FROM CB_WORK_CENTER WC
	                          ,(SELECT TO_DATE(#DATEFROM#,'YYYY-MM-DD') + level- 1 AS DATES
	                              FROM DUAL
	                             CONNECT BY level <![CDATA[ <= ]]> (TO_DATE(#DATETO#,'YYYY-MM-DD') + 1) - TO_DATE(#DATEFROM#,'YYYY-MM-DD')) AL
	                     WHERE WC.ORG_ID = $ORGID$
	                       AND WC.COMPANY_ID = $COMPANYID$
	                       AND WC.WORK_CENTER_CODE NOT LIKE '%'||'DJZ'||'%')BB
	             WHERE AA.ORGID(+) = BB.ORGID
	               AND AA.COMPANYID(+) = BB.COMPANYID
	               AND AA.WORKCENTERCODE(+) = BB.WORKCENTERCODE
	               AND BB.DATES BETWEEN TO_DATE(AA.WORKSTARTDATE(+), 'YYYY-MM-DD') AND TO_DATE(AA.WORKENDDATE(+), 'YYYY-MM-DD'))JT
	       WHERE 1=1
	      <isNotEmpty property="WORKCENTERCODE" prepend="AND">
	              JT.WORKCENTERCODE = #WORKCENTERCODE#
	      </isNotEmpty>
	         GROUP BY JT.ORGID, JT.COMPANYID, JT.DATES, JT.WORKCENTERCODE, JT.WORKCENTERNAME
	         ORDER BY JT.ORGID, JT.COMPANYID, JT.DATES, JT.WORKCENTERCODE
      ) TOT
  </select>
  <!-- 설비부하율 조회 끝 -->
  
  
  <!-- 월별 생산실적현황 (작업자) 조회 시작 -->
  <sql id="prod.manage.monthly.worker.list.sql-select">
        SELECT RANK() OVER(ORDER BY HM.ORG_ID, HM.COMPANY_ID, HM.EFFECTIVE_START_DATE, HM.EMPLOYEE_NUMBER) AS RN
                ,HM.ORG_ID AS ORGID
                ,HM.COMPANY_ID AS COMPANYID
                ,HM.EMPLOYEE_NUMBER AS EMPLOYEENUMBER
                ,HM.KR_NAME AS KRNAME
                ,CB_MFG_PKG.CB_MONTHLY_WORKER_QTY(HM.ORG_ID
                                                 ,HM.COMPANY_ID
                                                 ,SEARCH_YEAR
                                                 ,'01'
                                                 ,HM.EMPLOYEE_NUMBER
                                                 ,'LIST') AS MONTH01
                ,CB_MFG_PKG.CB_MONTHLY_WORKER_QTY(HM.ORG_ID
                                                 ,HM.COMPANY_ID
                                                 ,SEARCH_YEAR
                                                 ,'02'
                                                 ,HM.EMPLOYEE_NUMBER
                                                 ,'LIST') AS MONTH02
                ,CB_MFG_PKG.CB_MONTHLY_WORKER_QTY(HM.ORG_ID
                                                 ,HM.COMPANY_ID
                                                 ,SEARCH_YEAR
                                                 ,'03'
                                                 ,HM.EMPLOYEE_NUMBER
                                                 ,'LIST') AS MONTH03
                ,CB_MFG_PKG.CB_MONTHLY_WORKER_QTY(HM.ORG_ID
                                                 ,HM.COMPANY_ID
                                                 ,SEARCH_YEAR
                                                 ,'04'
                                                 ,HM.EMPLOYEE_NUMBER
                                                 ,'LIST') AS MONTH04
                ,CB_MFG_PKG.CB_MONTHLY_WORKER_QTY(HM.ORG_ID
                                                 ,HM.COMPANY_ID
                                                 ,SEARCH_YEAR
                                                 ,'05'
                                                 ,HM.EMPLOYEE_NUMBER
                                                 ,'LIST') AS MONTH05
                ,CB_MFG_PKG.CB_MONTHLY_WORKER_QTY(HM.ORG_ID
                                                 ,HM.COMPANY_ID
                                                 ,SEARCH_YEAR
                                                 ,'06'
                                                 ,HM.EMPLOYEE_NUMBER
                                                 ,'LIST') AS MONTH06
                ,CB_MFG_PKG.CB_MONTHLY_WORKER_QTY(HM.ORG_ID
                                                 ,HM.COMPANY_ID
                                                 ,SEARCH_YEAR
                                                 ,'07'
                                                 ,HM.EMPLOYEE_NUMBER
                                                 ,'LIST') AS MONTH07
                ,CB_MFG_PKG.CB_MONTHLY_WORKER_QTY(HM.ORG_ID
                                                 ,HM.COMPANY_ID
                                                 ,SEARCH_YEAR
                                                 ,'08'
                                                 ,HM.EMPLOYEE_NUMBER
                                                 ,'LIST') AS MONTH08
                ,CB_MFG_PKG.CB_MONTHLY_WORKER_QTY(HM.ORG_ID
                                                 ,HM.COMPANY_ID
                                                 ,SEARCH_YEAR
                                                 ,'09'
                                                 ,HM.EMPLOYEE_NUMBER
                                                 ,'LIST') AS MONTH09
                ,CB_MFG_PKG.CB_MONTHLY_WORKER_QTY(HM.ORG_ID
                                                 ,HM.COMPANY_ID
                                                 ,SEARCH_YEAR
                                                 ,'10'
                                                 ,HM.EMPLOYEE_NUMBER
                                                 ,'LIST') AS MONTH10
                ,CB_MFG_PKG.CB_MONTHLY_WORKER_QTY(HM.ORG_ID
                                                 ,HM.COMPANY_ID
                                                 ,SEARCH_YEAR
                                                 ,'11'
                                                 ,HM.EMPLOYEE_NUMBER
                                                 ,'LIST') AS MONTH11
                ,CB_MFG_PKG.CB_MONTHLY_WORKER_QTY(HM.ORG_ID
                                                 ,HM.COMPANY_ID
                                                 ,SEARCH_YEAR
                                                 ,'12'
                                                 ,HM.EMPLOYEE_NUMBER
                                                 ,'LIST') AS MONTH12
                ,CB_MFG_PKG.CB_MONTHLY_WORKER_QTY(HM.ORG_ID
                                                 ,HM.COMPANY_ID
                                                 ,SEARCH_YEAR
                                                 ,NULL
                                                 ,HM.EMPLOYEE_NUMBER
                                                 ,'TOTAL') AS TOTALMONTH
      FROM CB_HUMANRESOURCE_MANAGER_V HM
              ,(SELECT #ORGID# AS ORG_ID
                      ,#COMPANYID# AS COMPANY_ID
                      ,#SEARCHYEAR# AS SEARCH_YEAR
                  FROM DUAL) TMP
  </sql>

  <sql id="prod.manage.monthly.worker.list.sql-where">
          WHERE 1=1
             AND HM.ORG_ID = TMP.ORG_ID
             AND HM.COMPANY_ID = TMP.COMPANY_ID
             AND (HM.ORG_ID, HM.COMPANY_ID, HM.EMPLOYEE_NUMBER) IN
                (SELECT WOD.ORG_ID, WOD.COMPANY_ID, WOD.WORKER
				          FROM CB_WORK_ORDER_D WOD
				         WHERE 1 = 1
				           AND WOD.ORG_ID = TMP.ORG_ID
				           AND WOD.COMPANY_ID = TMP.COMPANY_ID
				           AND TMP.SEARCH_YEAR BETWEEN TO_CHAR(WOD.START_TIME, 'YYYY') AND TO_CHAR(WOD.END_TIME, 'YYYY'))
          <isNotEmpty property="EMPLOYEENUMBER" prepend="AND">
              HM.EMPLOYEE_NUMBER = #EMPLOYEENUMBER#
          </isNotEmpty>
          ORDER BY HM.ORG_ID, HM.COMPANY_ID, HM.EFFECTIVE_START_DATE, HM.EMPLOYEE_NUMBER
  </sql>

  <select id="prod.manage.monthly.worker.list.select" parameterClass="java.util.Map"
      resultClass="java.util.HashMap">
          <include refid="prod.manage.monthly.worker.list.sql-select" />
          <include refid="prod.manage.monthly.worker.list.sql-where" />
  </select>

  <select id="prod.manage.monthly.worker.list.count" parameterClass="java.util.Map"
      resultClass="java.lang.Integer">
      SELECT COUNT(*) FROM (
          <include refid="prod.manage.monthly.worker.list.sql-select" />
          <include refid="prod.manage.monthly.worker.list.sql-where" />
      ) TOT
  </select>
  <!-- 월별 생산실적현황 (작업자) 조회 끝 -->
  
  <!-- 월별 생산실적현황 (장비별) 조회 시작 -->
  <sql id="prod.manage.monthly.equip.list.sql-select">
        SELECT RANK() OVER(ORDER BY WC.ORG_ID, WC.COMPANY_ID, (SELECT SC.ATTRIBUTE1
	                                                                FROM CB_SMALL_CODE SC
	                                                               WHERE 1=1
	                                                                 AND SC.ORG_ID = WC.ORG_ID
	                                                                 AND SC.COMPANY_ID = WC.COMPANY_ID
	                                                                 AND SC.BIG_CODE = 'CMM'
	                                                                 AND SC.MIDDLE_CODE = 'WORK_DEPT'
	                                                                 AND SC.SMALL_CODE = WC.WORK_DEPT), WC.SEQ, WC.WORK_CENTER_NAME) AS RN
                  ,WC.ORG_ID AS ORGID
                  ,WC.COMPANY_ID AS COMPANYID
                  ,WC.WORK_DEPT AS WORKDEPT
                  ,(SELECT SC.SMALL_NAME
                      FROM CB_SMALL_CODE SC
                     WHERE 1=1
                       AND SC.ORG_ID = WC.ORG_ID
                       AND SC.COMPANY_ID = WC.COMPANY_ID
                       AND SC.BIG_CODE = 'CMM'
                       AND SC.MIDDLE_CODE = 'WORK_DEPT'
                       AND SC.SMALL_CODE = WC.WORK_DEPT) AS WORKDEPTNAME
                  ,WC.WORK_CENTER_CODE AS WORKCENTERCODE
                  ,WC.WORK_CENTER_NAME AS WORKCENTERNAME
                  ,CB_MFG_PKG.CB_MONTHLY_EQUIP_QTY(WC.ORG_ID
                                                   ,WC.COMPANY_ID
                                                   ,SEARCH_YEAR
                                                   ,'01'
                                                   ,WC.WORK_CENTER_CODE
                                                   ,'LIST') AS MONTH01
                  ,CB_MFG_PKG.CB_MONTHLY_EQUIP_QTY(WC.ORG_ID
                                                   ,WC.COMPANY_ID
                                                   ,SEARCH_YEAR
                                                   ,'02'
                                                   ,WC.WORK_CENTER_CODE
                                                   ,'LIST') AS MONTH02
                  ,CB_MFG_PKG.CB_MONTHLY_EQUIP_QTY(WC.ORG_ID
                                                   ,WC.COMPANY_ID
                                                   ,SEARCH_YEAR
                                                   ,'03'
                                                   ,WC.WORK_CENTER_CODE
                                                   ,'LIST') AS MONTH03
                  ,CB_MFG_PKG.CB_MONTHLY_EQUIP_QTY(WC.ORG_ID
                                                   ,WC.COMPANY_ID
                                                   ,SEARCH_YEAR
                                                   ,'04'
                                                   ,WC.WORK_CENTER_CODE
                                                   ,'LIST') AS MONTH04
                  ,CB_MFG_PKG.CB_MONTHLY_EQUIP_QTY(WC.ORG_ID
                                                   ,WC.COMPANY_ID
                                                   ,SEARCH_YEAR
                                                   ,'05'
                                                   ,WC.WORK_CENTER_CODE
                                                   ,'LIST') AS MONTH05
                  ,CB_MFG_PKG.CB_MONTHLY_EQUIP_QTY(WC.ORG_ID
                                                   ,WC.COMPANY_ID
                                                   ,SEARCH_YEAR
                                                   ,'06'
                                                   ,WC.WORK_CENTER_CODE
                                                   ,'LIST') AS MONTH06
                  ,CB_MFG_PKG.CB_MONTHLY_EQUIP_QTY(WC.ORG_ID
                                                   ,WC.COMPANY_ID
                                                   ,SEARCH_YEAR
                                                   ,'07'
                                                   ,WC.WORK_CENTER_CODE
                                                   ,'LIST') AS MONTH07
                  ,CB_MFG_PKG.CB_MONTHLY_EQUIP_QTY(WC.ORG_ID
                                                   ,WC.COMPANY_ID
                                                   ,SEARCH_YEAR
                                                   ,'08'
                                                   ,WC.WORK_CENTER_CODE
                                                   ,'LIST') AS MONTH08
                  ,CB_MFG_PKG.CB_MONTHLY_EQUIP_QTY(WC.ORG_ID
                                                   ,WC.COMPANY_ID
                                                   ,SEARCH_YEAR
                                                   ,'09'
                                                   ,WC.WORK_CENTER_CODE
                                                   ,'LIST') AS MONTH09
                  ,CB_MFG_PKG.CB_MONTHLY_EQUIP_QTY(WC.ORG_ID
                                                   ,WC.COMPANY_ID
                                                   ,SEARCH_YEAR
                                                   ,'10'
                                                   ,WC.WORK_CENTER_CODE
                                                   ,'LIST') AS MONTH10
                  ,CB_MFG_PKG.CB_MONTHLY_EQUIP_QTY(WC.ORG_ID
                                                   ,WC.COMPANY_ID
                                                   ,SEARCH_YEAR
                                                   ,'11'
                                                   ,WC.WORK_CENTER_CODE
                                                   ,'LIST') AS MONTH11
                  ,CB_MFG_PKG.CB_MONTHLY_EQUIP_QTY(WC.ORG_ID
                                                   ,WC.COMPANY_ID
                                                   ,SEARCH_YEAR
                                                   ,'12'
                                                   ,WC.WORK_CENTER_CODE
                                                   ,'LIST') AS MONTH12
                  ,CB_MFG_PKG.CB_MONTHLY_EQUIP_QTY(WC.ORG_ID
                                                   ,WC.COMPANY_ID
                                                   ,SEARCH_YEAR
                                                   ,NULL
                                                   ,WC.WORK_CENTER_CODE
                                                   ,'TOTAL') AS TOTALMONTH
          FROM CB_WORK_CENTER WC
                  ,(SELECT #ORGID# AS ORG_ID
                          ,#COMPANYID# AS COMPANY_ID
                          ,#SEARCHYEAR# AS SEARCH_YEAR
                      FROM DUAL) TMP
  </sql>

  <sql id="prod.manage.monthly.equip.list.sql-where">
          WHERE 1=1
             AND WC.ORG_ID = TMP.ORG_ID
             AND WC.COMPANY_ID = TMP.COMPANY_ID
             AND (WC.ORG_ID, WC.COMPANY_ID, WC.WORK_CENTER_CODE) IN
                (SELECT WOD.ORG_ID, WOD.COMPANY_ID, WOD.WORK_CENTER_CODE
                  FROM CB_WORK_ORDER_D WOD
                 WHERE 1 = 1
                   AND WOD.ORG_ID = TMP.ORG_ID
                   AND WOD.COMPANY_ID = TMP.COMPANY_ID
                   AND TMP.SEARCH_YEAR BETWEEN TO_CHAR(WOD.START_TIME, 'YYYY') AND TO_CHAR(WOD.END_TIME, 'YYYY'))
          <isNotEmpty property="WORKDEPT" prepend="AND">
              WC.WORK_DEPT = #WORKDEPT#
          </isNotEmpty>
          <isNotEmpty property="WORKCENTERCODE" prepend="AND">
              WC.WORK_CENTER_CODE = #WORKCENTERCODE#
          </isNotEmpty>
          ORDER BY WC.ORG_ID, WC.COMPANY_ID, (SELECT SC.ATTRIBUTE1
                                                               FROM CB_SMALL_CODE SC
                                                              WHERE 1=1
                                                                AND SC.ORG_ID = WC.ORG_ID
                                                                AND SC.COMPANY_ID = WC.COMPANY_ID
                                                                AND SC.BIG_CODE = 'CMM'
                                                                AND SC.MIDDLE_CODE = 'WORK_DEPT'
                                                                AND SC.SMALL_CODE = WC.WORK_DEPT), WC.SEQ, WC.WORK_CENTER_NAME
  </sql>

  <select id="prod.manage.monthly.equip.list.select" parameterClass="java.util.Map"
      resultClass="java.util.HashMap">
          <include refid="prod.manage.monthly.equip.list.sql-select" />
          <include refid="prod.manage.monthly.equip.list.sql-where" />
  </select>

  <select id="prod.manage.monthly.equip.list.count" parameterClass="java.util.Map"
      resultClass="java.lang.Integer">
      SELECT COUNT(*) FROM (
          <include refid="prod.manage.monthly.equip.list.sql-select" />
          <include refid="prod.manage.monthly.equip.list.sql-where" />
      ) TOT
  </select>
  <!-- 월별 생산실적현황 (장비별) 조회 끝 -->
  
  
  <!-- 월별 공구불출 현황 조회 시작 -->  
  <sql id="work.order.monthly.discharge.sql-select">
      SELECT DENSE_RANK() OVER(ORDER BY TCM.ORG_ID, TCM.COMPANY_ID, TCM.ROUTING_NO, TCM.ITEM_CODE, TCM.CHECK_SEQ) AS RN
              ,TCM.ORG_ID AS ORGID
              ,TCM.COMPANY_ID AS COMPANYID
              ,TCM.CHECK_SEQ AS CHECKSEQ
              ,TCM.ROUTING_NO AS ROUTINGNO
              ,TCM.ROUTING_GROUP_NAME AS ROUTINGGROUPNAME
              ,TCM.ITEM_CODE AS ITEMCODE
              ,TCM.ITEM_NAME AS ITEMNAME
              ,TCM.ITEM_STANDARD AS ITEMSTANDARD
              ,NVL((SELECT COUNT(*)
                      FROM CB_TOOL_CHANGE_RESULT TCR
                     WHERE 1=1
                       AND TCR.ORG_ID = TCM.ORG_ID
                       AND TCR.COMPANY_ID = TCM.COMPANY_ID
                       AND TCR.ITEM_CODE = TCM.ITEM_CODE
                       AND TCR.CHECK_SEQ = TCM.CHECK_SEQ
                       AND TCR.CHANGE_DATE BETWEEN TMP.SEARCH_FROM AND TMP.SEARCH_TO
                       ), 0) AS RELEASEQTY
              ,NVL((SELECT SP.UNIT_PRICE_A
                      FROM CB_SALES_PRICE SP
                     WHERE 1=1
                       AND SP.ORG_ID = TCM.ORG_ID
                       AND SP.COMPANY_ID = TCM.COMPANY_ID
                       AND SP.ITEM_CODE = TCM.ITEM_CODE
                       AND TMP.SEARCH_TO BETWEEN SP.EFFECTIVE_START_DATE AND SP.EFFECTIVE_END_DATE
                   ), 0) AS SALESPRICE
      FROM CB_TOOL_CHECK_MASTER_V TCM
              ,(SELECT TRUNC(TO_DATE(#SEARCHMONTH#, 'YYYY-MM'), 'MM') AS SEARCH_FROM
                      ,LAST_DAY(TO_DATE(#SEARCHMONTH#, 'YYYY-MM')) AS SEARCH_TO
                  FROM DUAL) TMP
  </sql>
  
  <sql id="work.order.monthly.discharge.sql-where">
      WHERE 1=1
         AND (TCM.ORG_ID, TCM.COMPANY_ID, TCM.ITEM_CODE, TCM.CHECK_SEQ) IN (SELECT TCR.ORG_ID, TCR.COMPANY_ID, TCR.ITEM_CODE, TCR.CHECK_SEQ
                                                                                                            FROM CB_TOOL_CHANGE_RESULT TCR
                                                                                                           WHERE 1=1
                                                                                                            <isNotEmpty property="ORGID" prepend="AND">
                                                                                                                    TCR.ORG_ID = #ORGID#
                                                                                                            </isNotEmpty>
                                                                                                            <isNotEmpty property="COMPANYID" prepend="AND">
                                                                                                                    TCR.COMPANY_ID = #COMPANYID#
                                                                                                            </isNotEmpty>
                                                                                                             AND TCR.CHANGE_DATE BETWEEN TMP.SEARCH_FROM AND TMP.SEARCH_TO)
      <isNotEmpty property="SEARCHROUTINGGROUP" prepend="AND">
              TCM.ROUTING_NO = #SEARCHROUTINGGROUP#
      </isNotEmpty>
      ORDER BY TCM.ORG_ID, TCM.COMPANY_ID, TCM.ROUTING_NO, TCM.ITEM_CODE, TCM.CHECK_SEQ
  </sql>
  
  <select id="work.order.monthly.discharge.select" parameterClass="java.util.Map"
           resultClass="java.util.HashMap">
       SELECT DENSE_RANK() OVER(ORDER BY ORGID, COMPANYID, ROUTINGNO, ITEMNAME, ITEMSTANDARD, ITEMCODE) AS RN
                ,ORGID
                ,COMPANYID
                ,ROUTINGNO
                ,ROUTINGGROUPNAME
                ,ITEMCODE
                ,ITEMNAME
                ,ITEMSTANDARD
                ,SUM(RELEASEQTY) AS RELEASEQTY
                ,MAX(SALESPRICE) AS SALESPRICE
                ,SUM(RELEASEQTY) * MAX(SALESPRICE) AS SALESAMOUNT
                ,NULL AS REMARKS
        FROM (
      <include refid="work.order.monthly.discharge.sql-select" />
      <include refid="work.order.monthly.discharge.sql-where" />
      ) A
       WHERE 1=1
       GROUP BY ORGID, COMPANYID, ROUTINGNO, ROUTINGGROUPNAME, ITEMCODE, ITEMNAME, ITEMSTANDARD
       ORDER BY ORGID, COMPANYID, ROUTINGNO, ITEMNAME, ITEMSTANDARD, ITEMCODE
  </select>
    
  <select id="work.order.monthly.discharge.count" parameterClass="java.util.Map"
           resultClass="java.lang.Integer">
        SELECT COUNT(*)
          FROM (
               SELECT DENSE_RANK() OVER(ORDER BY ORGID, COMPANYID, ROUTINGNO, ITEMNAME, ITEMSTANDARD, ITEMCODE) AS RN
                        ,ORGID
                        ,COMPANYID
                        ,ROUTINGNO
                        ,ROUTINGGROUPNAME
                        ,ITEMCODE
                        ,ITEMNAME
                        ,ITEMSTANDARD
                        ,SUM(RELEASEQTY) AS RELEASEQTY
                        ,MAX(SALESPRICE) AS SALESPRICE
                        ,SUM(RELEASEQTY) * MAX(SALESPRICE) AS SALESAMOUNT
                        ,NULL AS REMARKS
                FROM (
              <include refid="work.order.monthly.discharge.sql-select" />
              <include refid="work.order.monthly.discharge.sql-where" />
              ) A
               WHERE 1=1
               GROUP BY ORGID, COMPANYID, ROUTINGNO, ROUTINGGROUPNAME, ITEMCODE, ITEMNAME, ITEMSTANDARD
               ORDER BY ORGID, COMPANYID, ROUTINGNO, ITEMNAME, ITEMSTANDARD, ITEMCODE
           )
  </select>
  <!-- 월별 공구불출 현황 조회 종료 -->
  
  <!-- 모니터링 > 1페이지 종료 -->
  <sql id="work.order.monitor.page1.sql-select">
      SELECT TMP.ORG_ID AS ORGID
				      ,TMP.COMPANY_ID AS COMPANYID
				      ,TMP.SEARCH_DATE AS SEARCHDATE
				      ,CB_MONITORING_PKG.CB_MONTHLY_SALES_QTY(TMP.ORG_ID
				                                             ,TMP.COMPANY_ID
				                                             ,TMP.SEARCH_DATE) AS SALESQTY
				      ,CB_MONITORING_PKG.CB_MONTHLY_SHIP_QTY(TMP.ORG_ID
				                                            ,TMP.COMPANY_ID
				                                            ,TMP.SEARCH_DATE) AS SHIPQTY
				      ,CB_MONITORING_PKG.CB_MONTHLY_SALES_SHIP_RATE(TMP.ORG_ID
				                                                   ,TMP.COMPANY_ID
				                                                   ,TMP.SEARCH_DATE) AS SALESRATE
				      ,CB_MONITORING_PKG.CB_MONTHLY_SALES_SHIP_COLOR(TMP.ORG_ID
				                                                    ,TMP.COMPANY_ID
				                                                    ,TMP.SEARCH_DATE) AS SALESCOLOR
				      ,CB_MONITORING_PKG.CB_MONTHLY_PLAN_QTY(TMP.ORG_ID
				                                            ,TMP.COMPANY_ID
				                                            ,TMP.SEARCH_DATE
				                                            ,NULL) AS PLANQTY
				      ,CB_MONITORING_PKG.CB_MONTHLY_RESULT_QTY(TMP.ORG_ID
				                                              ,TMP.COMPANY_ID
				                                              ,TMP.SEARCH_DATE
				                                              ,NULL) AS RESULTQTY
				      ,CB_MONITORING_PKG.CB_MONTHLY_PLAN_RESULT_RATE(TMP.ORG_ID
				                                                    ,TMP.COMPANY_ID
				                                                    ,TMP.SEARCH_DATE
				                                                    ,NULL) AS PRODRATE
				      ,CB_MONITORING_PKG.CB_MONTHLY_PLAN_RESULT_COLOR(TMP.ORG_ID
				                                                     ,TMP.COMPANY_ID
				                                                     ,TMP.SEARCH_DATE
				                                                     ,NULL) AS PRODCOLOR
				      ,CB_MONITORING_PKG.CB_MONTHLY_TARGET_QTY(TMP.ORG_ID
				                                              ,TMP.COMPANY_ID
				                                              ,TMP.SEARCH_DATE) AS TARGETQTY
				      ,CB_MONITORING_PKG.CB_MONTHLY_NCR_QTY(TMP.ORG_ID
				                                           ,TMP.COMPANY_ID
				                                           ,TMP.SEARCH_DATE) AS NCRQTY
				      ,CB_MONITORING_PKG.CB_MONTHLY_QUALITY_RATE(TMP.ORG_ID
				                                                ,TMP.COMPANY_ID
				                                                ,TMP.SEARCH_DATE) AS QUALITYRATE
				      ,CB_MONITORING_PKG.CB_MONTHLY_QUALITY_COLOR(TMP.ORG_ID
				                                                 ,TMP.COMPANY_ID
				                                                 ,TMP.SEARCH_DATE) AS QULITYCOLOR
		  FROM (SELECT #ORGID# AS ORG_ID
				              ,#COMPANYID# AS COMPANY_ID
				              ,TO_DATE(#SEARCHDATE#, 'YYYY-MM-DD') AS SEARCH_DATE
		          FROM DUAL
		        ) TMP
  </sql>
  
  <select id="work.order.monitor.page1.select" parameterClass="java.util.Map"
      resultClass="java.util.HashMap" remapResults="true">
          <include refid="work.order.monitor.page1.sql-select" />
  </select>
  
  <select id="work.order.monitor.page1.count" parameterClass="java.util.Map"
      resultClass="java.lang.Integer">
      SELECT COUNT(*)
        FROM (
          <include refid="work.order.monitor.page1.sql-select" />
          )
  </select>
  <!-- 모니터링 > 1페이지 종료 -->
  
  <!-- 모니터링 > 2페이지 종료 -->
  <sql id="work.order.monitor.page2.sql-select">
      SELECT SC.ORG_ID AS ORGID
				      ,SC.COMPANY_ID AS COMPANYID
				      ,TMP.SEARCH_DATE AS SEARCHDATE
				      ,RANK() OVER(ORDER BY SC.ORG_ID, SC.COMPANY_ID, SC.BIG_CODE, SC.MIDDLE_CODE, SC.SMALL_CODE) AS RN
				      ,SC.SMALL_CODE AS VALUE
				      ,SC.SMALL_NAME AS LABEL
				      ,CB_MONITORING_PKG.CB_MONTHLY_PLAN_QTY(SC.ORG_ID
				                                            ,SC.COMPANY_ID
				                                            ,TMP.SEARCH_DATE
				                                            ,SC.SMALL_CODE) AS PLANQTY
				      ,CB_MONITORING_PKG.CB_MONTHLY_RESULT_QTY(SC.ORG_ID
				                                              ,SC.COMPANY_ID
				                                              ,TMP.SEARCH_DATE
				                                              ,SC.SMALL_CODE) AS RESULTQTY
				      ,CB_MONITORING_PKG.CB_MONTHLY_PLAN_RESULT_RATE(SC.ORG_ID
				                                                    ,SC.COMPANY_ID
				                                                    ,TMP.SEARCH_DATE
				                                                    ,SC.SMALL_CODE) AS PRODRATE
				      ,CB_MONITORING_PKG.CB_MONTHLY_PLAN_RESULT_COLOR(SC.ORG_ID
				                                                     ,SC.COMPANY_ID
				                                                     ,TMP.SEARCH_DATE
				                                                     ,SC.SMALL_CODE) AS PRODCOLOR
		  FROM CB_SMALL_CODE SC
		      ,(SELECT #ORGID# AS ORG_ID
                      ,#COMPANYID# AS COMPANY_ID
                      ,TO_DATE(#SEARCHDATE#, 'YYYY-MM-DD') AS SEARCH_DATE
              FROM DUAL
            ) TMP
  </sql>
  
  <sql id="work.order.monitor.page2.sql-where">
    WHERE 1=1
		   AND SC.ORG_ID = TMP.ORG_ID
		   AND SC.COMPANY_ID = TMP.COMPANY_ID
		   AND SC.BIG_CODE = 'MFG'
		   AND SC.MIDDLE_CODE = 'ROUTING_GROUP'
		   AND SC.USE_YN = 'Y'
  </sql>
  
  <select id="work.order.monitor.page2.select" parameterClass="java.util.Map"
      resultClass="java.util.HashMap" remapResults="true">
      SELECT *
        FROM (
          <include refid="work.order.monitor.page2.sql-select" />
          <include refid="work.order.monitor.page2.sql-where" />
          )
       WHERE 1=1
         AND RN BETWEEN #PAGESTART# AND #PAGEEND#
  </select>
  
  <select id="work.order.monitor.page2.count" parameterClass="java.util.Map"
      resultClass="java.lang.Integer">
      SELECT COUNT(*)
        FROM (
	          <include refid="work.order.monitor.page2.sql-select" />
	          <include refid="work.order.monitor.page2.sql-where" />
          )
  </select>
  <!-- 모니터링 > 2페이지 종료 -->
  
  <!-- 모니터링 > 3페이지 시작 -->
  <sql id="work.order.monitor.page3.sql-select">
      SELECT WC.ORG_ID AS ORGID
				      ,WC.COMPANY_ID AS COMPANYID
				      ,TMP.SEARCH_DATE AS SEARCHDATE
				      ,RANK() OVER(ORDER BY WC.ORG_ID, WC.COMPANY_ID, WC.SEQ, WC.WORK_CENTER_CODE) AS RN
				      ,WC.WORK_CENTER_CODE AS VALUE
				      ,WC.WORK_CENTER_NAME AS LABEL
				      ,WC.MODEL_STANDARD AS MODELSTANDARD
				      ,CB_MONITORING_PKG.CB_EQUIPMENT_OPERATE_TEXT(WC.ORG_ID
				                                                  ,WC.COMPANY_ID
				                                                  ,TMP.SEARCH_DATE
                                                          ,WC.WORK_CENTER_CODE) AS OPERATETEXT
				      ,CB_MONITORING_PKG.CB_EQUIPMENT_OPERATE_COLOR(WC.ORG_ID
				                                                   ,WC.COMPANY_ID
				                                                   ,TMP.SEARCH_DATE
                                                           ,WC.WORK_CENTER_CODE) AS OPERATECOLOR
		  FROM CB_WORK_CENTER WC
          ,(SELECT #ORGID# AS ORG_ID
                      ,#COMPANYID# AS COMPANY_ID
                      ,SYSDATE AS SEARCH_DATE
              FROM DUAL
            ) TMP
  </sql>
  
  <sql id="work.order.monitor.page3.sql-where">
    WHERE 1=1
		   AND WC.ORG_ID = TMP.ORG_ID
		   AND WC.COMPANY_ID = TMP.COMPANY_ID
		   AND WC.WORK_DEPT IN ('A', 'B')
		   AND TMP.SEARCH_DATE BETWEEN WC.EFFECTIVE_START_DATE AND WC.EFFECTIVE_END_DATE
  </sql>
  
  <select id="work.order.monitor.page3.select" parameterClass="java.util.Map"
      resultClass="java.util.HashMap" remapResults="true">
      SELECT *
        FROM (
          <include refid="work.order.monitor.page3.sql-select" />
          <include refid="work.order.monitor.page3.sql-where" />
          )
       WHERE 1=1
         AND RN BETWEEN #PAGESTART# AND #PAGEEND#
  </select>
  
  <select id="work.order.monitor.page3.count" parameterClass="java.util.Map"
      resultClass="java.lang.Integer">
      SELECT COUNT(*)
        FROM (
            <include refid="work.order.monitor.page3.sql-select" />
            <include refid="work.order.monitor.page3.sql-where" />
          )
  </select>
  
  <sql id="work.order.monitor.page3.listagg.sql-select">
      SELECT TMP.ORG_ID AS ORGID
				      ,TMP.COMPANY_ID AS COMPANYID
				      ,TMP.SEARCH_DATE AS SEARCHDATE
				      ,CB_MONITORING_PKG.CB_EQUIPMENT_DATA_FIND(TMP.ORG_ID
				                                               ,TMP.COMPANY_ID
				                                               ,TMP.SEARCH_DATE
				                                               ,1 + ((SEARCH_PAGE - 1) * LIST_COUNT)
				                                               ,'LABEL') AS LABEL1
				      ,CB_MONITORING_PKG.CB_EQUIPMENT_DATA_FIND(TMP.ORG_ID
				                                               ,TMP.COMPANY_ID
				                                               ,TMP.SEARCH_DATE
				                                               ,2 + ((SEARCH_PAGE - 1) * LIST_COUNT)
				                                               ,'LABEL') AS LABEL2
				      ,CB_MONITORING_PKG.CB_EQUIPMENT_DATA_FIND(TMP.ORG_ID
				                                               ,TMP.COMPANY_ID
				                                               ,TMP.SEARCH_DATE
				                                               ,3 + ((SEARCH_PAGE - 1) * LIST_COUNT)
				                                               ,'LABEL') AS LABEL3
				      ,CB_MONITORING_PKG.CB_EQUIPMENT_DATA_FIND(TMP.ORG_ID
				                                               ,TMP.COMPANY_ID
				                                               ,TMP.SEARCH_DATE
				                                               ,4 + ((SEARCH_PAGE - 1) * LIST_COUNT)
				                                               ,'LABEL') AS LABEL4
				      ,CB_MONITORING_PKG.CB_EQUIPMENT_DATA_FIND(TMP.ORG_ID
				                                               ,TMP.COMPANY_ID
				                                               ,TMP.SEARCH_DATE
				                                               ,5 + ((SEARCH_PAGE - 1) * LIST_COUNT)
				                                               ,'LABEL') AS LABEL5
				      ,CB_MONITORING_PKG.CB_EQUIPMENT_DATA_FIND(TMP.ORG_ID
				                                               ,TMP.COMPANY_ID
				                                               ,TMP.SEARCH_DATE
				                                               ,6 + ((SEARCH_PAGE - 1) * LIST_COUNT)
				                                               ,'LABEL') AS LABEL6
				      ,CB_MONITORING_PKG.CB_EQUIPMENT_DATA_FIND(TMP.ORG_ID
				                                               ,TMP.COMPANY_ID
				                                               ,TMP.SEARCH_DATE
				                                               ,7 + ((SEARCH_PAGE - 1) * LIST_COUNT)
				                                               ,'LABEL') AS LABEL7
				      ,CB_MONITORING_PKG.CB_EQUIPMENT_DATA_FIND(TMP.ORG_ID
				                                               ,TMP.COMPANY_ID
				                                               ,TMP.SEARCH_DATE
				                                               ,8 + ((SEARCH_PAGE - 1) * LIST_COUNT)
				                                               ,'LABEL') AS LABEL8
				      ,CB_MONITORING_PKG.CB_EQUIPMENT_DATA_FIND(TMP.ORG_ID
				                                               ,TMP.COMPANY_ID
				                                               ,TMP.SEARCH_DATE
				                                               ,9 + ((SEARCH_PAGE - 1) * LIST_COUNT)
				                                               ,'LABEL') AS LABEL9
				      ,CB_MONITORING_PKG.CB_EQUIPMENT_DATA_FIND(TMP.ORG_ID
				                                               ,TMP.COMPANY_ID
				                                               ,TMP.SEARCH_DATE
				                                               ,10 + ((SEARCH_PAGE - 1) * LIST_COUNT)
				                                               ,'LABEL') AS LABEL10
				      ,CB_MONITORING_PKG.CB_EQUIPMENT_DATA_FIND(TMP.ORG_ID
				                                               ,TMP.COMPANY_ID
				                                               ,TMP.SEARCH_DATE
				                                               ,11 + ((SEARCH_PAGE - 1) * LIST_COUNT)
				                                               ,'LABEL') AS LABEL11
				      ,CB_MONITORING_PKG.CB_EQUIPMENT_DATA_FIND(TMP.ORG_ID
				                                               ,TMP.COMPANY_ID
				                                               ,TMP.SEARCH_DATE
				                                               ,12 + ((SEARCH_PAGE - 1) * LIST_COUNT)
				                                               ,'LABEL') AS LABEL12
				      ,CB_MONITORING_PKG.CB_EQUIPMENT_DATA_FIND(TMP.ORG_ID
				                                               ,TMP.COMPANY_ID
				                                               ,TMP.SEARCH_DATE
				                                               ,13 + ((SEARCH_PAGE - 1) * LIST_COUNT)
				                                               ,'LABEL') AS LABEL13
				      ,CB_MONITORING_PKG.CB_EQUIPMENT_DATA_FIND(TMP.ORG_ID
				                                               ,TMP.COMPANY_ID
				                                               ,TMP.SEARCH_DATE
				                                               ,14 + ((SEARCH_PAGE - 1) * LIST_COUNT)
				                                               ,'LABEL') AS LABEL14
				      ,CB_MONITORING_PKG.CB_EQUIPMENT_DATA_FIND(TMP.ORG_ID
				                                               ,TMP.COMPANY_ID
				                                               ,TMP.SEARCH_DATE
				                                               ,15 + ((SEARCH_PAGE - 1) * LIST_COUNT)
				                                               ,'LABEL') AS LABEL15
				      ,CB_MONITORING_PKG.CB_EQUIPMENT_DATA_FIND(TMP.ORG_ID
				                                               ,TMP.COMPANY_ID
				                                               ,TMP.SEARCH_DATE
				                                               ,1 + ((SEARCH_PAGE - 1) * LIST_COUNT)
				                                               ,'COLOR') AS COLOR1
				      ,CB_MONITORING_PKG.CB_EQUIPMENT_DATA_FIND(TMP.ORG_ID
				                                               ,TMP.COMPANY_ID
				                                               ,TMP.SEARCH_DATE
				                                               ,2 + ((SEARCH_PAGE - 1) * LIST_COUNT)
				                                               ,'COLOR') AS COLOR2
				      ,CB_MONITORING_PKG.CB_EQUIPMENT_DATA_FIND(TMP.ORG_ID
				                                               ,TMP.COMPANY_ID
				                                               ,TMP.SEARCH_DATE
				                                               ,3 + ((SEARCH_PAGE - 1) * LIST_COUNT)
				                                               ,'COLOR') AS COLOR3
				      ,CB_MONITORING_PKG.CB_EQUIPMENT_DATA_FIND(TMP.ORG_ID
				                                               ,TMP.COMPANY_ID
				                                               ,TMP.SEARCH_DATE
				                                               ,4 + ((SEARCH_PAGE - 1) * LIST_COUNT)
				                                               ,'COLOR') AS COLOR4
				      ,CB_MONITORING_PKG.CB_EQUIPMENT_DATA_FIND(TMP.ORG_ID
				                                               ,TMP.COMPANY_ID
				                                               ,TMP.SEARCH_DATE
				                                               ,5 + ((SEARCH_PAGE - 1) * LIST_COUNT)
				                                               ,'COLOR') AS COLOR5
				      ,CB_MONITORING_PKG.CB_EQUIPMENT_DATA_FIND(TMP.ORG_ID
				                                               ,TMP.COMPANY_ID
				                                               ,TMP.SEARCH_DATE
				                                               ,6 + ((SEARCH_PAGE - 1) * LIST_COUNT)
				                                               ,'COLOR') AS COLOR6
				      ,CB_MONITORING_PKG.CB_EQUIPMENT_DATA_FIND(TMP.ORG_ID
				                                               ,TMP.COMPANY_ID
				                                               ,TMP.SEARCH_DATE
				                                               ,7 + ((SEARCH_PAGE - 1) * LIST_COUNT)
				                                               ,'COLOR') AS COLOR7
				      ,CB_MONITORING_PKG.CB_EQUIPMENT_DATA_FIND(TMP.ORG_ID
				                                               ,TMP.COMPANY_ID
				                                               ,TMP.SEARCH_DATE
				                                               ,8 + ((SEARCH_PAGE - 1) * LIST_COUNT)
				                                               ,'COLOR') AS COLOR8
				      ,CB_MONITORING_PKG.CB_EQUIPMENT_DATA_FIND(TMP.ORG_ID
				                                               ,TMP.COMPANY_ID
				                                               ,TMP.SEARCH_DATE
				                                               ,9 + ((SEARCH_PAGE - 1) * LIST_COUNT)
				                                               ,'COLOR') AS COLOR9
				      ,CB_MONITORING_PKG.CB_EQUIPMENT_DATA_FIND(TMP.ORG_ID
				                                               ,TMP.COMPANY_ID
				                                               ,TMP.SEARCH_DATE
				                                               ,10 + ((SEARCH_PAGE - 1) * LIST_COUNT)
				                                               ,'COLOR') AS COLOR10
				      ,CB_MONITORING_PKG.CB_EQUIPMENT_DATA_FIND(TMP.ORG_ID
				                                               ,TMP.COMPANY_ID
				                                               ,TMP.SEARCH_DATE
				                                               ,11 + ((SEARCH_PAGE - 1) * LIST_COUNT)
				                                               ,'COLOR') AS COLOR11
				      ,CB_MONITORING_PKG.CB_EQUIPMENT_DATA_FIND(TMP.ORG_ID
				                                               ,TMP.COMPANY_ID
				                                               ,TMP.SEARCH_DATE
				                                               ,12 + ((SEARCH_PAGE - 1) * LIST_COUNT)
				                                               ,'COLOR') AS COLOR12
				      ,CB_MONITORING_PKG.CB_EQUIPMENT_DATA_FIND(TMP.ORG_ID
				                                               ,TMP.COMPANY_ID
				                                               ,TMP.SEARCH_DATE
				                                               ,13 + ((SEARCH_PAGE - 1) * LIST_COUNT)
				                                               ,'COLOR') AS COLOR13
				      ,CB_MONITORING_PKG.CB_EQUIPMENT_DATA_FIND(TMP.ORG_ID
				                                               ,TMP.COMPANY_ID
				                                               ,TMP.SEARCH_DATE
				                                               ,14 + ((SEARCH_PAGE - 1) * LIST_COUNT)
				                                               ,'COLOR') AS COLOR14
				      ,CB_MONITORING_PKG.CB_EQUIPMENT_DATA_FIND(TMP.ORG_ID
				                                               ,TMP.COMPANY_ID
				                                               ,TMP.SEARCH_DATE
				                                               ,15 + ((SEARCH_PAGE - 1) * LIST_COUNT)
				                                               ,'COLOR') AS COLOR15
		  FROM (SELECT #ORGID# AS ORG_ID
		              ,#COMPANYID# AS COMPANY_ID
		              ,SYSDATE AS SEARCH_DATE
		              ,#SEARCHPAGE# AS SEARCH_PAGE
		              ,#LISTCOUNT# AS LIST_COUNT
		          FROM DUAL) TMP
  </sql>
  
  <sql id="work.order.monitor.page3.listagg.sql-where">
    WHERE 1=1
  </sql>
  
  <select id="work.order.monitor.page3.listagg.select" parameterClass="java.util.Map"
      resultClass="java.util.HashMap" remapResults="true">
      SELECT *
        FROM (
          <include refid="work.order.monitor.page3.listagg.sql-select" />
          <include refid="work.order.monitor.page3.listagg.sql-where" />
          )
  </select>
  
  <select id="work.order.monitor.page3.listagg.count" parameterClass="java.util.Map"
      resultClass="java.lang.Integer">
      SELECT COUNT(*)
        FROM (
            <include refid="work.order.monitor.page3.listagg.sql-select" />
            <include refid="work.order.monitor.page3.listagg.sql-where" />
          )
  </select>
  <!-- 모니터링 > 3페이지 종료 -->
  
  <!-- 공정관리 > 작업지시 현황조회 (설비별) 시작 -->
  <sql id="work.order.daily.equip.list.sql-select">
      SELECT RANK() OVER(ORDER BY WC.ORG_ID, WC.COMPANY_ID, WC.WORK_DEPT, WC.SEQ) AS RN
				      ,WC.ORG_ID AS ORGID
				      ,WC.COMPANY_ID AS COMPANYID
				      ,WC.SEQ AS SEQ
				      ,WC.WORK_CENTER_CODE AS VALUE
				      ,WC.WORK_CENTER_NAME AS LABEL
				      ,WC.WORK_DEPT AS WORKDEPT
				      ,(SELECT SC.SMALL_NAME
				          FROM CB_SMALL_CODE SC
				         WHERE 1=1
				           AND SC.ORG_ID = WC.ORG_ID
				           AND SC.COMPANY_ID = WC.COMPANY_ID
				           AND SC.BIG_CODE = 'CMM'
				           AND SC.MIDDLE_CODE = 'WORK_DEPT'
				           AND SC.SMALL_CODE = WC.WORK_DEPT) AS WORKDEPTNAME
				      ,CB_MONITORING_PKG.CB_EQUIPMENT_OPERATE_COLOR(WC.ORG_ID
				                                                   ,WC.COMPANY_ID
				                                                   ,TMP.SEARCH_DATE
				                                                   ,WC.WORK_CENTER_CODE) AS OPERATECOLOR
				      ,CB_MFG_PKG.CB_DAILY_WORK_EQUIP_FIND(WC.ORG_ID
				                                          ,WC.COMPANY_ID
				                                          ,TMP.SEARCH_DATE
				                                          ,WC.WORK_CENTER_CODE
				                                          ,1
				                                          ,'WORK_ORDER_ID') AS WORKORDERID
				      ,CB_MFG_PKG.CB_DAILY_WORK_EQUIP_FIND(WC.ORG_ID
				                                          ,WC.COMPANY_ID
				                                          ,TMP.SEARCH_DATE
				                                          ,WC.WORK_CENTER_CODE
				                                          ,1
				                                          ,'ORDER_NAME') AS ORDERNAME
				      ,CB_MFG_PKG.CB_DAILY_WORK_EQUIP_FIND(WC.ORG_ID
				                                          ,WC.COMPANY_ID
				                                          ,TMP.SEARCH_DATE
				                                          ,WC.WORK_CENTER_CODE
				                                          ,1
				                                          ,'DRAWING_NO') AS DRAWINGNO
				      ,CB_MFG_PKG.CB_DAILY_WORK_EQUIP_FIND(WC.ORG_ID
				                                          ,WC.COMPANY_ID
				                                          ,TMP.SEARCH_DATE
				                                          ,WC.WORK_CENTER_CODE
				                                          ,1
				                                          ,'ITEM_NAME') AS ITEMNAME
				      ,CB_MFG_PKG.CB_DAILY_WORK_EQUIP_FIND(WC.ORG_ID
				                                          ,WC.COMPANY_ID
				                                          ,TMP.SEARCH_DATE
				                                          ,WC.WORK_CENTER_CODE
				                                          ,1
				                                          ,'ROUTING_NAME') AS ROUTINGNAME
				      ,CB_MFG_PKG.CB_DAILY_WORK_EQUIP_FIND(WC.ORG_ID
				                                          ,WC.COMPANY_ID
				                                          ,TMP.SEARCH_DATE
				                                          ,WC.WORK_CENTER_CODE
				                                          ,1
				                                          ,'KR_NAME') AS KRNAME
		  FROM CB_WORK_CENTER WC
		      ,(SELECT $ORGID$ AS ORG_ID
		              ,$COMPANYID$ AS COMPANY_ID
		              ,TO_DATE(#SEARCHDATE#, 'YYYY-MM-DD') AS SEARCH_DATE
		              ,#WORKCENTERCODE# AS WORK_CENTER_CODE
		          FROM DUAL) TMP
  </sql>
  
  <sql id="work.order.daily.equip.list.sql-where">
    WHERE 1=1
		   AND WC.ORG_ID = TMP.ORG_ID
		   AND WC.COMPANY_ID = TMP.COMPANY_ID
       AND WC.WORK_CENTER_CODE = NVL(TMP.WORK_CENTER_CODE, WC.WORK_CENTER_CODE)
		   AND WC.WORK_DEPT IN ('A', 'B')
		   AND TMP.SEARCH_DATE BETWEEN WC.EFFECTIVE_START_DATE AND NVL(WC.EFFECTIVE_END_DATE, TO_DATE('4999-12-31', 'YYYY-MM-DD'))
		 ORDER BY WC.ORG_ID, WC.COMPANY_ID, WC.WORK_DEPT, WC.SEQ
  </sql>
  
  <select id="work.order.daily.equip.list.select" parameterClass="java.util.Map"
      resultClass="java.util.HashMap" remapResults="true">
      SELECT *
        FROM (
          <include refid="work.order.daily.equip.list.sql-select" />
          <include refid="work.order.daily.equip.list.sql-where" />
          )
  </select>
  
  <select id="work.order.daily.equip.list.count" parameterClass="java.util.Map"
      resultClass="java.lang.Integer">
      SELECT COUNT(*)
        FROM (
            <include refid="work.order.daily.equip.list.sql-select" />
            <include refid="work.order.daily.equip.list.sql-where" />
          )
  </select>
  <!-- 공정관리 > 작업지시 현황조회 (설비별) 종료 -->
  
  
  <!-- 공정관리 > 공정진행현황 시작 -->
  <sql id="work.order.prod.status.list.sql-select">
  <![CDATA[
      SELECT RANK() OVER(ORDER BY IM.ORG_ID, IM.COMPANY_ID, IM.ITEM_CODE, TMP.SEARCH_DATE) AS RN
					      ,IM.ORG_ID AS ORGID
					      ,IM.COMPANY_ID AS COMPANYID
					      ,IM.ITEM_CODE AS ITEMCODE
					      ,IM.ORDER_NAME AS ORDERNAME
					      ,IM.ITEM_NAME AS ITEMNAME
					      ,IM.MODEL AS MODEL
					      ,IM.MODEL_NAME AS MODELNAME
					      ,TO_CHAR(TMP.SEARCH_DATE, 'YYYY-MM-DD') AS SEARCHDATE
					      ,CB_NEW_MFG_PKG.CB_ROUT_STATUS_QTY_FIND(IM.ORG_ID
					                                             ,IM.COMPANY_ID
					                                             ,IM.ITEM_CODE
					                                             ,TMP.SEARCH_DATE
					                                             ,'MATERIAL'
					                                             ,1) AS MATERIALQTY
					      ,CB_NEW_MFG_PKG.CB_ROUT_STATUS_QTY_FIND(IM.ORG_ID
					                                             ,IM.COMPANY_ID
					                                             ,IM.ITEM_CODE
					                                             ,TMP.SEARCH_DATE
					                                             ,'ROUTING'
					                                             ,1) AS ROUT01
					      ,CB_NEW_MFG_PKG.CB_ROUT_STATUS_QTY_FIND(IM.ORG_ID
					                                             ,IM.COMPANY_ID
					                                             ,IM.ITEM_CODE
					                                             ,TMP.SEARCH_DATE
					                                             ,'ROUTING'
					                                             ,2) AS ROUT02
					      ,CB_NEW_MFG_PKG.CB_ROUT_STATUS_QTY_FIND(IM.ORG_ID
					                                             ,IM.COMPANY_ID
					                                             ,IM.ITEM_CODE
					                                             ,TMP.SEARCH_DATE
					                                             ,'ROUTING'
					                                             ,3) AS ROUT03
					      ,CB_NEW_MFG_PKG.CB_ROUT_STATUS_QTY_FIND(IM.ORG_ID
					                                             ,IM.COMPANY_ID
					                                             ,IM.ITEM_CODE
					                                             ,TMP.SEARCH_DATE
					                                             ,'ROUTING'
					                                             ,4) AS ROUT04
					      ,CB_NEW_MFG_PKG.CB_ROUT_STATUS_QTY_FIND(IM.ORG_ID
					                                             ,IM.COMPANY_ID
					                                             ,IM.ITEM_CODE
					                                             ,TMP.SEARCH_DATE
					                                             ,'ROUTING'
					                                             ,5) AS ROUT05
					      ,CB_NEW_MFG_PKG.CB_ROUT_STATUS_QTY_FIND(IM.ORG_ID
					                                             ,IM.COMPANY_ID
					                                             ,IM.ITEM_CODE
					                                             ,TMP.SEARCH_DATE
					                                             ,'ROUTING'
					                                             ,6) AS ROUT06
					      ,CB_NEW_MFG_PKG.CB_ROUT_STATUS_QTY_FIND(IM.ORG_ID
					                                             ,IM.COMPANY_ID
					                                             ,IM.ITEM_CODE
					                                             ,TMP.SEARCH_DATE
					                                             ,'ROUTING'
					                                             ,7) AS ROUT07
					      ,CB_NEW_MFG_PKG.CB_ROUT_STATUS_QTY_FIND(IM.ORG_ID
					                                             ,IM.COMPANY_ID
					                                             ,IM.ITEM_CODE
					                                             ,TMP.SEARCH_DATE
					                                             ,'ROUTING'
					                                             ,8) AS ROUT08
					      ,CB_NEW_MFG_PKG.CB_ROUT_STATUS_QTY_FIND(IM.ORG_ID
					                                             ,IM.COMPANY_ID
					                                             ,IM.ITEM_CODE
					                                             ,TMP.SEARCH_DATE
					                                             ,'ROUTING'
					                                             ,9) AS ROUT09
					      ,CB_NEW_MFG_PKG.CB_ROUT_STATUS_QTY_FIND(IM.ORG_ID
					                                             ,IM.COMPANY_ID
					                                             ,IM.ITEM_CODE
					                                             ,TMP.SEARCH_DATE
					                                             ,'ROUTING'
					                                             ,10) AS ROUT10
					      ,CB_NEW_MFG_PKG.CB_ROUT_STATUS_QTY_FIND(IM.ORG_ID
					                                             ,IM.COMPANY_ID
					                                             ,IM.ITEM_CODE
					                                             ,TMP.SEARCH_DATE
					                                             ,'ROUTING'
					                                             ,11) AS ROUT11
					      ,CB_NEW_MFG_PKG.CB_ROUT_STATUS_QTY_FIND(IM.ORG_ID
					                                             ,IM.COMPANY_ID
					                                             ,IM.ITEM_CODE
					                                             ,TMP.SEARCH_DATE
					                                             ,'ROUTING'
					                                             ,12) AS ROUT12
					      ,CB_NEW_MFG_PKG.CB_ROUT_STATUS_QTY_FIND(IM.ORG_ID
					                                             ,IM.COMPANY_ID
					                                             ,IM.ITEM_CODE
					                                             ,TMP.SEARCH_DATE
					                                             ,'ROUTING'
					                                             ,13) AS ROUT13
					      ,CB_NEW_MFG_PKG.CB_ROUT_STATUS_QTY_FIND(IM.ORG_ID
					                                             ,IM.COMPANY_ID
					                                             ,IM.ITEM_CODE
					                                             ,TMP.SEARCH_DATE
					                                             ,'ROUTING'
					                                             ,14) AS ROUT14
					      ,CB_NEW_MFG_PKG.CB_ROUT_STATUS_QTY_FIND(IM.ORG_ID
					                                             ,IM.COMPANY_ID
					                                             ,IM.ITEM_CODE
					                                             ,TMP.SEARCH_DATE
					                                             ,'ROUTING'
					                                             ,15) AS ROUT15
					      ,CB_NEW_MFG_PKG.CB_ROUT_STATUS_QTY_FIND(IM.ORG_ID
					                                             ,IM.COMPANY_ID
					                                             ,IM.ITEM_CODE
					                                             ,TMP.SEARCH_DATE
					                                             ,'ROUTING'
					                                             ,16) AS ROUT16
					      ,CB_NEW_MFG_PKG.CB_ROUT_STATUS_QTY_FIND(IM.ORG_ID
					                                             ,IM.COMPANY_ID
					                                             ,IM.ITEM_CODE
					                                             ,TMP.SEARCH_DATE
					                                             ,'ROUTING'
					                                             ,17) AS ROUT17
					      ,CB_NEW_MFG_PKG.CB_ROUT_STATUS_QTY_FIND(IM.ORG_ID
					                                             ,IM.COMPANY_ID
					                                             ,IM.ITEM_CODE
					                                             ,TMP.SEARCH_DATE
					                                             ,'ROUTING'
					                                             ,18) AS ROUT18
					      ,CB_NEW_MFG_PKG.CB_ROUT_STATUS_QTY_FIND(IM.ORG_ID
					                                             ,IM.COMPANY_ID
					                                             ,IM.ITEM_CODE
					                                             ,TMP.SEARCH_DATE
					                                             ,'ROUTING'
					                                             ,19) AS ROUT19
					      ,CB_NEW_MFG_PKG.CB_ROUT_STATUS_QTY_FIND(IM.ORG_ID
					                                             ,IM.COMPANY_ID
					                                             ,IM.ITEM_CODE
					                                             ,TMP.SEARCH_DATE
					                                             ,'ROUTING'
					                                             ,20) AS ROUT20
					      ,CB_NEW_MFG_PKG.CB_ROUT_STATUS_QTY_FIND(IM.ORG_ID
					                                             ,IM.COMPANY_ID
					                                             ,IM.ITEM_CODE
					                                             ,TMP.SEARCH_DATE
					                                             ,'ROUTING'
					                                             ,21) AS ROUT21
					      ,CB_NEW_MFG_PKG.CB_ROUT_STATUS_QTY_FIND(IM.ORG_ID
					                                             ,IM.COMPANY_ID
					                                             ,IM.ITEM_CODE
					                                             ,TMP.SEARCH_DATE
					                                             ,'ROUTING'
					                                             ,22) AS ROUT22
					      ,CB_NEW_MFG_PKG.CB_ROUT_STATUS_QTY_FIND(IM.ORG_ID
					                                             ,IM.COMPANY_ID
					                                             ,IM.ITEM_CODE
					                                             ,TMP.SEARCH_DATE
					                                             ,'ROUTING'
					                                             ,23) AS ROUT23
					      ,CB_NEW_MFG_PKG.CB_ROUT_STATUS_QTY_FIND(IM.ORG_ID
					                                             ,IM.COMPANY_ID
					                                             ,IM.ITEM_CODE
					                                             ,TMP.SEARCH_DATE
					                                             ,'ROUTING'
					                                             ,24) AS ROUT24
					      ,CB_NEW_MFG_PKG.CB_ROUT_STATUS_QTY_FIND(IM.ORG_ID
					                                             ,IM.COMPANY_ID
					                                             ,IM.ITEM_CODE
					                                             ,TMP.SEARCH_DATE
					                                             ,'ROUTING'
					                                             ,25) AS ROUT25
			  FROM CB_ITEM_MASTER_V IM
			      ,(SELECT LEVEL AS DAY
			              ,#ORGID# AS ORG_ID
			              ,#COMPANYID# AS COMPANY_ID
			              ,#SEARCHMONTH# AS SEARCH_MONTH
			              ,TO_DATE(#SEARCHMONTH# || '-' || LPAD(LEVEL, 2, '0'), 'YYYY-MM-DD') AS SEARCH_DATE
			              ,#ORDERNAME# AS ORDER_NAME
			              ,#ITEMNAME# AS ITEM_NAME
			              ,#ITEMCODE# AS ITEM_CODE
			              ,#MODELNAME# AS MODEL_NAME
			          FROM DUAL
			        CONNECT BY LEVEL <= TO_CHAR(LAST_DAY(TO_DATE(#SEARCHMONTH#, 'YYYY-MM')), 'DD')) TMP
  ]]>
  </sql>
  
  <sql id="work.order.prod.status.list.sql-where">
  <![CDATA[
    WHERE 1=1
		   AND IM.ORG_ID = TMP.ORG_ID
		   AND IM.COMPANY_ID = TMP.COMPANY_ID
		   AND IM.ORDER_NAME = NVL(TMP.ORDER_NAME, IM.ORDER_NAME)
		   AND IM.ITEM_NAME = NVL(TMP.ITEM_NAME, IM.ITEM_NAME)
		   AND IM.ITEM_CODE = NVL(TMP.ITEM_CODE, IM.ITEM_CODE)
		   AND (SELECT SC.SMALL_NAME
		          FROM CB_SMALL_CODE SC
		         WHERE 1=1
		           AND SC.ORG_ID = IM.ORG_ID
		           AND SC.COMPANY_ID = IM.COMPANY_ID
		           AND SC.BIG_CODE = 'CMM'
		           AND SC.MIDDLE_CODE = 'MODEL'
		           AND SC.SMALL_CODE = IM.CAR_TYPE) = TMP.MODEL_NAME
		   AND TMP.SEARCH_DATE IN (SELECT TO_DATE(TO_CHAR(WOD.START_TIME, 'YYYY-MM-DD'), 'YYYY-MM-DD')
							                             FROM CB_WORK_ORDER_HEADER WOH
							                                 ,CB_WORK_ORDER WO
							                                 ,CB_WORK_ORDER_D WOD
							                            WHERE 1=1
							                              AND WOH.ORG_ID = WO.ORG_ID
							                              AND WOH.COMPANY_ID = WO.COMPANY_ID
							                              AND WOH.WORK_ORDER_ID = WO.WORK_ORDER_ID
							                              AND WO.ORG_ID = WOD.ORG_ID
							                              AND WO.COMPANY_ID = WOD.COMPANY_ID
							                              AND WO.WORK_ORDER_ID = WOD.WORK_ORDER_ID
							                              AND WO.WORK_ORDER_SEQ = WOD.WORK_ORDER_SEQ
							                              AND WO.WORK_STATUS <> 'CANCEL'
							                              AND WOD.ORG_ID = TMP.ORG_ID
							                              AND WOD.COMPANY_ID = TMP.COMPANY_ID
							                              AND WOH.ITEM_CODE = TMP.ITEM_CODE
							                              AND TO_DATE(TO_CHAR(WOD.START_TIME, 'YYYY-MM-DD'), 'YYYY-MM-DD') = TMP.SEARCH_DATE)
  ]]>
  </sql>
  
  <select id="work.order.prod.status.list.select" parameterClass="java.util.Map"
      resultClass="java.util.HashMap" remapResults="true">
      SELECT *
        FROM (
          <include refid="work.order.prod.status.list.sql-select" />
          <include refid="work.order.prod.status.list.sql-where" />
          )
  </select>
  
  <select id="work.order.prod.status.list.count" parameterClass="java.util.Map"
      resultClass="java.lang.Integer">
      SELECT COUNT(*)
        FROM (
            <include refid="work.order.prod.status.list.sql-select" />
            <include refid="work.order.prod.status.list.sql-where" />
          )
  </select>
  
  
  <sql id="work.order.prod.status.total.sql-select">
  <![CDATA[
      SELECT IM.ORG_ID AS ORGID
					      ,IM.COMPANY_ID AS COMPANYID
					      ,IM.ITEM_CODE AS ITEMCODE
					      ,IM.ORDER_NAME AS ORDERNAME
					      ,IM.ITEM_NAME AS ITEMNAME
					      ,IM.MODEL AS MODEL
					      ,IM.MODEL_NAME AS MODELNAME
					      ,CB_NEW_MFG_PKG.CB_NOW_QTY_FIND(IM.ORG_ID
					                                     ,IM.COMPANY_ID
					                                     ,IM.ITEM_CODE
					                                     ,TMP.SEARCH_MONTH
					                                     ,'WORK_ORDER_QTY') AS WORKORDERQTY
					      ,CB_NEW_MFG_PKG.CB_NOW_QTY_FIND(IM.ORG_ID
					                                     ,IM.COMPANY_ID
					                                     ,IM.ITEM_CODE
					                                     ,TMP.SEARCH_MONTH
					                                     ,'SHIP_QTY') AS SHIPQTY
					      ,CB_NEW_MFG_PKG.CB_NOW_QTY_FIND(IM.ORG_ID
					                                     ,IM.COMPANY_ID
					                                     ,IM.ITEM_CODE
					                                     ,TMP.SEARCH_MONTH
					                                     ,'BOM_QTY') AS BOMQTY
					      ,CB_NEW_MFG_PKG.CB_NOW_QTY_FIND(IM.ORG_ID
					                                     ,IM.COMPANY_ID
					                                     ,IM.ITEM_CODE
					                                     ,TMP.SEARCH_MONTH
					                                     ,'NCR_QTY') AS NCRQTY
			  FROM CB_ITEM_MASTER_V IM
			      ,(SELECT #ORGID# AS ORG_ID
			              ,#COMPANYID# AS COMPANY_ID
			              ,#SEARCHMONTH# AS SEARCH_MONTH
                    ,#ORDERNAME# AS ORDER_NAME
                    ,#ITEMNAME# AS ITEM_NAME
                    ,#ITEMCODE# AS ITEM_CODE
                    ,#MODELNAME# AS MODEL_NAME
			          FROM DUAL) TMP
  ]]>
  </sql>
  
  <sql id="work.order.prod.status.total.sql-where">
  <![CDATA[
    WHERE 1=1
		   AND IM.GROUP_CODE = 'A'
		   AND IM.ORG_ID = TMP.ORG_ID
		   AND IM.COMPANY_ID = TMP.COMPANY_ID
		   AND IM.ORDER_NAME = NVL(TMP.ORDER_NAME, IM.ORDER_NAME)
		   AND IM.ITEM_NAME = NVL(TMP.ITEM_NAME, IM.ITEM_NAME)
		   AND IM.ITEM_CODE = NVL(TMP.ITEM_CODE, IM.ITEM_CODE)
		   AND (SELECT SC.SMALL_NAME
		          FROM CB_SMALL_CODE SC
		         WHERE 1=1
		           AND SC.ORG_ID = IM.ORG_ID
		           AND SC.COMPANY_ID = IM.COMPANY_ID
		           AND SC.BIG_CODE = 'CMM'
		           AND SC.MIDDLE_CODE = 'MODEL'
		           AND SC.SMALL_CODE = IM.CAR_TYPE) = TMP.MODEL_NAME
  ]]>
  </sql>
  
  <select id="work.order.prod.status.total.select" parameterClass="java.util.Map"
      resultClass="java.util.HashMap" remapResults="true">
      SELECT *
        FROM (
          <include refid="work.order.prod.status.total.sql-select" />
          <include refid="work.order.prod.status.total.sql-where" />
          )
  </select>
  
  <select id="work.order.prod.status.total.count" parameterClass="java.util.Map"
      resultClass="java.lang.Integer">
      SELECT COUNT(*)
        FROM (
            <include refid="work.order.prod.status.total.sql-select" />
            <include refid="work.order.prod.status.total.sql-where" />
          )
  </select>
  <!-- 공정관리 > 공정진행현황 종료 -->
  
  
  <update id="prod.work.center.group.change.update" parameterClass="java.util.Map">
      <![CDATA[
      UPDATE CB_WORK_CENTER
         SET LAST_UPDATED_BY  = #UPDATEID#
              ,LAST_UPDATE_DATE = SYSDATE
              ,WORK_DEPT = #WORKDEPT#
      WHERE 1=1
          AND ORG_ID = #ORGID#
          AND COMPANY_ID = #COMPANYID#
          AND WORK_CENTER_CODE = #WORKCENTERCODE#
      ]]>
  </update>
  
  <!-- 생산 실적현황 화면 조회 시작 -->
  <sql id="work.order.total.detail.sql-select">
  <![CDATA[
  SELECT RANK() OVER(ORDER BY GA.ORG_ID, GA.COMPANY_ID, GA.ITEM_CODE, GA.ROUTING_ID, GA.STANDARD_DATE) AS RN
		      ,GA.ORG_ID AS ORGID
		      ,GA.COMPANY_ID AS COMPANYID
		      ,GA.ITEM_CODE AS ITEMCODE
		      ,(SELECT IM.ORDER_NAME
		          FROM CB_ITEM_MASTER IM
		         WHERE 1=1
		           AND IM.ORG_ID = GA.ORG_ID
		           AND IM.COMPANY_ID = GA.COMPANY_ID
		           AND IM.ITEM_CODE = GA.ITEM_CODE) AS ORDERNAME
		      ,(SELECT IM.DRAWING_NO
		          FROM CB_ITEM_MASTER IM
		         WHERE 1=1
		           AND IM.ORG_ID = GA.ORG_ID
		           AND IM.COMPANY_ID = GA.COMPANY_ID
		           AND IM.ITEM_CODE = GA.ITEM_CODE) AS DRAWINGNO
		      ,(SELECT IM.ITEM_NAME
		          FROM CB_ITEM_MASTER IM
		         WHERE 1=1
		           AND IM.ORG_ID = GA.ORG_ID
		           AND IM.COMPANY_ID = GA.COMPANY_ID
		           AND IM.ITEM_CODE = GA.ITEM_CODE) AS ITEMNAME
		      ,(SELECT IM.CAR_TYPE
		          FROM CB_ITEM_MASTER IM
		         WHERE 1=1
		           AND IM.ORG_ID = GA.ORG_ID
		           AND IM.COMPANY_ID = GA.COMPANY_ID
		           AND IM.ITEM_CODE = GA.ITEM_CODE) AS MODEL
		      ,(SELECT IM.CAR_TYPE_NAME
		          FROM CB_ITEM_MASTER_V IM
		         WHERE 1=1
		           AND IM.ORG_ID = GA.ORG_ID
		           AND IM.COMPANY_ID = GA.COMPANY_ID
		           AND IM.ITEM_CODE = GA.ITEM_CODE) AS MODELNAME
		      ,GA.ROUTING_ID AS ROUTINGID
		      ,(SELECT (SELECT SC.SMALL_NAME
		                  FROM CB_SMALL_CODE SC
		                 WHERE 1=1
		                   AND SC.ORG_ID = RC.ORG_ID
		                   AND SC.COMPANY_ID = RC.COMPANY_ID
		                   AND SC.BIG_CODE = 'MFG'
		                   AND SC.MIDDLE_CODE = 'ROUTING_NAME'
		                   AND SC.SMALL_CODE = RC.ROUTING_NO)
		          FROM CB_ROUTING_CONTROL RC
		         WHERE 1=1
		           AND RC.ORG_ID = GA.ORG_ID
		           AND RC.COMPANY_ID = GA.COMPANY_ID
		           AND RC.ITEM_CODE = GA.ITEM_CODE
		           AND RC.ROUTING_ID = GA.ROUTING_ID) AS ROUTINGNAME
		      ,TO_CHAR(GA.STANDARD_DATE, 'YYYY-MM-DD') AS STANDARDDATE
		      ,SUM(GA.IMPORT_QTY + GA.FAULT_QTY) AS PRODQTY
		      ,SUM(GA.IMPORT_QTY) AS IMPORTQTY
		      ,SUM(GA.FAULT_QTY) AS FAULTQTY
		  FROM (
		        SELECT WOD.ORG_ID AS ORG_ID
		              ,WOD.COMPANY_ID AS COMPANY_ID
		              ,WOD.WORK_ORDER_ID AS WORK_ORDER_ID
		              ,WOD.WORK_ORDER_SEQ AS WORK_ORDER_SEQ
		              ,WO.ITEM_CODE AS ITEM_CODE
		              ,WO.ROUTING_CODE AS ROUTING_ID
		              ,TRUNC(WOD.START_TIME) AS STANDARD_DATE
		              ,WOD.QTY AS IMPORT_QTY
		              ,NVL((SELECT SUM(WOF.FAULT_QTY)
		                  FROM CB_WORK_ORDER_FAULT WOF
		                 WHERE 1=1
		                   AND WOF.ORG_ID = WO.ORG_ID
		                   AND WOF.COMPANY_ID = WO.COMPANY_ID
		                   AND WOF.WORK_ORDER_ID = WO.WORK_ORDER_ID
		                   AND WOF.WORK_ORDER_SEQ = WO.WORK_ORDER_SEQ
		                   AND WOF.EMPLOYEE_SEQ = WOD.WORKER
		                   AND WOF.FAULT_DATE BETWEEN (CASE WHEN WOD.WORK_DIV = '01' THEN
		                                                      TO_DATE(TO_CHAR(WOD.START_TIME, 'YYYY-MM-DD') || ' 07:00', 'YYYY-MM-DD HH24:MI')
		                                                    ELSE
		                                                      TO_DATE(TO_CHAR(WOD.START_TIME, 'YYYY-MM-DD') || ' 19:00', 'YYYY-MM-DD HH24:MI')
		                                                    END)
		                                          AND (CASE WHEN WOD.WORK_DIV = '01' THEN
		                                                      TO_DATE(TO_CHAR(WOD.END_TIME, 'YYYY-MM-DD') || ' 19:00', 'YYYY-MM-DD HH24:MI')
		                                                    ELSE
		                                                      TO_DATE(TO_CHAR(WOD.END_TIME + 1, 'YYYY-MM-DD') || ' 07:00', 'YYYY-MM-DD HH24:MI')
		                                                    END)), 0) AS FAULT_QTY
		          FROM CB_WORK_ORDER_HEADER WOH
		              ,CB_WORK_ORDER WO
		              ,CB_WORK_ORDER_D WOD
		              ,(SELECT #ORGID# AS ORG_ID
		                      ,#COMPANYID# AS COMPANY_ID
		                      ,#ITEMCODE# AS ITEM_CODE
		                      ,#ROUTINGID# AS ROUTING_ID
		                      ,#SEARCHFROM# AS SEARCH_FROM
		                      ,#SEARCHTO# AS SEARCH_TO
		                  FROM DUAL) TMP
		         WHERE 1=1
		           AND WOH.ORG_ID = WO.ORG_ID
		           AND WOH.COMPANY_ID = WO.COMPANY_ID
		           AND WOH.WORK_ORDER_ID = WO.WORK_ORDER_ID
		           AND WO.ORG_ID = WOD.ORG_ID
		           AND WO.COMPANY_ID = WOD.COMPANY_ID
		           AND WO.WORK_ORDER_ID = WOD.WORK_ORDER_ID
		           AND WO.WORK_ORDER_SEQ = WOD.WORK_ORDER_SEQ
		           AND WO.WORK_STATUS NOT IN ('CANCEL')
		           AND WOD.END_TIME IS NOT NULL
		           AND WO.ORG_ID = TMP.ORG_ID
		           AND WO.COMPANY_ID = TMP.COMPANY_ID
		           AND WO.ITEM_CODE = TMP.ITEM_CODE
		           AND WO.ROUTING_CODE = TMP.ROUTING_ID
		           AND (WOD.START_TIME >= TO_DATE(TMP.SEARCH_FROM || ' 07:00', 'YYYY-MM-DD HH24:MI')
		            AND NVL(WOD.END_TIME, TO_DATE(TMP.SEARCH_TO || ' 07:00', 'YYYY-MM-DD HH24:MI') + 1) <= (TO_DATE(TMP.SEARCH_TO || ' 07:00', 'YYYY-MM-DD HH24:MI') + 1))
		        ) GA
  ]]>
  </sql>
  
  <sql id="work.order.total.detail.sql-where">
  <![CDATA[
      WHERE 1=1
	 	  GROUP BY GA.ORG_ID, GA.COMPANY_ID, GA.ITEM_CODE, GA.ROUTING_ID, GA.STANDARD_DATE
		  ORDER BY GA.ORG_ID, GA.COMPANY_ID, GA.ITEM_CODE, GA.ROUTING_ID, GA.STANDARD_DATE
  ]]>       
  </sql>
  
  <select id="work.order.total.detail.select" parameterClass="java.util.Map"
      resultClass="java.util.HashMap" remapResults="true">
      <include refid="work.order.total.detail.sql-select" />
      <include refid="work.order.total.detail.sql-where" />
  </select>
  
  <select id="work.order.total.detail.count" parameterClass="java.util.Map"
      resultClass="java.lang.Integer">
      SELECT COUNT(*)
        FROM (
            <include refid="work.order.total.detail.sql-select" />
            <include refid="work.order.total.detail.sql-where" />
          )
  </select>
  <!-- 기종별 생산 실적현황 화면 조회 끝 -->
</sqlMap>