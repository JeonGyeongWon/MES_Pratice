<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap PUBLIC "-//iBATIS.com//DTD SQL Map 2.0//EN" "http://www.ibatis.com/dtd/sql-map-2.dtd">
<sqlMap namespace="cmmclass">

    <!-- cmmbigclass select -->
    <sql id="cmmclass.sql-select">
        SELECT RANK() OVER(ORDER BY ORG_ID, COMPANY_ID, BIG_CODE) AS RNUM
            ,ORG_ID AS ORGID
            ,COMPANY_ID AS COMPANYID
            ,BIG_CODE AS BIGCD
            ,BIG_NAME AS BIGCDNM
            ,REMARKS AS NOTES
            ,USE_YN AS USEYN
          FROM CB_BIG_CODE
    </sql>

    <sql id="cmmclass.sql-where">
        WHERE 1=1
           AND USE_YN = 'Y'
        <isNotEmpty property="orgid" prepend="AND">
            ORG_ID = #orgid#
        </isNotEmpty>
        <isNotEmpty property="companyid" prepend="AND">
            COMPANY_ID = #companyid#
        </isNotEmpty>
        <isNotEmpty property="bigcd" prepend="AND">
            BIG_CODE = #bigcd#
        </isNotEmpty>
        <isEmpty property="bigcd">
            <isNotEmpty property="bignm" prepend="AND">
              BIG_NAME = #bigcd#
            </isNotEmpty>
        </isEmpty>
        <isNotEmpty property="middlecd" prepend="AND">
            BIG_CODE IN (SELECT MC.BIG_CODE
                                FROM CB_MIDDLE_CODE MC
                               WHERE 1=1
												        <isNotEmpty property="orgid" prepend="AND">
												            ORG_ID = #orgid#
												        </isNotEmpty>
												        <isNotEmpty property="companyid" prepend="AND">
												            COMPANY_ID = #companyid#
												        </isNotEmpty>
                                 AND MC.MIDDLE_CODE = #middlecd#)
        </isNotEmpty>
        <isEmpty property="middlecd">
            <isNotEmpty property="middlenm" prepend="AND">
            BIG_CODE IN (SELECT MC.BIG_CODE
                                FROM CB_MIDDLE_CODE MC
                               WHERE 1=1
                                <isNotEmpty property="orgid" prepend="AND">
                                    ORG_ID = #orgid#
                                </isNotEmpty>
                                <isNotEmpty property="companyid" prepend="AND">
                                    COMPANY_ID = #companyid#
                                </isNotEmpty>
                                 AND MC.MIDDLE_NAME LIKE '%' || #middlenm# || '%')
            </isNotEmpty>
        </isEmpty>
        ORDER BY ORG_ID, COMPANY_ID, BIG_CODE
    </sql>

    <select id="cmmclass.select" parameterClass="java.util.Map"
        resultClass="java.util.HashMap">
        <include refid="cmmclass.sql-select" />
        <include refid="cmmclass.sql-where" />
    </select>

    <select id="cmmclass.count" parameterClass="java.util.Map"
        resultClass="java.lang.Integer">
        SELECT COUNT(*) FROM (
          <include refid="cmmclass.sql-select" />
          <include refid="cmmclass.sql-where" />
        ) TOT
    </select>

    <select id="cmmclass.first.select" parameterClass="java.util.Map"
        resultClass="java.util.HashMap">
        SELECT ORGID, COMPANYID, BIGCD FROM (
          <include refid="cmmclass.sql-select" />
          <include refid="cmmclass.sql-where" />
        )
        WHERE 1=1
          AND RNUM = 1
    </select>
    
    <sql id="cmmclass.middle.sql-select">
        SELECT RANK() OVER(ORDER BY ORG_ID, COMPANY_ID, (SELECT BIG_NAME
													                                                     FROM CB_BIG_CODE BC
													                                                    WHERE 1=1
													                                                      AND BC.ORG_ID = MC.ORG_ID
													                                                      AND BC.COMPANY_ID = MC.COMPANY_ID
													                                                      AND BC.BIG_CODE = MC.BIG_CODE), BIG_CODE, MIDDLE_NAME, MIDDLE_CODE) AS RNUM
			           ,ORG_ID AS ORGID
			           ,COMPANY_ID AS COMPANYID
			           ,BIG_CODE AS BIGCD
			           ,MIDDLE_CODE AS MIDDLECD
			           ,MIDDLE_NAME AS MIDDLECDNM
			           ,REMARKS AS NOTES
			           ,USE_YN AS USEYN
		      FROM CB_MIDDLE_CODE MC
    </sql>

    <sql id="cmmclass.middle.sql-where">
        WHERE 1=1
           AND USE_YN = 'Y'
        <isNotEmpty property="orgid" prepend="AND">
            ORG_ID = #orgid#
        </isNotEmpty>
        <isNotEmpty property="companyid" prepend="AND">
            COMPANY_ID = #companyid#
        </isNotEmpty>
        <isNotEmpty property="bigcd" prepend="AND">
            BIG_CODE = #bigcd#
        </isNotEmpty>
        <isNotEmpty property="middlecd" prepend="AND">
            MIDDLE_CODE = #middlecd#
        </isNotEmpty>
        <isEmpty property="middlecd">
            <isNotEmpty property="middlenm" prepend="AND">
                MC.MIDDLE_NAME LIKE '%' || #middlenm# || '%'
            </isNotEmpty>
        </isEmpty>
        ORDER BY ORG_ID, COMPANY_ID, (SELECT BIG_NAME
                                                     FROM CB_BIG_CODE BC
                                                    WHERE 1=1
                                                      AND BC.ORG_ID = MC.ORG_ID
                                                      AND BC.COMPANY_ID = MC.COMPANY_ID
                                                      AND BC.BIG_CODE = MC.BIG_CODE), BIG_CODE, MIDDLE_NAME, MIDDLE_CODE
    </sql>

    <select id="cmmclass.middle.select" parameterClass="java.util.Map"
        resultClass="java.util.HashMap">
        <include refid="cmmclass.middle.sql-select" />
        <include refid="cmmclass.middle.sql-where" />
    </select>

    <select id="cmmclass.middle.count" parameterClass="java.util.Map"
        resultClass="java.lang.Integer">
        SELECT COUNT(*) FROM (
          <include refid="cmmclass.middle.sql-select" />
          <include refid="cmmclass.middle.sql-where" />
        ) TOT
    </select>

    <select id="cmmclass.mfirst.select" parameterClass="java.util.Map"
        resultClass="java.util.HashMap">
        SELECT ORGID, COMPANYID, BIGCD, MIDDLECD FROM (
          <include refid="cmmclass.middle.sql-select" />
          <include refid="cmmclass.middle.sql-where" />
        )
        WHERE 1=1
          AND RNUM = 1
    </select>
    
    <sql id="cmmclass.small.sql-select">
       SELECT RANK() OVER(ORDER BY ORG_ID, COMPANY_ID, BIG_CODE,
                                                                            (SELECT MIDDLE_NAME
                                                                               FROM CB_MIDDLE_CODE MC
                                                                              WHERE 1=1
                                                                                AND MC.ORG_ID = SC.ORG_ID
                                                                                AND MC.COMPANY_ID = SC.COMPANY_ID
                                                                                AND MC.BIG_CODE = SC.BIG_CODE
                                                                                AND MC.MIDDLE_CODE = SC.MIDDLE_CODE), MIDDLE_CODE, SMALL_CODE) AS RNUM
             ,ORG_ID AS ORGID
             ,COMPANY_ID AS COMPANYID
             ,BIG_CODE AS BIGCD
             ,MIDDLE_CODE AS MIDDLECD
             ,SMALL_CODE AS SMALLCD
             ,SMALL_NAME AS SMALLCDNM
             ,REMARKS AS NOTES
             ,USE_YN AS USEYN
             ,ATTRIBUTE1
						 ,ATTRIBUTE2
						 ,ATTRIBUTE3
						 ,ATTRIBUTE4
						 ,ATTRIBUTE5
						 ,ATTRIBUTE6
						 ,ATTRIBUTE7
						 ,ATTRIBUTE8
						 ,ATTRIBUTE9
						 ,ATTRIBUTE10
       FROM CB_SMALL_CODE SC
    </sql>

    <sql id="cmmclass.small.sql-where">
        WHERE 1=1
           AND USE_YN = 'Y'
        <isNotEmpty property="orgid" prepend="AND">
            ORG_ID = #orgid#
        </isNotEmpty>
        <isNotEmpty property="companyid" prepend="AND">
            COMPANY_ID = #companyid#
        </isNotEmpty>
        <isNotEmpty property="bigcd" prepend="AND">
            BIG_CODE = #bigcd#
        </isNotEmpty>
        <isNotEmpty property="middlecd" prepend="AND">
            MIDDLE_CODE = #middlecd#
        </isNotEmpty>
        ORDER BY ORG_ID, COMPANY_ID, BIG_CODE,
                                                 (SELECT MIDDLE_NAME
                                                    FROM CB_MIDDLE_CODE MC
                                                   WHERE 1=1
                                                     AND MC.ORG_ID = SC.ORG_ID
                                                     AND MC.COMPANY_ID = SC.COMPANY_ID
                                                     AND MC.BIG_CODE = SC.BIG_CODE
                                                     AND MC.MIDDLE_CODE = SC.MIDDLE_CODE), MIDDLE_CODE, SMALL_CODE
    </sql>

    <select id="cmmclass.small.select" parameterClass="java.util.Map"
        resultClass="java.util.HashMap">
        <include refid="cmmclass.small.sql-select" />
        <include refid="cmmclass.small.sql-where" />
    </select>

    <select id="cmmclass.small.count" parameterClass="java.util.Map"
        resultClass="java.lang.Integer">
        SELECT COUNT(*) FROM (
          <include refid="cmmclass.small.sql-select" />
          <include refid="cmmclass.small.sql-where" />
        ) TOT
    </select>
    
    <!-- 대분류 sql -->
    <insert id="cmmbigclass.insert" parameterClass="java.util.Map">
        <![CDATA[
        INSERT INTO CB_BIG_CODE
        (
           ORG_ID
          ,COMPANY_ID
          ,BIG_CODE
          ,BIG_NAME
          ,REMARKS
          ,USE_YN
          ,CREATION_DATE
          ,CREATED_BY
          ,LAST_UPDATE_DATE
          ,LAST_UPDATED_BY
        )
        VALUES
        (
           #ORGID#
          ,#COMPANYID#
          ,#BIGCD#
          ,#BIGCDNM#
          ,#NOTES#
          ,#USEYN#
          ,SYSDATE
          ,#REGISTID#
          ,SYSDATE
          ,#REGISTID#
        )
        ]]>
    </insert>
    
    <update id="cmmbigclass.update" parameterClass="java.util.Map">
    <![CDATA[
        UPDATE CB_BIG_CODE
             SET LAST_UPDATE_DATE = SYSDATE
                  ,LAST_UPDATED_BY = #UPDATEID#
                  ,BIG_NAME = #BIGCDNM#
                  ,REMARKS = #NOTES#
                  ,USE_YN = #USEYN#
         WHERE 1=1
            AND ORG_ID = #ORGID#
            AND COMPANY_ID = #COMPANYID#
            AND BIG_CODE = #BIGCD#
    ]]>
    </update>
    
    <delete id="cmmbigclass.delete" parameterClass="java.util.Map">
        DELETE FROM CB_BIG_CODE
        WHERE 1=1
           AND ORG_ID = #ORGID#
           AND COMPANY_ID = #COMPANYID#
           AND BIG_CODE = #BIGCD#
    </delete>
    
    <!-- 중분류 sql -->
    <insert id="cmmmiddleclass.insert" parameterClass="java.util.Map">
        <![CDATA[
        INSERT INTO CB_MIDDLE_CODE
        (
           ORG_ID
          ,COMPANY_ID
          ,BIG_CODE
          ,MIDDLE_CODE
          ,MIDDLE_NAME
          ,REMARKS
          ,USE_YN
          ,CREATION_DATE
          ,CREATED_BY
          ,LAST_UPDATE_DATE
          ,LAST_UPDATED_BY
        )
        VALUES
        (
	          #ORGID#
	         ,#COMPANYID#
	         ,#BIGCD#
	         ,#MIDDLECD#
	         ,#MIDDLECDNM#
	         ,#NOTES#
	         ,#USEYN#
	         ,SYSDATE
	         ,#REGISTID#
	         ,SYSDATE
	         ,#REGISTID#
        )
        ]]>
    </insert>
    
    <update id="cmmmiddleclass.update" parameterClass="java.util.Map">
    <![CDATA[
        UPDATE CB_MIDDLE_CODE
             SET LAST_UPDATE_DATE = SYSDATE
                  ,LAST_UPDATED_BY = #UPDATEID#
                  ,MIDDLE_NAME = #MIDDLECDNM#
	                ,REMARKS = #NOTES#
	                ,USE_YN = #USEYN#
          WHERE 1=1
		         AND ORG_ID = #ORGID#
		         AND COMPANY_ID = #COMPANYID#
             AND BIG_CODE = #BIGCD#
             AND MIDDLE_CODE = #MIDDLECD#
    ]]>
    </update>
    
    <delete id="cmmmiddleclass.delete" parameterClass="java.util.Map">
        DELETE FROM CB_MIDDLE_CODE
        WHERE 1=1
           AND ORG_ID = #ORGID#
           AND COMPANY_ID = #COMPANYID#
           AND BIG_CODE = #BIGCD#
           AND MIDDLE_CODE = #MIDDLECD#
    </delete>
    
    <!-- 소분류 sql -->
    <insert id="cmmsmallclass.insert" parameterClass="java.util.Map">
        <![CDATA[
        INSERT INTO CB_SMALL_CODE
        (
           ORG_ID
          ,COMPANY_ID
          ,BIG_CODE
          ,MIDDLE_CODE
          ,SMALL_CODE
          ,SMALL_NAME
          ,REMARKS
          ,USE_YN
          ,CREATION_DATE
          ,CREATED_BY
          ,LAST_UPDATE_DATE
          ,LAST_UPDATED_BY
          ,ATTRIBUTE1
          ,ATTRIBUTE2
          ,ATTRIBUTE3
          ,ATTRIBUTE4
          ,ATTRIBUTE5
          ,ATTRIBUTE6
          ,ATTRIBUTE7
          ,ATTRIBUTE8
          ,ATTRIBUTE9
          ,ATTRIBUTE10
        )
        VALUES
        (
           #ORGID#
          ,#COMPANYID#
          ,#BIGCD#
          ,#MIDDLECD#
          ,#SMALLCD#
          ,#SMALLCDNM#
          ,#NOTES#
          ,#USEYN#
          ,SYSDATE
          ,#REGISTID#
          ,SYSDATE
          ,#REGISTID#
          ,#ATTRIBUTE1#
          ,#ATTRIBUTE2#
          ,#ATTRIBUTE3#
          ,#ATTRIBUTE4#
          ,#ATTRIBUTE5#
          ,#ATTRIBUTE6#
          ,#ATTRIBUTE7#
          ,#ATTRIBUTE8#
          ,#ATTRIBUTE9#
          ,#ATTRIBUTE10#
        )
        ]]>
    </insert>
    
    <update id="cmmsmallclass.update" parameterClass="java.util.Map">
    <![CDATA[
        UPDATE CB_SMALL_CODE
             SET LAST_UPDATE_DATE = SYSDATE
                  ,LAST_UPDATED_BY = #UPDATEID#
                  ,SMALL_NAME = #SMALLCDNM#
	                ,REMARKS = #NOTES#
	                ,USE_YN = #USEYN#
		             ,ATTRIBUTE1 = #ATTRIBUTE1#
		             ,ATTRIBUTE2 = #ATTRIBUTE2#
		             ,ATTRIBUTE3 = #ATTRIBUTE3#
		             ,ATTRIBUTE4 = #ATTRIBUTE4#
		             ,ATTRIBUTE5 = #ATTRIBUTE5#
		             ,ATTRIBUTE6 = #ATTRIBUTE6#
		             ,ATTRIBUTE7 = #ATTRIBUTE7#
		             ,ATTRIBUTE8 = #ATTRIBUTE8#
		             ,ATTRIBUTE9 = #ATTRIBUTE9#
		             ,ATTRIBUTE10 = #ATTRIBUTE10#
         WHERE 1=1
            AND ORG_ID = #ORGID#
            AND COMPANY_ID = #COMPANYID#
            AND BIG_CODE = #BIGCD#
            AND MIDDLE_CODE = #MIDDLECD#
            AND SMALL_CODE = #SMALLCD#
    ]]>
    </update>
    
    <delete id="cmmsmallclass.delete" parameterClass="java.util.Map">
        DELETE FROM CB_SMALL_CODE
         WHERE 1=1
            AND ORG_ID = #ORGID#
            AND COMPANY_ID = #COMPANYID#
            AND BIG_CODE = #BIGCD#
            AND MIDDLE_CODE = #MIDDLECD#
            AND SMALL_CODE = #SMALLCD#
    </delete>
</sqlMap>