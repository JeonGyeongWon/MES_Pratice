<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap PUBLIC "-//iBATIS.com//DTD SQL Map 2.0//EN" "http://www.ibatis.com/dtd/sql-map-2.dtd">

<sqlMap namespace="prod">

    <parameterMap class="java.util.Map" id="procWorkRoutingParams">
        <parameter property="ORGID" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
        <parameter property="COMPANYID" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
        <parameter property="WORKORDERID" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
        <parameter property="ITEMCODE" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
        <parameter property="REGISTID" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
        <parameter property="RETURNSTATUS" jdbcType="VARCHAR" javaType="java.lang.String" mode="OUT"/>
        <parameter property="MSGDATA" jdbcType="VARCHAR" javaType="java.lang.String" mode="OUT"/>
    </parameterMap>
    
    <parameterMap class="java.util.Map" id="procWorkMonthParams">
        <parameter property="ORGID" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
        <parameter property="COMPANYID" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
        <parameter property="WORKORDERID" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
        <parameter property="REGISTID" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
        <parameter property="RETURNSTATUS" jdbcType="VARCHAR" javaType="java.lang.String" mode="OUT"/>
        <parameter property="MSGDATA" jdbcType="VARCHAR" javaType="java.lang.String" mode="OUT"/>
    </parameterMap>
    
    <parameterMap class="java.util.Map" id="procWorkStatusParams">
        <parameter property="ORGID" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
        <parameter property="COMPANYID" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
        <parameter property="WORKORDERID" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
        <parameter property="WORKORDERSEQ" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
        <parameter property="GUBUN" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
        <parameter property="REGISTID" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
        <parameter property="RETURNSTATUS" jdbcType="VARCHAR" javaType="java.lang.String" mode="OUT"/>
        <parameter property="MSGDATA" jdbcType="VARCHAR" javaType="java.lang.String" mode="OUT"/>
    </parameterMap>
    
    <parameterMap class="java.util.Map" id="procWOReleaseNewParams">
        <parameter property="ORGID" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
        <parameter property="COMPANYID" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
        <parameter property="WORKORDERID" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
        <parameter property="WORKORDERSEQ" jdbcType="NUMBER" javaType="java.lang.Integer" mode="IN"/>
        <parameter property="SEQNO" jdbcType="NUMBER" javaType="java.lang.Integer" mode="IN"/>
        <parameter property="RELEASETYPE" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
        <parameter property="ITEMCODE" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
        <parameter property="WAREHOUSINGFROM" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
        <parameter property="WAREHOUSING" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
        <parameter property="QTY" jdbcType="NUMBER" javaType="java.lang.Integer" mode="IN"/>
        <parameter property="REGISTID" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
        <parameter property="RETURNSTATUS" jdbcType="VARCHAR" javaType="java.lang.String" mode="OUT"/>
        <parameter property="MSGDATA" jdbcType="VARCHAR" javaType="java.lang.String" mode="OUT"/>
    </parameterMap>

     <parameterMap class="java.util.Map" id="procWorkFmlCreateParams">
        <parameter property="ORGID" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
        <parameter property="COMPANYID" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
        <parameter property="WORKORDERID" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
        <parameter property="ITEMCODE" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
        <parameter property="REGISTID" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
        <parameter property="RETURNSTATUS" jdbcType="VARCHAR" javaType="java.lang.String" mode="OUT"/>
        <parameter property="MSGDATA" jdbcType="VARCHAR" javaType="java.lang.String" mode="OUT"/>
    </parameterMap>
 
    <parameterMap class="java.util.Map" id="procWOFmlParams">
        <parameter property="ORGID" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
        <parameter property="COMPANYID" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
        <parameter property="WORKORDERID" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
        <parameter property="ITEMCODE" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
<!--         <parameter property="WORKORDERQTY" jdbcType="NUMBER" javaType="java.lang.Integer" mode="IN"/> -->
        <parameter property="REGISTID" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
        <parameter property="RETURNSTATUS" jdbcType="VARCHAR" javaType="java.lang.String" mode="OUT"/>
        <parameter property="MSGDATA" jdbcType="VARCHAR" javaType="java.lang.String" mode="OUT"/>
    </parameterMap>
    
    <parameterMap class="java.util.Map" id="procHistoryInspParams">
        <parameter property="ORGID" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
        <parameter property="COMPANYID" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
        <parameter property="FMLID" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
        <parameter property="PERSONID" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
        <parameter property="STARTTIME" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
        <parameter property="LOTNOVISUALOLD" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
        <parameter property="LOTNOVISUAL" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
        <parameter property="REGISTID" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
        <parameter property="RETURNSTATUS" jdbcType="VARCHAR" javaType="java.lang.String" mode="OUT"/>
        <parameter property="MSGDATA" jdbcType="VARCHAR" javaType="java.lang.String" mode="OUT"/>
    </parameterMap>
    
    <parameterMap class="java.util.Map" id="procWOCheckParams">
        <parameter property="ORGID" jdbcType="NUMBER" javaType="java.lang.Integer" mode="IN"/>
        <parameter property="COMPANYID" jdbcType="NUMBER" javaType="java.lang.Integer" mode="IN"/>
        <parameter property="WORKORDERID" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
        <parameter property="WORKORDERSEQ" jdbcType="NUMBER" javaType="java.lang.Integer" mode="IN"/>
        <parameter property="WORKERID" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
        <parameter property="SEQ" jdbcType="NUMBER" javaType="java.lang.Integer" mode="IN"/>
        <parameter property="REGISTID" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
        <parameter property="RETURNSTATUS" jdbcType="VARCHAR" javaType="java.lang.String" mode="OUT"/>
        <parameter property="MSGDATA" jdbcType="VARCHAR" javaType="java.lang.String" mode="OUT"/>
    </parameterMap>
    
    <parameterMap class="java.util.Map" id="procWOOutCreateParams2">
        <parameter property="ORGID" jdbcType="NUMBER" javaType="java.lang.Integer" mode="IN"/>
        <parameter property="COMPANYID" jdbcType="NUMBER" javaType="java.lang.Integer" mode="IN"/>
        <parameter property="WORKORDERID" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
        <parameter property="WORKORDERSEQ" jdbcType="NUMBER" javaType="java.lang.Integer" mode="IN"/>
        <parameter property="ORDERQTY" jdbcType="NUMBER" javaType="java.lang.Integer" mode="IN"/>
        <parameter property="CUSTOMERCODE" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
        <parameter property="REGISTID" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
        <parameter property="RETURNSTATUS" jdbcType="VARCHAR" javaType="java.lang.String" mode="OUT"/>
        <parameter property="MSGDATA" jdbcType="VARCHAR" javaType="java.lang.String" mode="OUT"/>
    </parameterMap>
    
    <parameterMap class="java.util.Map" id="procWOOutCreateParams3">
        <parameter property="REGISTID" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
        <parameter property="RETURNSTATUS" jdbcType="VARCHAR" javaType="java.lang.String" mode="OUT"/>
        <parameter property="MSGDATA" jdbcType="VARCHAR" javaType="java.lang.String" mode="OUT"/>
    </parameterMap>
    
    <parameterMap class="java.util.Map" id="procReWorkDeleteParams">
        <parameter property="ORGID" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
        <parameter property="COMPANYID" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
        <parameter property="WORKORDERID" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
        <parameter property="REGISTID" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
        <parameter property="RETURNSTATUS" jdbcType="VARCHAR" javaType="java.lang.String" mode="OUT"/>
        <parameter property="MSGDATA" jdbcType="VARCHAR" javaType="java.lang.String" mode="OUT"/>
    </parameterMap>
    
    <parameterMap class="java.util.Map" id="procWoFirstOrderParams">
        <parameter property="ORGID" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
        <parameter property="COMPANYID" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
        <parameter property="WORKORDERID" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
        <parameter property="WORKORDERSEQ" jdbcType="NUMBER" javaType="java.lang.Integer" mode="IN"/>
        <parameter property="REGISTID" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
        <parameter property="RETURNSTATUS" jdbcType="VARCHAR" javaType="java.lang.String" mode="OUT"/>
        <parameter property="MSGDATA" jdbcType="VARCHAR" javaType="java.lang.String" mode="OUT"/>
    </parameterMap>
    
    <parameterMap class="java.util.Map" id="WarehousingLotNoParams">
        <parameter property="ORGID" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
        <parameter property="COMPANYID" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
        <parameter property="LOTNO" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
        <parameter property="REGISTID" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
        <parameter property="RETURNSTATUS" jdbcType="VARCHAR" javaType="java.lang.String" mode="OUT"/>
        <parameter property="MSGDATA" jdbcType="VARCHAR" javaType="java.lang.String" mode="OUT"/>
    </parameterMap>
    
    <parameterMap class="java.util.Map" id="WarehousingListParams">
        <parameter property="ORGID" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
        <parameter property="COMPANYID" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
        <parameter property="GUBUN" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
        <parameter property="PONO" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
        <parameter property="POSEQ" jdbcType="NUMBER" javaType="java.lang.Integer" mode="IN"/>
        <parameter property="TRANSPERSON" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
        <parameter property="TRANSNO" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
        <parameter property="TRANSQTY" jdbcType="NUMBER" javaType="java.math.BigDecimal" mode="IN"/>
        <parameter property="CON1" jdbcType="NUMBER" javaType="java.math.BigDecimal" mode="IN"/>
        <parameter property="CON9" jdbcType="NUMBER" javaType="java.math.BigDecimal" mode="IN"/>
        <parameter property="REGISTID" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
        <parameter property="RETURNSTATUS" jdbcType="VARCHAR" javaType="java.lang.String" mode="OUT"/>
        <parameter property="MSGDATA" jdbcType="VARCHAR" javaType="java.lang.String" mode="OUT"/>
    </parameterMap>
    
    <parameterMap class="java.util.Map" id="procWorkOrderFaultParams1">
        <parameter property="ORGID" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
        <parameter property="COMPANYID" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
        <parameter property="WORKORDERID" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
        <parameter property="WORKORDERSEQ" jdbcType="NUMBER" javaType="java.lang.Integer" mode="IN"/>
        <parameter property="SEQNO" jdbcType="NUMBER" javaType="java.lang.Integer" mode="IN"/>
        <parameter property="LOGIN" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
        <parameter property="RSCODE" jdbcType="VARCHAR" javaType="java.lang.String" mode="OUT"/>
        <parameter property="RSSTATUS" jdbcType="VARCHAR" javaType="java.lang.String" mode="OUT"/>
    </parameterMap>
    
    <parameterMap class="java.util.Map" id="procWorkOrderInsertParams1">
        <parameter property="ORGID" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
        <parameter property="COMPANYID" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
        <parameter property="WORKORDERID" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
        <parameter property="WORKORDERSEQ" jdbcType="NUMBER" javaType="java.lang.Integer" mode="IN"/>
        <parameter property="ITEMCODE" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
        <parameter property="WORKCENTERCODE" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
        <parameter property="QTY" jdbcType="NUMBER" javaType="java.lang.Integer" mode="IN"/>
        <parameter property="WORKTIMEHOUR" jdbcType="NUMBER" javaType="java.lang.Integer" mode="IN"/>
        <parameter property="WORKER" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
        <parameter property="STARTTIME" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
        <parameter property="ENDTIME" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
        <parameter property="AMPM" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
        <parameter property="WEIGHT" jdbcType="NUMBER" javaType="java.lang.Integer" mode="IN"/>
        <parameter property="IFQTY" jdbcType="NUMBER" javaType="java.lang.Integer" mode="IN"/>
        <parameter property="LOTNO" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
        <parameter property="LOGIN" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/> 
        <parameter property="SEQNO" jdbcType="VARCHAR" javaType="java.lang.String" mode="OUT"/>
        <parameter property="RSCODE" jdbcType="VARCHAR" javaType="java.lang.String" mode="OUT"/>
        <parameter property="RSSTATUS" jdbcType="VARCHAR" javaType="java.lang.String" mode="OUT"/>
    </parameterMap>
    
    <parameterMap class="java.util.Map" id="procWorkOrderUpdateParams1">
        <parameter property="ORGID" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
        <parameter property="COMPANYID" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
        <parameter property="WORKORDERID" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
        <parameter property="WORKORDERSEQ" jdbcType="NUMBER" javaType="java.lang.Integer" mode="IN"/>
        <parameter property="SEQNO" jdbcType="NUMBER" javaType="java.lang.Integer" mode="IN"/>
        <parameter property="ITEMCODE" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
        <parameter property="WORKCENTERCODE" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
        <parameter property="QTY" jdbcType="NUMBER" javaType="java.lang.Integer" mode="IN"/>
        <parameter property="WORKTIMEHOUR" jdbcType="NUMBER" javaType="java.lang.Integer" mode="IN"/>
        <parameter property="WORKER" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
        <parameter property="STARTTIME" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
        <parameter property="ENDTIME" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
        <parameter property="AMPM" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
        <parameter property="WEIGHT" jdbcType="NUMBER" javaType="java.lang.Integer" mode="IN"/>
        <parameter property="IFQTY" jdbcType="NUMBER" javaType="java.lang.Integer" mode="IN"/>
        <parameter property="LOTNO" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
        <parameter property="LOGIN" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
        <parameter property="RSCODE" jdbcType="VARCHAR" javaType="java.lang.String" mode="OUT"/>
        <parameter property="RSSTATUS" jdbcType="VARCHAR" javaType="java.lang.String" mode="OUT"/>
    </parameterMap>
    
    <parameterMap class="java.util.Map" id="procWorkOrderDeleteParams1">
        <parameter property="ORGID" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
        <parameter property="COMPANYID" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
        <parameter property="WORKORDERID" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
        <parameter property="WORKORDERSEQ" jdbcType="NUMBER" javaType="java.lang.Integer" mode="IN"/>
        <parameter property="SEQNO" jdbcType="NUMBER" javaType="java.lang.Integer" mode="IN"/>
        <parameter property="ITEMCODE" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
        <parameter property="WORKCENTERCODE" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
        <parameter property="QTY" jdbcType="NUMBER" javaType="java.lang.Integer" mode="IN"/>
        <parameter property="WORKTIMEHOUR" jdbcType="NUMBER" javaType="java.lang.Integer" mode="IN"/>
        <parameter property="WORKER" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
        <parameter property="STARTTIME" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
        <parameter property="ENDTIME" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
        <parameter property="AMPM" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
        <parameter property="WEIGHT" jdbcType="NUMBER" javaType="java.lang.Integer" mode="IN"/>
        <parameter property="IFQTY" jdbcType="NUMBER" javaType="java.lang.Integer" mode="IN"/>
        <parameter property="LOTNO" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
        <parameter property="LOGIN" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
        <parameter property="RSCODE" jdbcType="VARCHAR" javaType="java.lang.String" mode="OUT"/>
        <parameter property="RSSTATUS" jdbcType="VARCHAR" javaType="java.lang.String" mode="OUT"/>
    </parameterMap>
    
    <parameterMap class="java.util.Map" id="procWOBomQtyParams">
        <parameter property="ORGID" jdbcType="NUMBER" javaType="java.lang.Integer" mode="IN"/>
        <parameter property="COMPANYID" jdbcType="NUMBER" javaType="java.lang.Integer" mode="IN"/>
        <parameter property="WORKORDERID" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
        <parameter property="WORKORDERSEQ" jdbcType="NUMBER" javaType="java.lang.Integer" mode="IN"/>
        <parameter property="SEQ" jdbcType="NUMBER" javaType="java.lang.Integer" mode="IN"/>
        <parameter property="REGISTID" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
        <parameter property="RETURNSTATUS" jdbcType="VARCHAR" javaType="java.lang.String" mode="OUT"/>
        <parameter property="MSGDATA" jdbcType="VARCHAR" javaType="java.lang.String" mode="OUT"/>
    </parameterMap>
    
    <parameterMap class="java.util.Map" id="procDetailManageParams">
        <parameter property="ORGID" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
        <parameter property="COMPANYID" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
        <parameter property="WORKORDERID" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
        <parameter property="WORKORDERSEQ" jdbcType="NUMBER" javaType="java.lang.Integer" mode="IN"/>
        <parameter property="ITEMCODE" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
        <parameter property="WORKCENTERCODE" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
        <parameter property="WORKDIV" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
        <parameter property="WORKER" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
        <parameter property="QTY" jdbcType="NUMBER" javaType="java.lang.Integer" mode="IN"/>
        <parameter property="GUBUN" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
        <parameter property="REGISTID" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
        <parameter property="RETURNSTATUS" jdbcType="VARCHAR" javaType="java.lang.String" mode="OUT"/>
        <parameter property="MSGDATA" jdbcType="VARCHAR" javaType="java.lang.String" mode="OUT"/>
    </parameterMap>
    
    <parameterMap class="java.util.Map" id="procWorkCreateParams">
        <parameter property="ORGID" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
        <parameter property="COMPANYID" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
        <parameter property="ITEMCODE" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
        <parameter property="ROUTINGID" jdbcType="NUMBER" javaType="java.lang.Integer" mode="IN"/>
        <parameter property="WORKCENTERCODE" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
        <parameter property="REGISTID" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
        <parameter property="MSGDATA" jdbcType="VARCHAR" javaType="java.lang.String" mode="OUT"/>
        <parameter property="RETURNSTATUS" jdbcType="VARCHAR" javaType="java.lang.String" mode="OUT"/>
    </parameterMap>
    
    <parameterMap class="java.util.Map" id="procCopyCreateParams">
        <parameter property="ORGID" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
        <parameter property="COMPANYID" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
        <parameter property="WORKORDERIDF" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
        <parameter property="WORKORDERIDT" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
        <parameter property="ITEMCODE" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
        <parameter property="GUBUN" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
        <parameter property="STARTYN" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
        <parameter property="ENDYN" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
        <parameter property="REGISTID" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
        <parameter property="RETURNSTATUS" jdbcType="VARCHAR" javaType="java.lang.String" mode="OUT"/>
        <parameter property="MSGDATA" jdbcType="VARCHAR" javaType="java.lang.String" mode="OUT"/>
    </parameterMap>
    
    <parameterMap class="java.util.Map" id="procWorkPlanParams">
        <parameter property="ORGID" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
        <parameter property="COMPANYID" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
        <parameter property="SONO" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
        <parameter property="SOSEQ" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
        <parameter property="WORKPLANNO" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
        <parameter property="WORKORDERID" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
        <parameter property="ITEMCODE" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
        <parameter property="REGISTID" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
        <parameter property="RETURNSTATUS" jdbcType="VARCHAR" javaType="java.lang.String" mode="OUT"/>
        <parameter property="MSGDATA" jdbcType="VARCHAR" javaType="java.lang.String" mode="OUT"/>
    </parameterMap>
    
    <parameterMap class="java.util.Map" id="procWorkOutOrderParams">
        <parameter property="ORGID" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
        <parameter property="COMPANYID" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
        <parameter property="ITEMCODE" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
        <parameter property="ROUTINGCODE" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
        <parameter property="WORKORDERID" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
        <parameter property="CUSTOMERCODE" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
        <parameter property="OUTPODATE" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
        <parameter property="ORDERQTY" jdbcType="NUMBER" javaType="java.math.BigDecimal" mode="IN"/>
        <parameter property="MODQTY" jdbcType="NUMBER" javaType="java.math.BigDecimal" mode="IN"/>
        <parameter property="FLAG" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
        <parameter property="REGISTID" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
        <parameter property="RETURNSTATUS" jdbcType="VARCHAR" javaType="java.lang.String" mode="OUT"/>
        <parameter property="MSGDATA" jdbcType="VARCHAR" javaType="java.lang.String" mode="OUT"/>
        <parameter property="OUTPONO" jdbcType="VARCHAR" javaType="java.lang.String" mode="OUT"/>
    </parameterMap>
    
    <procedure id="workRoutingCreate.call.Procedure" parameterClass="java.util.Map"  parameterMap="procWorkRoutingParams" resultClass="java.util.HashMap" >
    <![CDATA[
       {call CB_MFG_PKG.CB_ROUTING_CREATE( ?, ?, ?, ?, ?, ?, ? ) }
       ]]>
    </procedure>

    <procedure id="workRoutingUpdate.call.Procedure" parameterClass="java.util.Map"  parameterMap="procWorkRoutingParams" resultClass="java.util.HashMap" >
    <![CDATA[
       {call CB_MFG_PKG.CB_ROUTING_UPDATE( ?, ?, ?, ?, ?, ?, ? ) }
       ]]>
    </procedure>

    <procedure id="workRoutingMonth.call.Procedure" parameterClass="java.util.Map"  parameterMap="procWorkMonthParams" resultClass="java.util.HashMap" >
    <![CDATA[
       {call CB_MFG_PKG.CB_ROUTING_MONTH( ?, ?, ?, ?, ?, ? ) }
       ]]>
    </procedure>

    <procedure id="workRoutingDelete.call.Procedure" parameterClass="java.util.Map"  parameterMap="procWorkRoutingParams" resultClass="java.util.HashMap" >
    <![CDATA[
       {call CB_MFG_PKG.CB_ROUTING_DELETE( ?, ?, ?, ?, ?, ?, ? ) }
       ]]>
    </procedure>
    
    <procedure id="workStatusUpdate.call.Procedure" parameterClass="java.util.Map"  parameterMap="procWorkStatusParams" resultClass="java.util.HashMap" >
    <![CDATA[
       {call CB_MFG_PKG.CB_WORK_STATUS_U( ?, ?, ?, ?, ?, ?, ?, ? ) }
       ]]>
    </procedure>
    
    <procedure id="prod.wo.release.createnew.call.Procedure" parameterClass="java.util.Map"  parameterMap="procWOReleaseNewParams" resultClass="java.util.HashMap" >
    <![CDATA[
       {call CB_MFG_PKG.CB_WORK_REL_CREATE_NEW( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) }
       ]]>
    </procedure>

    <procedure id="prod.wo.release.updatenew.call.Procedure" parameterClass="java.util.Map"  parameterMap="procWOReleaseNewParams" resultClass="java.util.HashMap" >
    <![CDATA[
       {call CB_MFG_PKG.CB_WORK_REL_UPDATE_NEW( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) }
       ]]>
    </procedure>
    
    <procedure id="prod.wo.release.deletenew.call.Procedure" parameterClass="java.util.Map"  parameterMap="procWOReleaseNewParams" resultClass="java.util.HashMap" >
    <![CDATA[
       {call CB_MFG_PKG.CB_WORK_REL_DELETE_NEW( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) }
       ]]>
    </procedure>

    <procedure id="prodWorkFmlCreate.call.Procedure" parameterClass="java.util.Map"  parameterMap="procWorkFmlCreateParams" resultClass="java.util.HashMap" >
    <![CDATA[
       {call CB_MFG_PKG.CB_WORK_FML_CREATE( ?, ?, ?, ?, ?, ?, ? ) }
       ]]>
    </procedure>

    <procedure id="prod.wo.fml.create.call.Procedure" parameterClass="java.util.Map"  parameterMap="procWOFmlParams" resultClass="java.util.HashMap" >
    <![CDATA[
       {call CB_MFG_PKG.CB_WORK_FML_CREATE( ?, ?, ?, ?, ?, ?, ? ) }
       ]]>
    </procedure>
    
    <procedure id="work.order.history.master.call.Procedure" parameterClass="java.util.Map"  parameterMap="procHistoryInspParams" resultClass="java.util.HashMap" >
    <![CDATA[
       {call CB_MFG_PKG.CB_FML_MASTER_INSP_UPDATE( ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) }
       ]]>
    </procedure>
    
    <procedure id="prod.workorder.check.create.call.Procedure" parameterClass="java.util.Map"  parameterMap="procWOCheckParams" resultClass="java.util.HashMap" >
    <![CDATA[
       {call CB_MFG_PKG.CB_WORK_CHECK_CREATE( ?, ?, ?, ?, ?, ?, ?, ?, ? ) }
       ]]>
    </procedure>
    
    <procedure id="prod.workorder.check.complete.call.Procedure" parameterClass="java.util.Map"  parameterMap="procWOCheckParams" resultClass="java.util.HashMap" >
    <![CDATA[
       {call CB_MFG_PKG.CB_WORK_CHECK_COMPLETE_U( ?, ?, ?, ?, ?, ?, ?, ?, ? ) }
       ]]>
    </procedure>
    
    <procedure id="prod.work.order.delete.call.Procedure" parameterClass="java.util.Map"  parameterMap="procReWorkDeleteParams" resultClass="java.util.HashMap" >
    <![CDATA[
       {call CB_MFG_PKG.CB_WORK_ORDER_CREATE_D( ?, ?, ?, ?, ?, ? ) }
       ]]>
    </procedure>
    
    <procedure id="prod.wo.first.order.update.call.Procedure" parameterClass="java.util.Map"  parameterMap="procWoFirstOrderParams" resultClass="java.util.HashMap" >
    <![CDATA[
       {call CB_MFG_PKG.CB_WORK_FIRST_ORDER_U( ?, ?, ?, ?, ?, ?, ? ) }
       ]]>
    </procedure>
    
    <procedure id="prod.work.warehousing.lotno.call.Procedure" parameterClass="java.util.Map"  parameterMap="WarehousingLotNoParams" resultClass="java.util.HashMap" >
    <![CDATA[
       {call CB_MFG_PKG.CB_WORK_WAREHOUSING_LOT_U( ?, ?, ?, ?, ?, ? ) }
       ]]>
    </procedure>
    
    <procedure id="prod.work.warehousing.list.call.Procedure" parameterClass="java.util.Map"  parameterMap="WarehousingListParams" resultClass="java.util.HashMap" >
    <![CDATA[
       {call CB_MFG_PKG.CB_WORK_WAREHOUSING_U( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) }
       ]]>
    </procedure>
    
    <procedure id="prod.workorder.out.order.create1.call.Procedure" parameterClass="java.util.Map"  parameterMap="procWOOutCreateParams2" resultClass="java.util.HashMap" >
    <![CDATA[
       {call CB_MFG_PKG.CB_OUT_ORDER_CREATE1( ?, ?, ?, ?, ?, ?, ?, ?, ? ) }
       ]]>
    </procedure>
    
    <procedure id="prod.workorder.out.order.create2.call.Procedure" parameterClass="java.util.Map"  parameterMap="procWOOutCreateParams3" resultClass="java.util.HashMap" >
    <![CDATA[
       {call CB_MFG_PKG.CB_OUT_ORDER_CREATE2( ?, ?, ? ) }
       ]]>
    </procedure>
    
    <procedure id="routing.workorder.faultinsert.call.Procedure" parameterClass="java.util.Map"  parameterMap="procWorkOrderFaultParams1" resultClass="java.util.HashMap" >
    <![CDATA[
       {call CB_MFG_PKG.CB_WORK_BOM_QTY_CREATE_F( ?, ?, ?, ?, ?, ?, ?, ?) }
       ]]>
    </procedure>
    
    <procedure id="routing.workorder.detailinsert.call.Procedure" parameterClass="java.util.Map"  parameterMap="procWorkOrderInsertParams1" resultClass="java.util.HashMap" >
    <![CDATA[
       {call CB_MFG_PKG.CB_WORK_CONFIRM_QTY( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) }
       ]]>
    </procedure>
    
    <procedure id="routing.workorder.detailupdate.call.Procedure" parameterClass="java.util.Map"  parameterMap="procWorkOrderUpdateParams1" resultClass="java.util.HashMap" >
    <![CDATA[
       {call CB_MFG_PKG.CB_WORK_CONFIRM_UPDATE_QTY( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ,?, ?, ?) }
       ]]>
    </procedure>
    
    <procedure id="routing.workorder.detaildelete.call.Procedure" parameterClass="java.util.Map"  parameterMap="procWorkOrderDeleteParams1" resultClass="java.util.HashMap" >
    <![CDATA[
       {call CB_MFG_PKG.CB_WORK_CONFIRM_DELETE_QTY( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ,?, ?, ?) }
       ]]>
    </procedure>
    
    <procedure id="prod.workorder.bom.qty.call.Procedure" parameterClass="java.util.Map"  parameterMap="procWOBomQtyParams" resultClass="java.util.HashMap" >
    <![CDATA[
       {call CB_MFG_PKG.CB_WORK_BOM_QTY_CREATE( ?, ?, ?, ?, ?, ?, ?, ? ) }
       ]]>
    </procedure>
    
    <procedure id="prod.work.detail.manage.call.Procedure" parameterClass="java.util.Map"  parameterMap="procDetailManageParams" resultClass="java.util.HashMap" >
    <![CDATA[
       {call CB_MFG_PKG.CB_WORK_D_MANAGE( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) }
       ]]>
    </procedure>
    
    <procedure id="prod.work.order.create.call.Procedure" parameterClass="java.util.Map"  parameterMap="procWorkCreateParams" resultClass="java.util.HashMap" >
    <![CDATA[
       {call CB_NEW_MFG_PKG.CB_WORK_ORDER_CREATE( ?, ?, ?, ?, ?, ?, ?, ? ) }
       ]]>
    </procedure>
    
    <procedure id="prod.work.copy.create.call.Procedure" parameterClass="java.util.Map"  parameterMap="procCopyCreateParams" resultClass="java.util.HashMap" >
    <![CDATA[
       {call CB_NEW_MFG_PKG.CB_WO_COPY_MANAGE( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) }
       ]]>
    </procedure>
    
    <procedure id="prod.work.plan.update.call.Procedure" parameterClass="java.util.Map"  parameterMap="procWorkPlanParams" resultClass="java.util.HashMap" >
    <![CDATA[
       {call CB_NEW_MFG_PKG.CB_WORK_PLAN_UPDATE( ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) }
       ]]>
    </procedure>
    
    <procedure id="prod.work.outorder.create.call.Procedure" parameterClass="java.util.Map"  parameterMap="procWorkOutOrderParams" resultClass="java.util.HashMap" >
    <![CDATA[
       {call CB_OUTSIDE_ORDER_PKG.CB_WORK_OUT_ORDER_CREATE( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) }
       ]]>
    </procedure>
    
    <!-- Dummy Lov 시작 -->
    <sql id="prod.dummy.month.sql-select">
        SELECT TO_CHAR(ADD_MONTHS(TRUNC(SYSDATE, 'MM'), -1), 'YYYY-MM-DD') AS DATEFROM
                 ,TO_CHAR(LAST_DAY(SYSDATE), 'YYYY-MM-DD') AS DATETO
                 ,TO_CHAR(TRUNC(ADD_MONTHS(SYSDATE, -1), 'MM'), 'YYYY-MM-DD') AS PREDATEFROM
                 ,TO_CHAR(LAST_DAY(ADD_MONTHS(SYSDATE, -1)), 'YYYY-MM-DD') AS PREDATETO
                 ,TO_CHAR(TRUNC(ADD_MONTHS(SYSDATE, -12), 'MM'), 'YYYY-MM-DD') AS PREYEARFROM
                 ,TO_CHAR(LAST_DAY(ADD_MONTHS(SYSDATE, -12)), 'YYYY-MM-DD') AS PREYEARTO
                 ,TO_CHAR(SYSDATE,'YYYY-MM-DD') AS DATESYS
                 ,TO_CHAR(LAST_DAY(SYSDATE), 'YYYY-MM-DD') AS LASTDATE
                 ,TO_CHAR(TRUNC(SYSDATE, 'MM'),'YYYY-MM-DD') AS FIRSTDAY
          FROM DUAL
    </sql>

    <sql id="prod.dummy.month.sql-where">
         WHERE 1 = 1
    </sql>

    <select id="prod.dummy.month.select" parameterClass="java.util.Map"
        resultClass="java.util.HashMap">
        <include refid="prod.dummy.month.sql-select" />
        <include refid="prod.dummy.month.sql-where" />
    </select>
    <!-- Dummy Lov 종료 -->

    <sql id="prod.work.list.sql-select">
     SELECT RANK() OVER(ORDER BY OHV.WORKORDERID DESC, OHV.MODELNAME, OHV.ITEMCODE, OHV.WORK_PLAN_START_DATE ) AS RN
              ,OHV.ORGID
              ,OHV.COMPANYID
              ,OHV.WORKORDERID
              ,OHV.WORKTYPE
              ,OHV.WORKTYPENAME
              ,OHV.WORKSTATUS
              ,OHV.WORKSTATUSNAME
              ,OHV.ITEMCODE
              ,OHV.ORDERNAME
              ,OHV.DRAWINGNO
              ,OHV.ITEMNAME
              ,OHV.MODEL
              ,OHV.MODELNAME
              ,OHV.MATERIALTYPE
              ,OHV.UOM
              ,OHV.UOMNAME
              ,OHV.ITEMSTANDARDDETAIL
              ,OHV.WORKORDERQTY
              ,OHV.MOLDCODE
              ,OHV.MOLDNAME
              ,OHV.WORK_PLAN_START_DATE
              ,OHV.WORK_PLAN_END_DATE
              ,OHV.WORK_START_DATE
              ,OHV.WORK_END_DATE
              ,OHV.WORKPLANSTARTDATE
              ,OHV.WORKPLANENDDATE
              ,OHV.WORKSTARTDATE
              ,OHV.WORKENDDATE
              ,OHV.WORKPLANSTARTDATE
              ,OHV.WORKPLANENDDATE
              ,OHV.WORKSTARTDATE
              ,OHV.WORKENDDATE
              ,OHV.REMARKS
              ,MV.WORK_PLAN_QTY AS WORKPLANQTY
              ,OHV.DUEDATE AS DUEDATE
              ,OHV.WORKPLANNO AS WORKPLANNO
              ,MV.CUSTOMER_CODE AS CUSTOMERGUBUN
              ,MV.CUSTOMER_NAME AS CUSTOMERGUBUNNAME
              ,OHV.EXCESSQTYYN3 AS EXCESSQTYYN3
          FROM CB_WORK_ORDER_HEADER_V OHV
              ,CB_PROD_PLAN_MANAGE_V MV
    </sql>

    <sql id="prod.work.list.sql-where">
         WHERE OHV.ORGID = MV.ORG_ID(+)
            AND OHV.COMPANYID = MV.COMPANY_ID(+)
            AND OHV.WORKPLANNO = MV.WORK_PLAN_NO(+)
         <isNotEmpty property="ORGID" prepend="AND">
            OHV.ORGID = #ORGID#
         </isNotEmpty>
         <isNotEmpty property="COMPANYID" prepend="AND">
            OHV.COMPANYID = #COMPANYID#
         </isNotEmpty>
         <isNotEmpty property="WORKORDERID" prepend="AND">
            OHV.WORKORDERID = #WORKORDERID#
         </isNotEmpty>
         <isNotEmpty property="WORKSTATUS" prepend="AND">
            OHV.WORKSTATUS = #WORKSTATUS#
         </isNotEmpty>
         <isNotEmpty property="WORKTYPE" prepend="AND">
            OHV.WORKTYPE = #WORKTYPE#
         </isNotEmpty>
         <isNotEmpty property="ITEMCODE" prepend="AND">
            OHV.ITEMCODE = #ITEMCODE#
         </isNotEmpty>
         <isNotEmpty property="ITEMNAME" prepend="AND">
            OHV.ITEMNAME LIKE '%' || #ITEMNAME# || '%'
         </isNotEmpty>
         <isNotEmpty property="ORDERNAME" prepend="AND">
            OHV.ORDERNAME LIKE '%' || #ORDERNAME# || '%'
         </isNotEmpty>
         <isNotEmpty property="MODELNAME" prepend="AND">
            OHV.MODELNAME LIKE '%' || #MODELNAME# || '%'
         </isNotEmpty>
         <isNotEmpty property="WORKPLANDATE" prepend="AND">
            TO_DATE(#WORKPLANDATE#,'YYYY-MM-DD') BETWEEN NVL(OHV.WORK_PLAN_START_DATE,TO_DATE('2011-01-01','YYYY-MM-DD')) AND NVL(OHV.WORK_PLAN_END_DATE,TO_DATE('4999-12-31','YYYY-MM-DD'))
         </isNotEmpty>
         <isNotEmpty property="WORKDATE" prepend="AND">
            TO_DATE(#WORKDATE#,'YYYY-MM-DD') BETWEEN NVL(OHV.WORK_START_DATE,TO_DATE('2011-01-01','YYYY-MM-DD')) AND NVL(OHV.WORK_END_DATE,TO_DATE('4999-12-31','YYYY-MM-DD'))
         </isNotEmpty>
         <isNotEmpty property="BIGCODE" prepend="AND">
            OHV.BIGCODE = #BIGCODE#
         </isNotEmpty>
         <isNotEmpty property="PRODSTART" prepend="AND">
            OHV.WORKSTATUS NOT IN ('COMPLETE','CANCEL')
         </isNotEmpty>
         <isNotEmpty property="POPUPGUBUN">
            <isNotEqual property="POPUPGUBUN" compareValue="COPY" prepend="AND">
                OHV.WORKSTATUS IN ('STAND_BY', 'PROGRESS', 'START')
            </isNotEqual>
         </isNotEmpty>
         <isNotEmpty property="NOTWORKORDERID" prepend="AND">
            OHV.WORKORDERID NOT IN #NOTWORKORDERID#
         </isNotEmpty>
         ORDER BY OHV.WORKORDERID DESC, OHV.MODELNAME, OHV.ITEMCODE, OHV.WORK_PLAN_START_DATE
    </sql>

    <select id="prod.work.list.select" parameterClass="java.util.Map"
        resultClass="java.util.HashMap">
        <include refid="prod.work.list.sql-select" />
        <include refid="prod.work.list.sql-where" />
    </select>

    <select id="prod.work.list.count" parameterClass="java.util.Map"
        resultClass="java.lang.Integer">
        SELECT COUNT(*) FROM (
            <include refid="prod.work.list.sql-select" />
            <include refid="prod.work.list.sql-where" />
        ) TOT
    </select>

    <select id="prod.work.startdate.select" parameterClass="java.util.Map"
        resultClass="java.util.HashMap">
        SELECT NVL(MAX(TO_CHAR(WORK_START_DATE,'YYYY-MM-DD')), TO_CHAR(SYSDATE-1, 'YYYY-MM-DD')) AS WORKSTARTDATE
            FROM CB_WORK_ORDER
          WHERE 1=1
            AND WORK_START_DATE IS NOT NULL
            AND ORG_ID = #ORGID#
            AND COMPANY_ID = #COMPANYID#
    </select>
    
    <select id="prod.work.startdate.count" parameterClass="java.util.Map"
        resultClass="java.lang.Integer">
        SELECT COUNT(*) FROM(
            SELECT MAX(TO_CHAR(WORK_START_DATE,'YYYY-MM-DD')) AS WORKSTARTDATE
                FROM CB_WORK_ORDER_HEADER_V 
              WHERE 1=1
                AND WORK_START_DATE IS NOT NULL
                AND ORGID = #ORGID#
                AND COMPANYID = #COMPANYID#
         )TOT
    </select>

<!-- 2016.12.01작업지시번호 생성  -->
    <select id="prod.work.new.workorderid.select" parameterClass="java.util.Map" resultClass="java.util.HashMap">
        SELECT #WORKDIV# || TO_CHAR(SYSDATE, 'YYMMDD') || '-' ||
               (CASE
                  WHEN NUM BETWEEN 0 AND 8 THEN
                   TO_CHAR('00')
                  WHEN NUM BETWEEN 9 AND 98 THEN
                   TO_CHAR('0')
                  ELSE
                   TO_CHAR('')
                END) || TO_NUMBER(NUM + 1) AS WORKORDERID
          FROM (SELECT NVL(TO_NUMBER(SUBSTR(MAX(WORK_ORDER_ID), -3)), 0) AS NUM
                    FROM CB_WORK_ORDER_HEADER
                   WHERE 1 = 1
                      AND ORG_ID = #ORGID#
                      AND COMPANY_ID = #COMPANYID#
                      AND WORK_ORDER_ID LIKE #WORKDIV# || TO_CHAR(SYSDATE, 'YYMMDD') || '%')
    </select>
<!-- 2016.12.01작업지시번호 생성  끝-->

<!-- 2016.12.01작업지시  생성 -->
   <insert id="prod.work.insert" parameterClass="java.util.Map">
        <![CDATA[
            INSERT INTO CB_WORK_ORDER_HEADER
              (ORG_ID
               ,COMPANY_ID
               ,WORK_ORDER_ID
               ,WORK_TYPE
               ,WORK_STATUS
               ,ITEM_CODE
               ,WORK_ORDER_QTY
               ,WORK_PLAN_START_DATE
               ,WORK_PLAN_END_DATE
               ,MOLD_CODE
        ]]>
        <isNotEmpty property="WORKPLANNO" prepend=",">
               WORK_PLAN_NO
        </isNotEmpty>
        <isNotEmpty property="DUEDATE" prepend=",">
               DUE_DATE
        </isNotEmpty>
        <isNotEmpty property="REMARKS" prepend=",">
               REMARKS
        </isNotEmpty>
        <![CDATA[
               ,CREATION_DATE
               ,CREATED_BY
               ,LAST_UPDATE_DATE
               ,LAST_UPDATED_BY
               )
            VALUES
              (#ORGID#
              ,#COMPANYID#
              ,#WORKORDERID#
              ,#WORKTYPE#
              ,#WORKSTATUS#
              ,#ITEMCODE#
              ,$WORKORDERQTY$
              ,TO_DATE(#WORKPLANSTARTDATE#, 'YYYY-MM-DD')
              ,TO_DATE(#WORKPLANENDDATE#, 'YYYY-MM-DD')
              ,#MOLDCODE#
        ]]>
        <isNotEmpty property="WORKPLANNO" prepend=",">
              #WORKPLANNO#
        </isNotEmpty>
        <isNotEmpty property="DUEDATE" prepend=",">
              TO_DATE(#DUEDATE#, 'YYYY-MM-DD')
        </isNotEmpty>
        <isNotEmpty property="REMARKS" prepend=",">
              #REMARKS#
        </isNotEmpty>
        <![CDATA[
               ,SYSDATE
               ,#REGISTID#
               ,SYSDATE
               ,#REGISTID#
               )
        ]]>
    </insert>
<!-- 2016.12.01작업지시  생성  끝-->

 <!-- 2016.12.01작업지시  수정 -->
    <update id="prod.work.update" parameterClass="java.util.Map">
        <![CDATA[
        UPDATE CB_WORK_ORDER_HEADER
           SET LAST_UPDATED_BY  = #UPDATEID#
               , LAST_UPDATE_DATE = SYSDATE
               , WORK_STATUS = #WORKSTATUS#
               , WORK_TYPE = #WORKTYPE#
               , ITEM_CODE = #ITEMCODE#
               , WORK_ORDER_QTY = $WORKORDERQTY$
               , WORK_PLAN_START_DATE = TO_DATE(#WORKPLANSTARTDATE#, 'YYYY-MM-DD')
               , WORK_PLAN_END_DATE = TO_DATE(#WORKPLANENDDATE#, 'YYYY-MM-DD')
               , MOLD_CODE = #MOLDCODE#
               , WORK_PLAN_NO = #WORKPLANNO#
               , DUE_DATE = TO_DATE(#DUEDATE#, 'YYYY-MM-DD')
        ]]>
        <isNotEmpty property="REMARKS" prepend=",">
            REMARKS = #REMARKS#
        </isNotEmpty>
        <isEmpty property="REMARKS" prepend=",">
            REMARKS = NULL
        </isEmpty>
        <![CDATA[
        WHERE 1=1
            AND ORG_ID = #ORGID#
            AND COMPANY_ID = #COMPANYID#
            AND WORK_ORDER_ID = #WORKORDERID#
        ]]>
    </update>
 <!-- 2016.12.01작업지시  수정 -->

  <!-- 2016.12.01작업지시  삭제 -->
    <delete id="prod.work.delete" parameterClass="java.util.Map">
        DELETE FROM CB_WORK_ORDER_HEADER
         WHERE 1=1
            AND ORG_ID = #ORGID#
            AND COMPANY_ID = #COMPANYID#
            AND WORK_ORDER_ID = #WORKORDERID#
    </delete>
  <!-- 2016.12.01작업지시  삭제 -->

    <sql id="prod.work.listD.sql-select">
        SELECT RANK() OVER(ORDER BY WORKORDERID , WORKORDERSEQ) AS RN
                ,ORGID
                ,COMPANYID
                ,WORKORDERID
                ,WORKORDERSEQ
                ,WORKTYPE
                ,WORKTYPENAME
                ,WORKSTATUS
                ,WORKSTATUSNAME
                ,MODEL
                ,MODELNAME
                ,ITEMCODE
                ,ITEMNAME
                ,ORDERNAME
                ,UOM
                ,UOMNAME
                ,ROUTINGNO
                ,ROUTINGOP
                ,ROUTINGCODE
                ,ROUTINGNAME
                ,WORKORDERQTY
                ,DAILYQTY
                ,IMPORTQTY
                ,WORKCENTERCODE
                ,WORKCENTERNAME
                ,WORKCENTERCODE2
                ,WORKCENTERNAME2
                ,WORKCENTERCODE3
                ,WORKCENTERNAME3
                ,WORKCENTERCODE4
                ,WORKCENTERNAME4
                ,WORKCENTERCODE5
                ,WORKCENTERNAME5
                ,WORKCENTERCODE6
                ,WORKCENTERNAME6
                ,WORKCENTERCODE7
                ,WORKCENTERNAME7
                ,WORKCENTERCODE8
                ,WORKCENTERNAME8
                ,WORKCENTERCODE9
                ,WORKCENTERNAME9
                ,WORKCENTERCODE10
                ,WORKCENTERNAME10
                ,WORKCENTERCODE11
                ,WORKCENTERNAME11
                ,WORKCENTERCODE12
                ,WORKCENTERNAME12
                ,WORKCENTERCODE13
                ,WORKCENTERNAME13
                ,WORKCENTERCODE14
                ,WORKCENTERNAME14
                ,WORKCENTERCODE15
                ,WORKCENTERNAME15
                ,EQUIPMENTCODE
                ,EQUIPMENTNAME
                ,MOLDCODE
                ,MOLDNAME
                ,WORK_PLAN_START_DATE
                ,WORK_PLAN_END_DATE
                ,WORK_START_DATE
                ,WORK_END_DATE
                ,WORKPLANSTARTDATE
                ,WORKPLANENDDATE
                ,WORKSTARTDATE
                ,WORKENDDATE
                ,OUTSIDEORDERGUBUN
                ,CUSTOMERCODEOUT
                ,CUSTOMERNAMEOUT
                ,REMARKS
                ,CREATEDBY
                ,CREATIONDATE
                ,LASTUPDATEDBY
                ,LASTUPDATEDATE
                ,FIRSTORDER
                ,FIRSTORDERNAME
                ,CHANGEEQUIP
                ,CHANGEEQUIPNAME
                ,EXCESSQTYYN3
                ,INSPECTIONYN
                ,ROUTINGSEQ
                ,ROUTREMAINQTY
        FROM CB_WORK_ORDER_LIST_V 
    </sql>

    <sql id="prod.work.listD.sql-where">
         WHERE 1 = 1
         <isNotEmpty property="ORGID" prepend="AND">
            ORGID = #ORGID#
         </isNotEmpty>
         <isNotEmpty property="COMPANYID" prepend="AND">
            COMPANYID = #COMPANYID#
         </isNotEmpty>
         <isNotEmpty property="WORKORDERID" prepend="AND">
            WORKORDERID = #WORKORDERID#
         </isNotEmpty>
    </sql>

    <select id="prod.work.listD.select" parameterClass="java.util.Map"
        resultClass="java.util.HashMap">
        <include refid="prod.work.listD.sql-select" />
        <include refid="prod.work.listD.sql-where" />
    </select>

    <select id="prod.work.listD.count" parameterClass="java.util.Map"
        resultClass="java.lang.Integer">
        SELECT COUNT(*) FROM (
            <include refid="prod.work.listD.sql-select" />
            <include refid="prod.work.listD.sql-where" />
        ) TOT
    </select>

<!-- 2017.01.04 작업지시 DETAIL 생성 -->
   <insert id="prod.workD.insert" parameterClass="java.util.Map">
        <![CDATA[
            INSERT INTO CB_WORK_ORDER
              (ORG_ID
               ,COMPANY_ID
               ,WORK_ORDER_ID
               ,WORK_ORDER_SEQ
               ,WORK_TYPE
               ,WORK_STATUS
               ,ITEM_CODE
               ,WORK_ORDER_QTY
               ,WORK_PLAN_START_DATE
               ,WORK_PLAN_END_DATE
               ,EQUIPMENT_CODE
               ,WORK_CENTER_CODE
               ,WORK_CENTER_CODE2
               ,WORK_CENTER_CODE3
               ,WORK_CENTER_CODE4
               ,WORK_CENTER_CODE5
               ,WORK_CENTER_CODE6
               ,WORK_CENTER_CODE7
               ,WORK_CENTER_CODE8
               ,WORK_CENTER_CODE9
               ,WORK_CENTER_CODE10
               ,WORK_CENTER_CODE11
               ,WORK_CENTER_CODE12
               ,WORK_CENTER_CODE13
               ,WORK_CENTER_CODE14
               ,WORK_CENTER_CODE15
               ,ROUTING_CODE
               ,DAILY_QTY
        ]]>
        <isNotEmpty property="OUTSIDEORDERGUBUN" prepend=",">
               OUTSIDE_ORDER_GUBUN
        </isNotEmpty>
        <isNotEmpty property="INSPECTIONYN" prepend=",">
               INSPECTION_YN
        </isNotEmpty>
        <isNotEmpty property="CUSTOMERCODEOUT" prepend=",">
               CUSTOMER_CODE_OUT
        </isNotEmpty>
        <isNotEmpty property="FIRSTORDER" prepend=",">
               FIRST_ORDER
        </isNotEmpty>
        <isNotEmpty property="REMARKS" prepend=",">
               REMARKS
        </isNotEmpty>
        <![CDATA[
               ,CREATION_DATE
               ,CREATED_BY
               ,LAST_UPDATE_DATE
               ,LAST_UPDATED_BY
               )
            VALUES
              (#ORGID#
              ,#COMPANYID#
              ,#WORKORDERID#
              ,#WORKORDERSEQ#
              ,#WORKTYPE#
              ,#WORKSTATUS#
              ,#ITEMCODE#
              ,$WORKORDERQTY$
              ,TO_DATE(#WORKPLANSTARTDATE#, 'YYYY-MM-DD')
              ,TO_DATE(#WORKPLANENDDATE#, 'YYYY-MM-DD')
              ,#EQUIPMENTCODE#
              ,#WORKCENTERCODE#
              ,#WORKCENTERCODE2#
              ,#WORKCENTERCODE3#
              ,#WORKCENTERCODE4#
              ,#WORKCENTERCODE5#
              ,#WORKCENTERCODE6#
              ,#WORKCENTERCODE7#
              ,#WORKCENTERCODE8#
              ,#WORKCENTERCODE9#
              ,#WORKCENTERCODE10#
              ,#WORKCENTERCODE11#
              ,#WORKCENTERCODE12#
              ,#WORKCENTERCODE13#
              ,#WORKCENTERCODE14#
              ,#WORKCENTERCODE15#
              ,#ROUTINGCODE#
              ,$DAILYQTY$
        ]]>
        <isNotEmpty property="OUTSIDEORDERGUBUN" prepend=",">
               #OUTSIDEORDERGUBUN#
        </isNotEmpty>
        <isNotEmpty property="INSPECTIONYN" prepend=",">
               #INSPECTIONYN#
        </isNotEmpty>
        <isNotEmpty property="CUSTOMERCODEOUT" prepend=",">
               #CUSTOMERCODEOUT#
        </isNotEmpty>
        <isNotEmpty property="FIRSTORDER" prepend=",">
               #FIRSTORDER#
        </isNotEmpty>
        <isNotEmpty property="REMARKS" prepend=",">
              #REMARKS#
        </isNotEmpty>
        <![CDATA[
               ,SYSDATE
               ,#REGISTID#
               ,SYSDATE
               ,#REGISTID#
               )
        ]]>
    </insert>
<!-- 2017.01.04 작업지시 DETAIL  생성  끝-->

 <!-- 2017.01.04 작업지시 DETAIL  수정 -->
    <update id="prod.workD.update" parameterClass="java.util.Map">
        <![CDATA[
        UPDATE CB_WORK_ORDER
           SET LAST_UPDATED_BY  = #UPDATEID#
               , LAST_UPDATE_DATE = SYSDATE
               , WORK_STATUS = #WORKSTATUS#
               , WORK_TYPE = #WORKTYPE#
               , WORK_CENTER_CODE   = #WORKCENTERCODE#
               , WORK_CENTER_CODE2  = #WORKCENTERCODE2#
               , WORK_CENTER_CODE3  = #WORKCENTERCODE3#
               , WORK_CENTER_CODE4  = #WORKCENTERCODE4#
               , WORK_CENTER_CODE5  = #WORKCENTERCODE5#
               , WORK_CENTER_CODE6  = #WORKCENTERCODE6#
               , WORK_CENTER_CODE7  = #WORKCENTERCODE7#
               , WORK_CENTER_CODE8  = #WORKCENTERCODE8#
               , WORK_CENTER_CODE9  = #WORKCENTERCODE9#
               , WORK_CENTER_CODE10 = #WORKCENTERCODE10#
               , WORK_CENTER_CODE11 = #WORKCENTERCODE11#
               , WORK_CENTER_CODE12 = #WORKCENTERCODE12#
               , WORK_CENTER_CODE13 = #WORKCENTERCODE13#
               , WORK_CENTER_CODE14 = #WORKCENTERCODE14#
               , WORK_CENTER_CODE15 = #WORKCENTERCODE15#
               , EQUIPMENT_CODE = #EQUIPMENTCODE#
               , WORK_ORDER_QTY = $WORKORDERQTY$
               , WORK_PLAN_START_DATE = TO_DATE(#WORKPLANSTARTDATE#, 'YYYY-MM-DD')
               , WORK_PLAN_END_DATE = TO_DATE(#WORKPLANENDDATE#, 'YYYY-MM-DD')
               , DAILY_QTY = $DAILYQTY$
        ]]>
        <isNotEmpty property="OUTSIDEORDERGUBUN" prepend=",">
               OUTSIDE_ORDER_GUBUN = #OUTSIDEORDERGUBUN#
        </isNotEmpty>
        <isNotEmpty property="CUSTOMERCODEOUT" prepend=",">
               CUSTOMER_CODE_OUT = #CUSTOMERCODEOUT#
        </isNotEmpty>
        <isEmpty property="CUSTOMERCODEOUT" prepend=",">
               CUSTOMER_CODE_OUT = NULL
        </isEmpty>
        <isNotEmpty property="INSPECTIONYN" prepend=",">
               INSPECTION_YN = #INSPECTIONYN#
        </isNotEmpty>
        <isEmpty property="INSPECTIONYN" prepend=",">
               INSPECTION_YN = NULL
        </isEmpty>
        <isNotEmpty property="FIRSTORDER" prepend=",">
               FIRST_ORDER = #FIRSTORDER#
        </isNotEmpty>
        <isNotEmpty property="REMARKS" prepend=",">
               REMARKS = #REMARKS#
        </isNotEmpty>
        <isEmpty property="REMARKS" prepend=",">
               REMARKS = NULL
        </isEmpty>
        <![CDATA[
        WHERE ORG_ID = #ORGID#
           AND COMPANY_ID = #COMPANYID#
           AND WORK_ORDER_ID = #WORKORDERID#
           AND WORK_ORDER_SEQ = #WORKORDERSEQ#
        ]]>
    </update>
 <!-- 2017.01.04 작업지시 DETAIL 수정 -->

  <!-- 2017.01.4 작업지시 DETAIL 삭제 -->
    <delete id="prod.workD.delete" parameterClass="java.util.Map">
        DELETE FROM CB_WORK_ORDER
         WHERE ORG_ID = #ORGID#
            AND COMPANY_ID = #COMPANYID#
            AND WORK_ORDER_ID = #WORKORDERID#
            AND WORK_ORDER_SEQ = #WORKORDERSEQ#
    </delete>
  <!-- 2017.01.04 작업지시 DETAIL  삭제 -->
        
  <!-- 2016.12.01작업지시 투입확정 -->
    <update id="prod.workD.appr" parameterClass="java.util.Map">
        <![CDATA[
        UPDATE CB_WORK_ORDER
           SET WORK_STATUS  = 'PROGRESS'
                ,LAST_UPDATED_BY  = #UPDATEID#
                ,LAST_UPDATE_DATE = SYSDATE
        WHERE ORG_ID = #ORGID#
           AND COMPANY_ID = #COMPANYID#
           AND WORK_ORDER_ID = #WORKORDERID#
        ]]>
    </update>
  <!-- 2016.12.01작업지시 투입확정 -->
 
   <!-- 2017.01.02 작업지시 투입확정 -->
    <update id="prod.work.appr" parameterClass="java.util.Map">
        <![CDATA[
        UPDATE CB_WORK_ORDER_HEADER
           SET WORK_STATUS  = 'PROGRESS'
                ,LAST_UPDATED_BY  = #UPDATEID#
                ,LAST_UPDATE_DATE = SYSDATE
        WHERE ORG_ID = #ORGID#
           AND COMPANY_ID = #COMPANYID#
           AND WORK_ORDER_ID = #WORKORDERID#
        ]]>
    </update>
  <!-- 2016.12.01작업지시 투입확정 -->

  <!-- 2017.01.23 작업지시 투입취소 -->
    <update id="prod.workD.can" parameterClass="java.util.Map">
        <![CDATA[
        UPDATE CB_WORK_ORDER
           SET WORK_STATUS  = 'CANCEL'
                ,LAST_UPDATED_BY  = #UPDATEID#
                ,LAST_UPDATE_DATE = SYSDATE
        WHERE ORG_ID = #ORGID#
           AND COMPANY_ID = #COMPANYID#
           AND WORK_ORDER_ID = #WORKORDERID#
        ]]>
    </update>
  <!-- 2017.01.23 작업지시 투입취소 -->
 
   <!-- 2017.01.23 작업지시 투입취소 -->
    <update id="prod.work.can" parameterClass="java.util.Map">
        <![CDATA[
        UPDATE CB_WORK_ORDER_HEADER
           SET WORK_STATUS  = 'CANCEL'
                ,LAST_UPDATED_BY  = #UPDATEID#
                ,LAST_UPDATE_DATE = SYSDATE
        WHERE ORG_ID = #ORGID#
           AND COMPANY_ID = #COMPANYID#
           AND WORK_ORDER_ID = #WORKORDERID#
        ]]>
    </update>
  <!-- 2017.01.23 작업지시 투입취소 -->
    
    <delete id="prod.work.process.paint.list.delete" parameterClass="java.util.Map">
        DELETE FROM CB_WORK_ORDER_GROUP
        WHERE ORG_ID = $ORGID$
           AND COMPANY_ID = $COMPANYID$
           AND GROUP_CODE = #GROUPCODE#
    </delete>
    
    <update id="prod.work.process.list.update" parameterClass="java.util.Map">
        <![CDATA[
        UPDATE CB_WORK_ORDER_HEADER
           SET LAST_UPDATED_BY  = #UPDATEID#
               , LAST_UPDATE_DATE = SYSDATE
        ]]>
        <isNotEmpty property="WORKSTATUS" prepend=",">
                  WORK_STATUS = #WORKSTATUS#
        </isNotEmpty>
        <![CDATA[
        WHERE ORG_ID = $ORGID$
           AND COMPANY_ID = $COMPANYID$
           AND WORK_ORDER_ID = #WORKORDERID#
        ]]>
    </update>
    
    <sql id="prod.work.barcode.sql-select">
        SELECT RANK() OVER(ORDER BY SEQ_NO  ) AS RN
                  ,ORG_ID AS ORGID
                  ,COMPANY_ID AS COMPANYID
                  ,WORK_ORDER_ID AS WORKORDERID
                  ,WORK_ORDER_SEQ AS WORKORDERSEQ
                  ,SEQ_NO AS SEQNO
                  ,ITEM_CODE AS ITEMCODE
                  ,ITEM_NAME AS ITEMNAME
                  ,ORDER_NAME AS ORDERNAME
                  ,WORK_ORDER_QTY AS WORKORDERQTY
                  ,PRODUCED_QTY AS PRODUCEDQTY
                  ,QTY AS QTY
                  ,PRINT_DATE AS PRINTDATE
                  ,LOCATION AS LOCATION
                  ,BOXCNT AS BOXCOUNT
                  ,MODEL
                  ,MODELNAME
                  ,CUSTOMERGUBUN
                  ,CUSTOMERGUBUNNAME
        FROM CB_WO_BARCODE_MODIFY_V
    </sql>

    <sql id="prod.work.barcode.sql-where">
         WHERE 1 = 1
         <isNotEmpty property="ORGID" prepend="AND">
            ORG_ID = #ORGID#
         </isNotEmpty>
         <isNotEmpty property="COMPANYID" prepend="AND">
            COMPANY_ID = #COMPANYID#
         </isNotEmpty>
         <isNotEmpty property="WORKORDERID" prepend="AND">
            WORK_ORDER_ID = #WORKORDERID#
         </isNotEmpty>
         <isNotEmpty property="WORKORDERSEQ" prepend="AND">
            WORK_ORDER_SEQ = $WORKORDERSEQ$
         </isNotEmpty>
    </sql>

    <select id="prod.work.barcode.select" parameterClass="java.util.Map"
        resultClass="java.util.HashMap">
        <include refid="prod.work.barcode.sql-select" />
        <include refid="prod.work.barcode.sql-where" />
        ORDER BY SEQ_NO 
    </select>

    <select id="prod.work.barcode.count" parameterClass="java.util.Map"
        resultClass="java.lang.Integer">
        SELECT COUNT(*) FROM (
            <include refid="prod.work.barcode.sql-select" />
            <include refid="prod.work.barcode.sql-where" />
        ) TOT
    </select>
    
    
    <sql id="prod.work.barcode.confirm.find.sql-select">
        SELECT COUNT(SEQ_NO) AS COUNT
          FROM CB_WORK_ORDER_D
    </sql>

    <sql id="prod.work.barcode.confirm.find.sql-where">
         WHERE 1 = 1
           AND CONFIRM_YN = 'N'
         <isNotEmpty property="ORGID" prepend="AND">
            ORG_ID = #ORGID#
         </isNotEmpty>
         <isNotEmpty property="COMPANYID" prepend="AND">
            COMPANY_ID = #COMPANYID#
         </isNotEmpty>
         <isNotEmpty property="WORKORDERID" prepend="AND">
            WORK_ORDER_ID = #WORKORDERID#
         </isNotEmpty>
         <isNotEmpty property="WORKORDERSEQ" prepend="AND">
            WORK_ORDER_SEQ = $WORKORDERSEQ$
         </isNotEmpty>
         <isNotEmpty property="EQUIPMENTCODE" prepend="AND">
            WORK_CENTER_CODE = #EQUIPMENTCODE#
         </isNotEmpty>
         <isNotEmpty property="SEQNO" prepend="AND">
            SEQ_NO = $SEQNO$
         </isNotEmpty>
    </sql>

    <select id="prod.work.barcode.confirm.find.select" parameterClass="java.util.Map"
        resultClass="java.util.HashMap">
        <include refid="prod.work.barcode.confirm.find.sql-select" />
        <include refid="prod.work.barcode.confirm.find.sql-where" />
    </select>
    
    
    <sql id="prod.work.fault.popup.titlename.sql-select">
      SELECT RANK() OVER(ORDER BY SC.ORG_ID, SC.COMPANY_ID, /*TO_NUMBER(SC.REMARKS)*/ TO_NUMBER(SC.ATTRIBUTE1)) AS RN
	            ,SMALL_CODE AS VALUE
				      ,TO_NUMBER(SUBSTR(SMALL_CODE, 3)) AS CODE
				      ,SMALL_NAME AS LABEL
				      ,TO_NUMBER(ATTRIBUTE1) AS SORTNUM
              ,SMALL_CODE AS SMALLCODE
              ,SMALL_NAME AS SMALLNAM
		  FROM CB_SMALL_CODE SC
    </sql>

    <sql id="prod.work.fault.popup.titlename.sql-where">
       WHERE 1=1
         AND SC.BIG_CODE = 'MFG'
         AND SC.MIDDLE_CODE = 'FAULT_TYPE'
         AND SC.USE_YN = 'Y'
         <isNotEmpty property="ORGID" prepend="AND">
            SC.ORG_ID = #ORGID#
         </isNotEmpty>
         <isNotEmpty property="COMPANYID" prepend="AND">
            SC.COMPANY_ID = #COMPANYID#
         </isNotEmpty>
         <isNotEmpty property="OUTTRANSCHK" prepend="AND">
            SC.ATTRIBUTE4 = 'Y'
         </isNotEmpty>
       ORDER BY SC.ORG_ID, SC.COMPANY_ID, /*TO_NUMBER(SC.REMARKS)*/ TO_NUMBER(SC.ATTRIBUTE1)
    </sql>

    <select id="prod.work.fault.popup.titlename.select" parameterClass="java.util.Map"
        resultClass="java.util.HashMap">
        SELECT A.RN, VALUE, CODE, LABEL, SORTNUM
          FROM (
				        <include refid="prod.work.fault.popup.titlename.sql-select" />
				        <include refid="prod.work.fault.popup.titlename.sql-where" />
				        ) A
				        <![CDATA[
				        ,(SELECT LEVEL AS RN
				            FROM DUAL
				          CONNECT BY LEVEL <= 20) TMP
				          ]]>
				 WHERE 1=1
				   AND A.RN(+) = TMP.RN
    </select>

    <select id="prod.work.fault.popup.titlename.count" parameterClass="java.util.Map"
        resultClass="java.lang.Integer">
        SELECT COUNT(*) FROM (
		        SELECT A.RN, VALUE, CODE, LABEL, SORTNUM
		          FROM (
		                <include refid="prod.work.fault.popup.titlename.sql-select" />
		                <include refid="prod.work.fault.popup.titlename.sql-where" />
		                ) A
		                <![CDATA[
		                ,(SELECT LEVEL AS RN
		                    FROM DUAL
		                  CONNECT BY LEVEL <= 20) TMP
		                  ]]>
		         WHERE 1=1
		           AND A.RN(+) = TMP.RN
        ) TOT
    </select>
    
    <select id="prod.work.fault.group.list.select" parameterClass="java.util.Map"
        resultClass="java.util.HashMap">
				SELECT LISTAGG(TO_NUMBER(SUBSTR(VALUE, 3, 2)), ',') WITHIN GROUP(ORDER BY SORTNUM) AS VALUE,
				       LISTAGG(LABEL, ',') WITHIN GROUP(ORDER BY SORTNUM) AS LABEL
           FROM (
          <include refid="prod.work.fault.popup.titlename.sql-select" />
          <include refid="prod.work.fault.popup.titlename.sql-where" />
          ) A
    </select>
    
    <update id="prod.work.fault.popup.list.update" parameterClass="java.util.Map">
        <![CDATA[
        UPDATE CB_WORK_ORDER_FAULT
           SET LAST_UPDATED_BY  = #UPDATEID#
               , LAST_UPDATE_DATE = SYSDATE
        ]]>
        <isNotEmpty property="FAULTDATE" prepend=",">
              FAULT_DATE = TO_DATE(#FAULTDATE#, 'YYYY-MM-DD HH24:MI')
        </isNotEmpty>
        <isEmpty property="FAULTDATE" prepend=",">
              FAULT_DATE = NULL
        </isEmpty>
        <isNotEmpty property="CON1" prepend=",">
              CON1 = $CON1$
        </isNotEmpty>
        <isEmpty property="CON1" prepend=",">
              CON1 = NULL
        </isEmpty>
        <isNotEmpty property="CON2" prepend=",">
              CON2 = $CON2$
        </isNotEmpty>
        <isEmpty property="CON2" prepend=",">
              CON2 = NULL
        </isEmpty>
        <isNotEmpty property="CON3" prepend=",">
              CON3 = $CON3$
        </isNotEmpty>
        <isEmpty property="CON3" prepend=",">
              CON3 = NULL
        </isEmpty>
        <isNotEmpty property="CON4" prepend=",">
              CON4 = $CON4$
        </isNotEmpty>
        <isEmpty property="CON4" prepend=",">
              CON4 = NULL
        </isEmpty>
        <isNotEmpty property="CON5" prepend=",">
              CON5 = $CON5$
        </isNotEmpty>
        <isEmpty property="CON5" prepend=",">
              CON5 = NULL
        </isEmpty>
        <isNotEmpty property="CON6" prepend=",">
              CON6 = $CON6$
        </isNotEmpty>
        <isEmpty property="CON6" prepend=",">
              CON6 = NULL
        </isEmpty>
        <isNotEmpty property="CON7" prepend=",">
              CON7 = $CON7$
        </isNotEmpty>
        <isEmpty property="CON7" prepend=",">
              CON7 = NULL
        </isEmpty>
        <isNotEmpty property="CON8" prepend=",">
              CON8 = $CON8$
        </isNotEmpty>
        <isEmpty property="CON8" prepend=",">
              CON8 = NULL
        </isEmpty>
        <isNotEmpty property="CON9" prepend=",">
              CON9 = $CON9$
        </isNotEmpty>
        <isEmpty property="CON9" prepend=",">
              CON9 = NULL
        </isEmpty>
        <isNotEmpty property="CON10" prepend=",">
              CON10 = $CON10$
        </isNotEmpty>
        <isEmpty property="CON10" prepend=",">
              CON10 = NULL
        </isEmpty>
        <isNotEmpty property="CON11" prepend=",">
              CON11 = $CON11$
        </isNotEmpty>
        <isEmpty property="CON11" prepend=",">
              CON11 = NULL
        </isEmpty>
        <isNotEmpty property="CON12" prepend=",">
              CON12 = $CON12$
        </isNotEmpty>
        <isEmpty property="CON12" prepend=",">
              CON12 = NULL
        </isEmpty>
        <isNotEmpty property="CON13" prepend=",">
              CON13 = $CON13$
        </isNotEmpty>
        <isEmpty property="CON13" prepend=",">
              CON13 = NULL
        </isEmpty>
        <isNotEmpty property="CON14" prepend=",">
              CON14 = $CON14$
        </isNotEmpty>
        <isEmpty property="CON14" prepend=",">
              CON14 = NULL
        </isEmpty>
        <isNotEmpty property="CON15" prepend=",">
              CON15 = $CON15$
        </isNotEmpty>
        <isEmpty property="CON15" prepend=",">
              CON15 = NULL
        </isEmpty>
        <isNotEmpty property="CON16" prepend=",">
              CON16 = $CON16$
        </isNotEmpty>
        <isEmpty property="CON16" prepend=",">
              CON16 = NULL
        </isEmpty>
        <isNotEmpty property="CON17" prepend=",">
              CON17 = $CON17$
        </isNotEmpty>
        <isEmpty property="CON17" prepend=",">
              CON17 = NULL
        </isEmpty>
        <isNotEmpty property="CON18" prepend=",">
              CON18 = $CON18$
        </isNotEmpty>
        <isEmpty property="CON18" prepend=",">
              CON18 = NULL
        </isEmpty>
        <isNotEmpty property="CON19" prepend=",">
              CON19 = $CON19$
        </isNotEmpty>
        <isEmpty property="CON19" prepend=",">
              CON19 = NULL
        </isEmpty>
        <isNotEmpty property="CON20" prepend=",">
              CON20 = $CON20$
        </isNotEmpty>
        <isEmpty property="CON20" prepend=",">
              CON20 = NULL
        </isEmpty>
        <isNotEmpty property="FAULTTYPE" prepend=",">
              FAULT_TYPE = #FAULTTYPE#
        </isNotEmpty>
        <isEmpty property="FAULTTYPE" prepend=",">
              FAULT_TYPE = NULL
        </isEmpty>
        <isNotEmpty property="FAULTQTY" prepend=",">
              FAULT_QTY = $FAULTQTY$
        </isNotEmpty>
        <isEmpty property="FAULTQTY" prepend=",">
              FAULT_QTY = NULL
        </isEmpty>
        <isNotEmpty property="REMARKS" prepend=",">
              REMARKS = #REMARKS#
        </isNotEmpty>
        <isEmpty property="REMARKS" prepend=",">
              REMARKS = NULL
        </isEmpty>
        <![CDATA[
        WHERE 1=1
           AND ORG_ID = $ORGID$
           AND COMPANY_ID = $COMPANYID$
           AND WORK_ORDER_ID = #WORKORDERID#
           AND WORK_ORDER_SEQ = $WORKORDERSEQ$
           AND SEQ_NO = $SEQNO$
        ]]>
    </update>
    
    <sql id="prod.work.order.operate.sql-select">
          SELECT RANK() OVER(ORDER BY WOO.ORG_ID, WOO.COMPANY_ID, WOO.WORK_ORDER_ID, WOO.WORK_ORDER_SEQ, WOO.START_DATE DESC) AS RN 
                  ,WOO.ORG_ID AS ORGID
                  ,WOO.COMPANY_ID AS COMPANYID
                  ,WOO.WORK_ORDER_ID AS WORKORDERID
                  ,WOO.WORK_ORDER_SEQ AS WORKORDERSEQ
                  ,WOO.SEQ_NO AS SEQNO
                  ,WOO.WORK_CENTER_CODE AS WORKCENTERCODE
                  ,(SELECT WC.WORK_CENTER_NAME
                     FROM CB_WORK_CENTER WC
                    WHERE WC.ORG_ID = WOO.ORG_ID
                      AND WC.COMPANY_ID = WOO.COMPANY_ID
                      AND WC.WORK_CENTER_CODE = WOO.WORK_CENTER_CODE) AS WORKCENTERNAME
                  ,TO_CHAR(WOO.START_DATE, 'YYYY-MM-DD HH24:MI') AS STARTDATE
                  ,TO_CHAR(WOO.END_DATE, 'YYYY-MM-DD HH24:MI') AS ENDDATE
                  ,WOO.OPERATE_TYPE AS OPERATETYPE
                  ,(SELECT SC.SMALL_NAME
                      FROM CB_SMALL_CODE SC
                     WHERE SC.ORG_ID = WOO.ORG_ID
                       AND SC.COMPANY_ID = WOO.COMPANY_ID
                       AND SC.BIG_CODE = 'EQ'
                       AND SC.MIDDLE_CODE = 'NONOPER_TYPE'
                       AND SC.SMALL_CODE = WOO.OPERATE_TYPE) AS OPERATETYPENAME
                 
                   ,WOO.OPERATE_TYPE_DETAIL AS OPERATETYPEDETAIL
                   ,(SELECT SC.SMALL_NAME
                      FROM CB_SMALL_CODE SC
                     WHERE SC.ORG_ID = WOO.ORG_ID
                       AND SC.COMPANY_ID = WOO.COMPANY_ID
                       AND SC.BIG_CODE = 'EQ'
                       AND SC.MIDDLE_CODE = 'NONOPER_TYPE_DETAIL'
                       AND SC.SMALL_CODE = WOO.OPERATE_TYPE) AS OPERATETYPEDETAILNAME
                  ,WOO.REMARKS AS REMARKS
                  ,WOO.EMPLOYEE_SEQ AS EMPLOYEESEQ
        FROM CB_WORK_ORDER_OPERATE WOO
   </sql>
   
   <sql id="prod.work.order.operate.sql-where">
      WHERE 1=1
         <isNotEmpty property="ORGID" prepend="AND">
            WOO.ORG_ID = #ORGID#
         </isNotEmpty>
         <isNotEmpty property="COMPANYID" prepend="AND">
            WOO.COMPANY_ID = #COMPANYID#
         </isNotEmpty>
         <isNotEmpty property="WORKORDERID" prepend="AND">
            WOO.WORK_ORDER_ID = #WORKORDERID#
         </isNotEmpty>
         <isNotEmpty property="WORKORDERSEQ" prepend="AND">
            WOO.WORK_ORDER_SEQ = $WORKORDERSEQ$
         </isNotEmpty>
         <isNotEmpty property="WORKCENTERCODE" prepend="AND">
            WOO.WORK_CENTER_CODE = #WORKCENTERCODE#
         </isNotEmpty>
   </sql>
   
   <select id="prod.work.order.operate.select" parameterClass="java.util.Map"
       resultClass="java.util.HashMap">
           <include refid="prod.work.order.operate.sql-select" />
           <include refid="prod.work.order.operate.sql-where" />
   </select>

   <select id="prod.work.order.operate.count" parameterClass="java.util.Map"
       resultClass="java.lang.Integer">
       SELECT COUNT(*) 
        FROM(
           <include refid="prod.work.order.operate.sql-select" />
           <include refid="prod.work.order.operate.sql-where" />
           )
   </select>
    
    <insert id="prod.work.operate.popup.list.insert" parameterClass="java.util.Map">
        <![CDATA[
            INSERT INTO CB_WORK_ORDER_OPERATE
              (ORG_ID
              ,COMPANY_ID
              ,WORK_ORDER_ID
              ,WORK_ORDER_SEQ
              ,SEQ_NO
              ,OPERATE_TYPE
              ,OPERATE_TYPE_DETAIL
              ,START_DATE
              ,END_DATE
              ,WORK_CENTER_CODE
        ]]>
        <isNotEmpty property="EMPLOYEESEQ" prepend=",">
              EMPLOYEE_SEQ
        </isNotEmpty>
        <isNotEmpty property="REMARKS" prepend=",">
              REMARKS
        </isNotEmpty>
        <![CDATA[
              ,CREATED_BY
              ,CREATION_DATE
              ,LAST_UPDATED_BY
              ,LAST_UPDATE_DATE
               )
            VALUES
              ($ORGID$
               ,$COMPANYID$
               ,#WORKORDERID#
               ,$WORKORDERSEQ$
               ,(SELECT NVL(MAX(SEQ_NO),0)+1
                  FROM CB_WORK_ORDER_OPERATE 
                 WHERE ORG_ID = $ORGID$
                    AND COMPANY_ID = $COMPANYID$
                    AND WORK_ORDER_ID = #WORKORDERID#
                    AND WORK_ORDER_SEQ = $WORKORDERSEQ$)
               ,#OPERATETYPE#
               ,#OPERATETYPEDETAIL#
               ,TO_DATE(#STARTDATE#, 'YYYY-MM-DD HH24:MI')
               ,TO_DATE(#ENDDATE#, 'YYYY-MM-DD HH24:MI')
               ,#WORKCENTERCODE#
        ]]>
        <isNotEmpty property="EMPLOYEESEQ" prepend=",">
              $EMPLOYEESEQ$
        </isNotEmpty>
        <isNotEmpty property="REMARKS" prepend=",">
              #REMARKS#
        </isNotEmpty>
        <![CDATA[
               ,#REGISTID#
               ,SYSDATE
               ,#REGISTID#
               ,SYSDATE
               )
        ]]>
    </insert>
    
    <update id="prod.work.operate.popup.list.update" parameterClass="java.util.Map">
        <![CDATA[
        UPDATE CB_WORK_ORDER_OPERATE
           SET LAST_UPDATED_BY  = #UPDATEID#
               , LAST_UPDATE_DATE = SYSDATE
               , WORK_CENTER_CODE = #WORKCENTERCODE#
               , OPERATE_TYPE = #OPERATETYPE#
               , OPERATE_TYPE_DETAIL = #OPERATETYPEDETAIL#
               , START_DATE = TO_DATE(#STARTDATE#, 'YYYY-MM-DD HH24:MI')
               , END_DATE = TO_DATE(#ENDDATE#, 'YYYY-MM-DD HH24:MI')
               , REMARKS = #REMARKS#
        WHERE 1=1
           AND ORG_ID = $ORGID$
           AND COMPANY_ID = $COMPANYID$
           AND WORK_ORDER_ID = #WORKORDERID#
           AND WORK_ORDER_SEQ = $WORKORDERSEQ$
           AND SEQ_NO = $SEQNO$
        ]]>
    </update>
    
    <delete id="prod.work.operate.popup.list.delete" parameterClass="java.util.Map">
        DELETE FROM CB_WORK_ORDER_OPERATE
         WHERE 1=1
           AND ORG_ID = $ORGID$
           AND COMPANY_ID = $COMPANYID$
           AND WORK_ORDER_ID = #WORKORDERID#
           AND WORK_ORDER_SEQ = $WORKORDERSEQ$
           AND SEQ_NO = $SEQNO$
    </delete>
    
    <sql id="prod.work.end.list.sql-select">
        SELECT RANK() OVER(ORDER BY ORG_ID, COMPANY_ID, WORK_ORDER_ID DESC ) AS RN
               ,ORG_ID AS ORGID
               ,COMPANY_ID AS COMPANYID
               ,WORK_ORDER_ID AS WORKORDERID
               ,WORK_STATUS AS WORKSTATUS
               ,WORK_STATUS_NAME AS WORKSTATUSNAME
               ,WORK_ORDER_QTY AS WORKORDERQTY
               ,IMPORT_QTY AS IMPORTQTY
               ,ITEM_CODE AS ITEMCODE
               ,ORDER_NAME AS ORDERNAME
               ,DRAWING_NO AS DRAWINGNO
               ,ITEM_NAME AS ITEMNAME
               ,CAR_TYPE AS CARTYPE
               ,CAR_TYPE_NAME AS CARTYPENAME
               ,MATERIAL_TYPE AS MATERIALTYPE
               ,UOM AS UOM
               ,UOM_NAME AS UOMNAME
			         ,ITEM_STANDARD_DETAIL AS ITEMSTANDARDDETAIL
               ,WORK_START_DATE AS WORKSTARTDATE
               ,WORK_END_DATE AS WORKENDDATE
               ,EXCESSQTYYN
        FROM CB_WORK_ORDER_COMPLETE_V
    </sql>

    <sql id="prod.work.end.list.sql-where">
         WHERE 1 = 1
         <isNotEmpty property="ORGID" prepend="AND">
            ORG_ID = #ORGID#
         </isNotEmpty>
         <isNotEmpty property="COMPANYID" prepend="AND">
            COMPANY_ID = #COMPANYID#
         </isNotEmpty>
         <isNotEmpty property="WORKORDERID" prepend="AND">
            WORK_ORDER_ID = #WORKORDERID#
         </isNotEmpty>
         <isNotEmpty property="WORKSTATUS" prepend="AND">
            WORK_STATUS = #WORKSTATUS#
         </isNotEmpty>
         <isNotEmpty property="WORKTYPE" prepend="AND">
            WORK_TYPE = #WORKTYPE#
         </isNotEmpty>
         <isNotEmpty property="ITEMCODE" prepend="AND">
            ITEM_CODE = #ITEMCODE#
         </isNotEmpty>
         
         <isNotEmpty property="ITEMNAME" prepend="AND">
            ITEM_NAME LIKE '%' || #ITEMNAME# || '%'
         </isNotEmpty>
         <isNotEmpty property="ORDERNAME" prepend="AND">
            ORDER_NAME LIKE '%' || #ORDERNAME# || '%'
         </isNotEmpty>
         <isNotEmpty property="MODELNAME" prepend="AND">
            CAR_TYPE_NAME LIKE '%' || #MODELNAME# || '%'
         </isNotEmpty>
         
         <isNotEmpty property="WORKPLANDATE" prepend="AND">
            TO_DATE(#WORKPLANDATE#,'YYYY-MM-DD') BETWEEN NVL(WORK_PLAN_START_DATE,TO_DATE('2011-01-01','YYYY-MM-DD')) AND NVL(WORK_PLAN_END_DATE,TO_DATE('4999-12-31','YYYY-MM-DD'))
         </isNotEmpty>
         <isNotEmpty property="WORKDATE" prepend="AND">
            TO_DATE(#WORKDATE#,'YYYY-MM-DD') BETWEEN
            NVL(TO_DATE(WORK_START_DATE, 'YYYY-MM-DD HH24:MI'), TO_DATE('2011-01-01','YYYY-MM-DD')) AND
            NVL(TO_DATE(WORK_END_DATE, 'YYYY-MM-DD HH24:MI'), TO_DATE('4999-12-31','YYYY-MM-DD'))
         </isNotEmpty>
         ORDER BY ORG_ID, COMPANY_ID, WORK_ORDER_ID DESC
    </sql>

    <select id="prod.work.end.list.select" parameterClass="java.util.Map"
        resultClass="java.util.HashMap">
        <include refid="prod.work.end.list.sql-select" />
        <include refid="prod.work.end.list.sql-where" />
    </select>

    <select id="prod.work.end.list.count" parameterClass="java.util.Map"
        resultClass="java.lang.Integer">
        SELECT COUNT(*) FROM (
            <include refid="prod.work.end.list.sql-select" />
            <include refid="prod.work.end.list.sql-where" />
        ) TOT
    </select>
    
    <select id="prod.work.end.list.first.select" parameterClass="java.util.Map"
        resultClass="java.util.HashMap">
        SELECT ORGID, COMPANYID, WORKORDERID
          FROM (
        <include refid="prod.work.end.list.sql-select" />
        <include refid="prod.work.end.list.sql-where" />
        )
        WHERE 1=1
          AND RN = 1
    </select>
  
<!--  2017.01.23 작업지시완료마감 디테일 항목 조회 -->
   <sql id="prod.work.endD.sql-select">
        SELECT RANK() OVER(ORDER BY WORKORDERID , WORKORDERSEQ) AS RN
                ,ORGID
                ,COMPANYID
                ,WORKORDERID
                ,WORKORDERSEQ
                ,WORKTYPE
                ,WORKTYPENAME
                ,WORKSTATUS
                ,WORKSTATUSNAME
                ,MODEL
                ,MODELNAME
                ,ITEMCODE
                ,ITEMNAME
                ,ORDERNAME
                ,UOM
                ,UOMNAME
                ,ROUTINGNO
                ,ROUTINGOP
                ,ROUTINGCODE
                ,ROUTINGNAME
                ,WORKORDERQTY
                ,DAILYQTY
                ,WORKCENTERCODE
                ,WORKCENTERNAME
                ,WORKCENTERCODE2
                ,WORKCENTERNAME2
                ,WORKCENTERCODE3
                ,WORKCENTERNAME3
                ,WORKCENTERCODE4
                ,WORKCENTERNAME4
                ,WORKCENTERCODE5
                ,WORKCENTERNAME5
                ,EQUIPMENTCODE
                ,EQUIPMENTNAME
                ,MOLDCODE
                ,MOLDNAME
                ,WORK_PLAN_START_DATE
                ,WORK_PLAN_END_DATE
                ,WORK_START_DATE
                ,WORK_END_DATE
                ,WORKPLANSTARTDATE
                ,WORKPLANENDDATE
                ,WORKSTARTDATE
                ,WORKENDDATE
                ,REMARKS
                ,CREATEDBY
                ,CREATIONDATE
                ,LASTUPDATEDBY
                ,LASTUPDATEDATE
                ,OUTSIDEORDERGUBUN
                ,CUSTOMERCODEOUT
                ,CUSTOMERNAMEOUT
                ,WORKER
                ,PRODUCEDQTY
                ,IMPORTQTY
                ,DEFECTEDQTY
                ,FIRSTORDER
                ,FIRSTORDERNAME
                ,CHANGEEQUIP
                ,CHANGEEQUIPNAME
                ,EXCESSQTYYN1
        FROM CB_WORK_ORDER_LIST_V 
    </sql>

    <sql id="prod.work.endD.sql-where">
         WHERE 1 = 1
         <isNotEmpty property="ORGID" prepend="AND">
            ORGID = #ORGID#
         </isNotEmpty>
         <isNotEmpty property="COMPANYID" prepend="AND">
            COMPANYID = #COMPANYID#
         </isNotEmpty>
         <isNotEmpty property="WORKORDERID" prepend="AND">
            WORKORDERID = #WORKORDERID#
         </isNotEmpty>
         ORDER BY WORKORDERSEQ
    </sql>

    <select id="prod.work.endD.select" parameterClass="java.util.Map"
        resultClass="java.util.HashMap">
        <include refid="prod.work.endD.sql-select" />
        <include refid="prod.work.endD.sql-where" />
    </select>

    <select id="prod.work.endD.count" parameterClass="java.util.Map"
        resultClass="java.lang.Integer">
        SELECT COUNT(*) FROM (
            <include refid="prod.work.endD.sql-select" />
            <include refid="prod.work.endD.sql-where" />
        ) TOT
    </select>
    
    <!-- 공정불량 등록 HISTORY 2017-07-19 -->
    <insert id="prod.work.fault.history.insert" parameterClass="java.util.Map">
        <![CDATA[
            INSERT INTO CB_WORK_ORDER_FAULT_HISTORY
              (ORG_ID
              ,COMPANY_ID
              ,WORK_ORDER_ID
              ,WORK_ORDER_SEQ
              ,SEQ_NO
        ]]>
        <isNotEmpty property="INPUTCON1" prepend=",">
              CON1
        </isNotEmpty>
        <isNotEmpty property="INPUTCON2" prepend=",">
              CON2
        </isNotEmpty>
        <isNotEmpty property="INPUTCON3" prepend=",">
              CON3
        </isNotEmpty>
        <isNotEmpty property="INPUTCON4" prepend=",">
              CON4
        </isNotEmpty>
        <isNotEmpty property="INPUTCON5" prepend=",">
              CON5
        </isNotEmpty>
        <isNotEmpty property="INPUTCON6" prepend=",">
              CON6
        </isNotEmpty>
        <isNotEmpty property="INPUTCON7" prepend=",">
              CON7
        </isNotEmpty>
        <isNotEmpty property="INPUTCON8" prepend=",">
              CON8
        </isNotEmpty>
        <isNotEmpty property="INPUTCON9" prepend=",">
              CON9
        </isNotEmpty>
        <isNotEmpty property="INPUTCON10" prepend=",">
              CON10
        </isNotEmpty>
        <isNotEmpty property="INPUTCON11" prepend=",">
              CON11
        </isNotEmpty>
        <isNotEmpty property="INPUTCON12" prepend=",">
              CON12
        </isNotEmpty>
        <isNotEmpty property="INPUTCON13" prepend=",">
              CON13
        </isNotEmpty>
        <isNotEmpty property="INPUTCON14" prepend=",">
              CON14
        </isNotEmpty>
        <isNotEmpty property="INPUTCON15" prepend=",">
              CON15
        </isNotEmpty>
        <isNotEmpty property="INPUTCON16" prepend=",">
              CON16
        </isNotEmpty>
        <isNotEmpty property="INPUTCON17" prepend=",">
              CON17
        </isNotEmpty>
        <isNotEmpty property="INPUTCON18" prepend=",">
              CON18
        </isNotEmpty>
        <isNotEmpty property="INPUTCON19" prepend=",">
              CON19
        </isNotEmpty>
        <isNotEmpty property="INPUTCON20" prepend=",">
              CON20
        </isNotEmpty>
        <isNotEmpty property="INPUTCON21" prepend=",">
              CON21
        </isNotEmpty>
        <isNotEmpty property="INPUTCON22" prepend=",">
              CON22
        </isNotEmpty>
        <isNotEmpty property="INPUTCON23" prepend=",">
              CON23
        </isNotEmpty>
        <isNotEmpty property="INPUTCON24" prepend=",">
              CON24
        </isNotEmpty>
        <isNotEmpty property="INPUTCON25" prepend=",">
              CON25
        </isNotEmpty>
        <isNotEmpty property="INPUTCON26" prepend=",">
              CON26
        </isNotEmpty>
        <isNotEmpty property="INPUTCON27" prepend=",">
              CON27
        </isNotEmpty>
        <isNotEmpty property="INPUTCON28" prepend=",">
              CON28
        </isNotEmpty>
        <isNotEmpty property="INPUTCON29" prepend=",">
              CON29
        </isNotEmpty>
        <isNotEmpty property="INPUTCON30" prepend=",">
              CON30
        </isNotEmpty>
        <isNotEmpty property="INPUTCON31" prepend=",">
              CON31
        </isNotEmpty>
        <isNotEmpty property="INPUTCON32" prepend=",">
              CON32
        </isNotEmpty>
        <isNotEmpty property="INPUTCON33" prepend=",">
              CON33
        </isNotEmpty>
        <isNotEmpty property="INPUTCON34" prepend=",">
              CON34
        </isNotEmpty>
        <isNotEmpty property="INPUTCON35" prepend=",">
              CON35
        </isNotEmpty>
        <isNotEmpty property="INPUTCON36" prepend=",">
              CON36
        </isNotEmpty>
        <isNotEmpty property="INPUTCON37" prepend=",">
              CON37
        </isNotEmpty>
        <isNotEmpty property="INPUTCON38" prepend=",">
              CON38
        </isNotEmpty>
        <isNotEmpty property="INPUTCON39" prepend=",">
              CON39
        </isNotEmpty>
        <isNotEmpty property="INPUTCON40" prepend=",">
              CON40
        </isNotEmpty>
        <isNotEmpty property="REMARKS" prepend=",">
               REMARKS
        </isNotEmpty>
        <![CDATA[
               ,FAULT_DATE
               ,CREATION_DATE
               ,CREATED_BY
               ,LAST_UPDATE_DATE
               ,LAST_UPDATED_BY
               )
            VALUES
              ($ORGID$
               ,$COMPANYID$
               ,#WORKORDERID#
               ,$WORKORDERSEQ$
               ,$SEQNO$
        ]]>
        
        <isNotEmpty property="INPUTCON1" prepend=",">
               $INPUTCON1$
        </isNotEmpty>
        <isNotEmpty property="INPUTCON2" prepend=",">
               $INPUTCON2$
        </isNotEmpty>
        <isNotEmpty property="INPUTCON3" prepend=",">
               $INPUTCON3$
        </isNotEmpty>
        <isNotEmpty property="INPUTCON4" prepend=",">
               $INPUTCON4$
        </isNotEmpty>
        <isNotEmpty property="INPUTCON5" prepend=",">
               $INPUTCON5$
        </isNotEmpty>
        <isNotEmpty property="INPUTCON6" prepend=",">
               $INPUTCON6$
        </isNotEmpty>
        <isNotEmpty property="INPUTCON7" prepend=",">
               $INPUTCON7$
        </isNotEmpty>
        <isNotEmpty property="INPUTCON8" prepend=",">
               $INPUTCON8$
        </isNotEmpty>
        <isNotEmpty property="INPUTCON9" prepend=",">
               $INPUTCON9$
        </isNotEmpty>
        <isNotEmpty property="INPUTCON10" prepend=",">
               $INPUTCON10$
        </isNotEmpty>
        <isNotEmpty property="INPUTCON11" prepend=",">
               $INPUTCON11$
        </isNotEmpty>
        <isNotEmpty property="INPUTCON12" prepend=",">
               $INPUTCON12$
        </isNotEmpty>
        <isNotEmpty property="INPUTCON13" prepend=",">
               $INPUTCON13$
        </isNotEmpty>
        <isNotEmpty property="INPUTCON14" prepend=",">
               $INPUTCON14$
        </isNotEmpty>
        <isNotEmpty property="INPUTCON15" prepend=",">
               $INPUTCON15$
        </isNotEmpty>
        <isNotEmpty property="INPUTCON16" prepend=",">
               $INPUTCON16$
        </isNotEmpty>
        <isNotEmpty property="INPUTCON17" prepend=",">
               $INPUTCON17$
        </isNotEmpty>
        <isNotEmpty property="INPUTCON18" prepend=",">
               $INPUTCON18$
        </isNotEmpty>
        <isNotEmpty property="INPUTCON19" prepend=",">
               $INPUTCON19$
        </isNotEmpty>
        <isNotEmpty property="INPUTCON20" prepend=",">
               $INPUTCON20$
        </isNotEmpty>
        <isNotEmpty property="INPUTCON21" prepend=",">
               $INPUTCON21$
        </isNotEmpty>
        <isNotEmpty property="INPUTCON22" prepend=",">
               $INPUTCON22$
        </isNotEmpty>
        <isNotEmpty property="INPUTCON23" prepend=",">
               $INPUTCON23$
        </isNotEmpty>
        <isNotEmpty property="INPUTCON24" prepend=",">
               $INPUTCON24$
        </isNotEmpty>
        <isNotEmpty property="INPUTCON25" prepend=",">
               $INPUTCON25$
        </isNotEmpty>
        <isNotEmpty property="INPUTCON26" prepend=",">
               $INPUTCON26$
        </isNotEmpty>
        <isNotEmpty property="INPUTCON27" prepend=",">
               $INPUTCON27$
        </isNotEmpty>
        <isNotEmpty property="INPUTCON28" prepend=",">
               $INPUTCON28$
        </isNotEmpty>
        <isNotEmpty property="INPUTCON29" prepend=",">
               $INPUTCON29$
        </isNotEmpty>
        <isNotEmpty property="INPUTCON30" prepend=",">
               $INPUTCON30$
        </isNotEmpty>
        <isNotEmpty property="INPUTCON31" prepend=",">
               $INPUTCON31$
        </isNotEmpty>
        <isNotEmpty property="INPUTCON32" prepend=",">
               $INPUTCON32$
        </isNotEmpty>
        <isNotEmpty property="INPUTCON33" prepend=",">
               $INPUTCON33$
        </isNotEmpty>
        <isNotEmpty property="INPUTCON34" prepend=",">
               $INPUTCON34$
        </isNotEmpty>
        <isNotEmpty property="INPUTCON35" prepend=",">
               $INPUTCON35$
        </isNotEmpty>
        <isNotEmpty property="INPUTCON36" prepend=",">
               $INPUTCON36$
        </isNotEmpty>
        <isNotEmpty property="INPUTCON37" prepend=",">
               $INPUTCON37$
        </isNotEmpty>
        <isNotEmpty property="INPUTCON38" prepend=",">
               $INPUTCON38$
        </isNotEmpty>
        <isNotEmpty property="INPUTCON39" prepend=",">
               $INPUTCON39$
        </isNotEmpty>
        <isNotEmpty property="INPUTCON40" prepend=",">
               $INPUTCON40$
        </isNotEmpty>
        <isNotEmpty property="REMARKS" prepend=",">
               #REMARKS#
        </isNotEmpty>
        <![CDATA[
               ,SYSDATE
               ,SYSDATE
               ,#REGISTID#
               ,SYSDATE
               ,#REGISTID#
               )
        ]]>
    </insert>
    <!-- 생산실적 및 불량유형 등록 끝 -->
    
    <!-- 초중종 구분 가져오기 시작 -->
    <sql id="prod.work.fmltype.find.sql-select">
        SELECT CB_MFG_PKG.CB_FML_TYPE_FIND_CHECK(ORG_ID
                                                                 ,COMPANY_ID
                                                                 ,WORK_ORDER_ID
                                                                 ,WORK_ORDER_SEQ
                                                                 ,CHECK_BIG) AS FMLTYPE
          FROM (SELECT $ORGID$ AS ORG_ID
                           ,$COMPANYID$ AS COMPANY_ID
                           ,#WORKORDERID# AS WORK_ORDER_ID
                           ,$WORKORDERSEQ$ AS WORK_ORDER_SEQ
                           ,#CHECKBIG# AS CHECK_BIG
                      FROM DUAL) TMP
    </sql>
    
    <sql id="prod.work.fmltype.find.sql-where">
       WHERE 1 = 1
    </sql>
    
    <select id="prod.work.fmltype.find.select" parameterClass="java.util.Map"
        resultClass="java.util.HashMap">
        SELECT FMLTYPE
          FROM (
        <include refid="prod.work.fmltype.find.sql-select" />
        <include refid="prod.work.fmltype.find.sql-where" />
        )
        WHERE 1=1
    </select>

    <select id="prod.work.fmltype.find.count" parameterClass="java.util.Map"
        resultClass="java.lang.Integer">
        SELECT COUNT(*) FROM (
        <include refid="prod.work.fmltype.find.sql-select" />
        <include refid="prod.work.fmltype.find.sql-where" />
        ) TOT
    </select>
    <!-- 초중종 구분 가져오기 끝 -->
    
    <!-- 초중종 품목, 공정  가져오기 시작 -->
    <sql id="prod.work.item.routing.find.sql-select">
        SELECT WO.ITEM_CODE AS ITEMCODE
                ,IM.CUSTOMER_NAME AS CUSTOMERNAME
                ,IM.MODEL_NAME AS CARTYPENAME
                ,IM.ORDER_NAME AS ORDERNAME
                ,IM.ITEM_NAME AS ITEMNAME
                ,IM.ITEM_STANDARD_DETAIL AS ITEMSTANDARDDETAIL
                ,WO.ROUTING_CODE AS ROUTINGID
                ,RC.ROUTING_OP AS ROUTINGOP
                ,(SELECT SC.SMALL_NAME
                   FROM CB_SMALL_CODE SC
                 WHERE SC.ORG_ID = RC.ORG_ID
                    AND SC.COMPANY_ID = RC.COMPANY_ID
                    AND SC.BIG_CODE = 'MFG'
                    AND SC.MIDDLE_CODE = 'ROUTING_NAME'
                    AND SC.SMALL_CODE = RC.ROUTING_NO) AS ROUTINGNAME
                ,WO.EQUIPMENT_CODE AS EQUIPMENTCODE
                ,EM.EQUIPMENT_NAME AS EQUIPMENTNAME
                ,EM.WORK_CENTER_CODE AS WORKCENTERCODE
                ,WO.WORK_ORDER_QTY AS WORKORDERQTY
					       ,(SELECT FCM.CHECK_START_TIME
					          FROM CB_FML_CHECK_MASTER FCM
					         WHERE FCM.ORG_ID = WO.ORG_ID
					           AND FCM.COMPANY_ID = WO.COMPANY_ID
					           AND FCM.WORK_ORDER_ID = WO.WORK_ORDER_ID
					           AND FCM.WORK_ORDER_SEQ = WO.WORK_ORDER_SEQ
                     AND FCM.FML_ID = #FMLID#
					           ) AS CHECKSTARTTIME
                 ,(SELECT FCM.CHECK_TIME
                    FROM CB_FML_CHECK_MASTER FCM
                   WHERE FCM.ORG_ID = WO.ORG_ID
                     AND FCM.COMPANY_ID = WO.COMPANY_ID
                     AND FCM.WORK_ORDER_ID = WO.WORK_ORDER_ID
                     AND FCM.WORK_ORDER_SEQ = WO.WORK_ORDER_SEQ
                     AND FCM.FML_ID = #FMLID#
                     ) AS CHECKENDTIME
                     
                 ,(SELECT FCM.STANDARD_START_TIME
                    FROM CB_FML_CHECK_MASTER FCM
                   WHERE FCM.ORG_ID = WO.ORG_ID
                     AND FCM.COMPANY_ID = WO.COMPANY_ID
                     AND FCM.WORK_ORDER_ID = WO.WORK_ORDER_ID
                     AND FCM.WORK_ORDER_SEQ = WO.WORK_ORDER_SEQ
                     AND FCM.FML_ID = #FMLID#
                     ) AS STANDARDSTARTTIME
                 ,(SELECT FCM.STANDARD_END_TIME
                    FROM CB_FML_CHECK_MASTER FCM
                   WHERE FCM.ORG_ID = WO.ORG_ID
                     AND FCM.COMPANY_ID = WO.COMPANY_ID
                     AND FCM.WORK_ORDER_ID = WO.WORK_ORDER_ID
                     AND FCM.WORK_ORDER_SEQ = WO.WORK_ORDER_SEQ
                     AND FCM.FML_ID = #FMLID#
                     ) AS STANDARDENDTIME
                ,NVL(RC.SETUP_TIME, 0) + NVL(RC.CYCLE_TIME, 0) AS ROUTINGTIME
                ,WO.LOT_NO_VISUAL AS LOTNOVISUAL
                 ,(SELECT FCM.PERSON_ID
                    FROM CB_FML_CHECK_MASTER FCM
                   WHERE FCM.ORG_ID = WO.ORG_ID
                     AND FCM.COMPANY_ID = WO.COMPANY_ID
                     AND FCM.WORK_ORDER_ID = WO.WORK_ORDER_ID
                     AND FCM.WORK_ORDER_SEQ = WO.WORK_ORDER_SEQ
                     AND FCM.FML_ID = #FMLID#
                     ) AS PERSONID
                 ,(SELECT (SELECT HM.KR_NAME
                               FROM CB_HUMANRESOURCE_MANAGER HM
                             WHERE HM.EMPLOYEE_NUMBER = FCM.PERSON_ID)
                    FROM CB_FML_CHECK_MASTER FCM
                   WHERE FCM.ORG_ID = WO.ORG_ID
                     AND FCM.COMPANY_ID = WO.COMPANY_ID
                     AND FCM.WORK_ORDER_ID = WO.WORK_ORDER_ID
                     AND FCM.WORK_ORDER_SEQ = WO.WORK_ORDER_SEQ
                     AND FCM.FML_ID = #FMLID#
                     ) AS KRNAME
        FROM CB_WORK_ORDER WO
                ,CB_ITEM_MASTER_V IM
                ,CB_ROUTING_CONTROL RC
                ,CB_EQUIPMENT_MASTER EM
    </sql>
    
    <sql id="prod.work.item.routing.find.sql-where">
       WHERE WO.ORG_ID = IM.ORG_ID
           AND WO.COMPANY_ID = IM.COMPANY_ID
           AND WO.ITEM_CODE = IM.ITEM_CODE
           AND WO.ORG_ID = RC.ORG_ID
           AND WO.COMPANY_ID = RC.COMPANY_ID
           AND WO.ROUTING_CODE = RC.ROUTING_ID
           AND WO.ORG_ID = EM.ORG_ID
           AND WO.COMPANY_ID = EM.COMPANY_ID
           AND WO.EQUIPMENT_CODE = EM.EQUIPMENT_CODE
           AND EM.USE_YN = 'Y'
        <isNotEmpty property="ORGID" prepend="AND">
            WO.ORG_ID = $ORGID$
        </isNotEmpty>
        <isNotEmpty property="COMPANYID" prepend="AND">
            WO.COMPANY_ID = $COMPANYID$
        </isNotEmpty>
        <isNotEmpty property="WORKORDERID" prepend="AND">
            WO.WORK_ORDER_ID = #WORKORDERID#
        </isNotEmpty>
        <isNotEmpty property="WORKORDERSEQ" prepend="AND">
            WO.WORK_ORDER_SEQ = $WORKORDERSEQ$
        </isNotEmpty>
        <isNotEmpty property="orgid" prepend="AND">
            WO.ORG_ID = $orgid$
        </isNotEmpty>
        <isNotEmpty property="companyid" prepend="AND">
            WO.COMPANY_ID = $companyid$
        </isNotEmpty>
        <isNotEmpty property="workorderid" prepend="AND">
            WO.WORK_ORDER_ID = #workorderid#
        </isNotEmpty>
        <isNotEmpty property="workorderseq" prepend="AND">
            WO.WORK_ORDER_SEQ = $workorderseq$
        </isNotEmpty>
    </sql>
    
    <select id="prod.work.item.routing.find.select" parameterClass="java.util.Map"
        resultClass="java.util.HashMap">
        <include refid="prod.work.item.routing.find.sql-select" />
        <include refid="prod.work.item.routing.find.sql-where" />
    </select>
    <!-- 초중종 품목, 공정 가져오기 끝 -->
    
    <!-- 초중종 조회 시작 -->
    <sql id="prod.work.fml.list.sql-select">
        SELECT RANK() OVER(ORDER BY FD.ORG_ID, FD.COMPANY_ID, FM.CHECK_BIG, (SELECT RC.ROUTING_OP
                                                                                                         FROM CB_ROUTING_CONTROL RC
                                                                                                        WHERE RC.ORG_ID = CM.ORG_ID
                                                                                                          AND RC.COMPANY_ID = CM.COMPANY_ID
                                                                                                          AND RC.ROUTING_ID = CM.ROUTING_ID), CM.ORDER_NO) AS RN
                ,FD.ORG_ID AS ORGID
                ,FD.COMPANY_ID AS COMPANYID
                ,FD.FML_ID AS FMLID
                ,FD.ORDER_NO AS ORDERNO
                ,FD.CHECK_LIST_ID AS CHECKLISTID
                ,FD.WORK_ORDER_ID AS WORKORDERID
                ,FD.WORK_ORDER_SEQ AS WORKORDERSEQ
                ,(SELECT WOH.WORK_STATUS
                   FROM CB_WORK_ORDER_HEADER WOH
                          ,CB_WORK_ORDER WO
                  WHERE WOH.ORG_ID = WO.ORG_ID
                      AND WOH.COMPANY_ID = WO.COMPANY_ID
                      AND WOH.WORK_ORDER_ID = WO.WORK_ORDER_ID
                      AND WO.ORG_ID = FD.ORG_ID
                      AND WO.COMPANY_ID = FD.COMPANY_ID
                      AND WO.WORK_ORDER_ID = FD.WORK_ORDER_ID
                      AND WO.WORK_ORDER_SEQ = FD.WORK_ORDER_SEQ) AS WORKSTATUS
                ,FD.ITEM_CODE AS ITEMCODE
                ,FM.CHECK_BIG AS CHECKBIG
                ,FM.FML_TYPE AS FMLTYPE
                ,(SELECT SC.SMALL_NAME
                    FROM CB_SMALL_CODE SC
                   WHERE SC.ORG_ID = FD.ORG_ID
                     AND SC.COMPANY_ID = FD.COMPANY_ID
                     AND SC.BIG_CODE = 'QM'
                     AND SC.MIDDLE_CODE = 'FML_DIVISION'
                     AND SC.SMALL_CODE = FM.FML_TYPE) AS FMLTYPENAME
                ,CM.CHECK_MIDDLE AS CHECKMIDDLE
                ,CM.CHECK_SMALL AS CHECKSMALL
                ,(SELECT CS.SMALL_NAME
                    FROM CB_CHECK_SMALL_CODE CS
                   WHERE CS.ORG_ID = CM.ORG_ID
                     AND CS.COMPANY_ID = CM.COMPANY_ID
                     AND CS.BIG_CODE = CM.CHECK_BIG
                     AND CS.MIDDLE_CODE = CM.CHECK_MIDDLE
                     AND CS.SMALL_CODE = CM.CHECK_SMALL) AS CHECKSMALLNAME
                ,CM.SPECIAL_CHECK AS SPECIALCHECK
                ,(SELECT SC.SMALL_NAME
                    FROM CB_SMALL_CODE SC
                   WHERE SC.ORG_ID = CM.ORG_ID
                     AND SC.COMPANY_ID = CM.COMPANY_ID
                     AND SC.BIG_CODE = 'QM'
                     AND SC.MIDDLE_CODE = 'SPECIAL_CHECK'
                     AND SC.SMALL_CODE = CM.SPECIAL_CHECK) AS SPECIALCHECKNAME
                ,CM.CHECK_STANDARD AS CHECKSTANDARD
                ,CM.STANDARD_VALUE AS STANDARDVALUE
                ,CM.MAX_VALUE AS MAXVALUE
                ,CM.MIN_VALUE AS MINVALUE
					      ,DECODE(CM.CHECK_INTERVAL
					             ,NULL, ((NVL(CM.MAX_VALUE, 0) - NVL(CM.MIN_VALUE, 0)) / 10)
					             ,CM.CHECK_INTERVAL) AS CHECKINTERVAL
					      ,DECODE(CM.INTERVAL_CNT
					             ,NULL, 10
					             ,0, 10
					             ,CM.INTERVAL_CNT) AS INTERVALCNT
                ,DECODE(FD.CHECK_QTY, NULL, CM.CHECK_QTY, 0, CM.CHECK_QTY, FD.CHECK_QTY) AS CHECKQTY
                ,CM.CHECK_METHOD_TYPE AS CHECKMETHODTYPE
                ,(SELECT CC.SMALL_NAME
                    FROM CB_SMALL_CODE CC
                   WHERE CC.ORG_ID = CM.ORG_ID
                     AND CC.COMPANY_ID = CM.COMPANY_ID
                     AND CC.BIG_CODE = 'QM'
                     AND CC.MIDDLE_CODE = 'CHECK_METHOD_TYPE'
                     AND CC.SMALL_CODE = CM.CHECK_METHOD_TYPE) AS CHECKMETHODTYPENAME
                ,FD.CHECK_RESULT1 AS CHECKRESULT1
                ,FD.CHECK_RESULT2 AS CHECKRESULT2
                ,FD.CHECK_RESULT3 AS CHECKRESULT3
                ,FD.CHECK_RESULT4 AS CHECKRESULT4
                ,FD.CHECK_RESULT5 AS CHECKRESULT5
                ,FD.CHECK_RESULT6 AS CHECKRESULT6
                ,FD.CHECK_RESULT7 AS CHECKRESULT7
                ,FD.CHECK_RESULT8 AS CHECKRESULT8
                ,FD.CHECK_RESULT9 AS CHECKRESULT9
                ,FD.CHECK_RESULT10 AS CHECKRESULT10
                ,FD.CHECK_RESULT11 AS CHECKRESULT11
                ,FD.CHECK_RESULT12 AS CHECKRESULT12
                ,FD.CHECK_RESULT13 AS CHECKRESULT13
                ,FD.CHECK_RESULT14 AS CHECKRESULT14
                ,FD.CHECK_RESULT15 AS CHECKRESULT15
                ,FD.CHECK_RESULT16 AS CHECKRESULT16
                ,FD.CHECK_RESULT17 AS CHECKRESULT17
                ,FD.CHECK_RESULT18 AS CHECKRESULT18
                ,FD.CHECK_RESULT19 AS CHECKRESULT19
                ,FD.CHECK_RESULT20 AS CHECKRESULT20
                ,FD.CHECK_RESULT21 AS CHECKRESULT21
                ,FD.CHECK_RESULT22 AS CHECKRESULT22
                ,FD.CHECK_RESULT23 AS CHECKRESULT23
                ,FD.CHECK_RESULT24 AS CHECKRESULT24
                ,FD.CHECK_RESULT25 AS CHECKRESULT25
                ,FD.CHECK_RESULT26 AS CHECKRESULT26
                ,FD.CHECK_RESULT27 AS CHECKRESULT27
                ,FD.CHECK_RESULT28 AS CHECKRESULT28
                ,FD.CHECK_RESULT29 AS CHECKRESULT29
                ,FD.CHECK_RESULT30 AS CHECKRESULT30
                ,FD.CHECK_RESULT31 AS CHECKRESULT31
                ,FD.CHECK_RESULT32 AS CHECKRESULT32
                ,FD.CHECK_RESULT33 AS CHECKRESULT33
                ,FD.CHECK_RESULT34 AS CHECKRESULT34
                ,FD.CHECK_RESULT35 AS CHECKRESULT35
                ,FD.CHECK_RESULT36 AS CHECKRESULT36
                ,FD.CHECK_RESULT37 AS CHECKRESULT37
                ,FD.CHECK_RESULT38 AS CHECKRESULT38
                ,FD.CHECK_RESULT39 AS CHECKRESULT39
                ,FD.CHECK_RESULT40 AS CHECKRESULT40
                ,FD.CHECK_RESULT41 AS CHECKRESULT41
                ,FD.CHECK_RESULT42 AS CHECKRESULT42
                ,FD.CHECK_RESULT43 AS CHECKRESULT43
                ,FD.CHECK_RESULT44 AS CHECKRESULT44
                ,FD.CHECK_RESULT45 AS CHECKRESULT45
                ,FD.CHECK_RESULT46 AS CHECKRESULT46
                ,FD.CHECK_RESULT47 AS CHECKRESULT47
                ,FD.CHECK_RESULT48 AS CHECKRESULT48
                ,FD.CHECK_RESULT49 AS CHECKRESULT49
                ,FD.CHECK_RESULT50 AS CHECKRESULT50
                ,TO_CHAR(FD.CHECK_TIME1, 'YYYY-MM-DD HH24:MI') AS CHECKTIME1
                ,TO_CHAR(FD.CHECK_TIME2, 'YYYY-MM-DD HH24:MI') AS CHECKTIME2
                ,TO_CHAR(FD.CHECK_TIME3, 'YYYY-MM-DD HH24:MI') AS CHECKTIME3
                ,TO_CHAR(FD.CHECK_TIME4, 'YYYY-MM-DD HH24:MI') AS CHECKTIME4
                ,TO_CHAR(FD.CHECK_TIME5, 'YYYY-MM-DD HH24:MI') AS CHECKTIME5
                ,TO_CHAR(FD.CHECK_TIME6, 'YYYY-MM-DD HH24:MI') AS CHECKTIME6
                ,TO_CHAR(FD.CHECK_TIME7, 'YYYY-MM-DD HH24:MI') AS CHECKTIME7
                ,TO_CHAR(FD.CHECK_TIME8, 'YYYY-MM-DD HH24:MI') AS CHECKTIME8
                ,TO_CHAR(FD.CHECK_TIME9, 'YYYY-MM-DD HH24:MI') AS CHECKTIME9
                ,TO_CHAR(FD.CHECK_TIME10, 'YYYY-MM-DD HH24:MI') AS CHECKTIME10
                ,TO_CHAR(FD.CHECK_TIME11, 'YYYY-MM-DD HH24:MI') AS CHECKTIME11
                ,TO_CHAR(FD.CHECK_TIME12, 'YYYY-MM-DD HH24:MI') AS CHECKTIME12
                ,TO_CHAR(FD.CHECK_TIME13, 'YYYY-MM-DD HH24:MI') AS CHECKTIME13
                ,TO_CHAR(FD.CHECK_TIME14, 'YYYY-MM-DD HH24:MI') AS CHECKTIME14
                ,TO_CHAR(FD.CHECK_TIME15, 'YYYY-MM-DD HH24:MI') AS CHECKTIME15
                ,TO_CHAR(FD.CHECK_TIME16, 'YYYY-MM-DD HH24:MI') AS CHECKTIME16
                ,TO_CHAR(FD.CHECK_TIME17, 'YYYY-MM-DD HH24:MI') AS CHECKTIME17
                ,TO_CHAR(FD.CHECK_TIME18, 'YYYY-MM-DD HH24:MI') AS CHECKTIME18
                ,TO_CHAR(FD.CHECK_TIME19, 'YYYY-MM-DD HH24:MI') AS CHECKTIME19
                ,TO_CHAR(FD.CHECK_TIME20, 'YYYY-MM-DD HH24:MI') AS CHECKTIME20
                ,TO_CHAR(FD.CHECK_TIME21, 'YYYY-MM-DD HH24:MI') AS CHECKTIME21
                ,TO_CHAR(FD.CHECK_TIME22, 'YYYY-MM-DD HH24:MI') AS CHECKTIME22
                ,TO_CHAR(FD.CHECK_TIME23, 'YYYY-MM-DD HH24:MI') AS CHECKTIME23
                ,TO_CHAR(FD.CHECK_TIME24, 'YYYY-MM-DD HH24:MI') AS CHECKTIME24
                ,TO_CHAR(FD.CHECK_TIME25, 'YYYY-MM-DD HH24:MI') AS CHECKTIME25
                ,TO_CHAR(FD.CHECK_TIME26, 'YYYY-MM-DD HH24:MI') AS CHECKTIME26
                ,TO_CHAR(FD.CHECK_TIME27, 'YYYY-MM-DD HH24:MI') AS CHECKTIME27
                ,TO_CHAR(FD.CHECK_TIME28, 'YYYY-MM-DD HH24:MI') AS CHECKTIME28
                ,TO_CHAR(FD.CHECK_TIME29, 'YYYY-MM-DD HH24:MI') AS CHECKTIME29
                ,TO_CHAR(FD.CHECK_TIME30, 'YYYY-MM-DD HH24:MI') AS CHECKTIME30
                ,TO_CHAR(FD.CHECK_TIME31, 'YYYY-MM-DD HH24:MI') AS CHECKTIME31
                ,TO_CHAR(FD.CHECK_TIME32, 'YYYY-MM-DD HH24:MI') AS CHECKTIME32
                ,TO_CHAR(FD.CHECK_TIME33, 'YYYY-MM-DD HH24:MI') AS CHECKTIME33
                ,TO_CHAR(FD.CHECK_TIME34, 'YYYY-MM-DD HH24:MI') AS CHECKTIME34
                ,TO_CHAR(FD.CHECK_TIME35, 'YYYY-MM-DD HH24:MI') AS CHECKTIME35
                ,TO_CHAR(FD.CHECK_TIME36, 'YYYY-MM-DD HH24:MI') AS CHECKTIME36
                ,TO_CHAR(FD.CHECK_TIME37, 'YYYY-MM-DD HH24:MI') AS CHECKTIME37
                ,TO_CHAR(FD.CHECK_TIME38, 'YYYY-MM-DD HH24:MI') AS CHECKTIME38
                ,TO_CHAR(FD.CHECK_TIME39, 'YYYY-MM-DD HH24:MI') AS CHECKTIME39
                ,TO_CHAR(FD.CHECK_TIME40, 'YYYY-MM-DD HH24:MI') AS CHECKTIME40
                ,TO_CHAR(FD.CHECK_TIME41, 'YYYY-MM-DD HH24:MI') AS CHECKTIME41
                ,TO_CHAR(FD.CHECK_TIME42, 'YYYY-MM-DD HH24:MI') AS CHECKTIME42
                ,TO_CHAR(FD.CHECK_TIME43, 'YYYY-MM-DD HH24:MI') AS CHECKTIME43
                ,TO_CHAR(FD.CHECK_TIME44, 'YYYY-MM-DD HH24:MI') AS CHECKTIME44
                ,TO_CHAR(FD.CHECK_TIME45, 'YYYY-MM-DD HH24:MI') AS CHECKTIME45
                ,TO_CHAR(FD.CHECK_TIME46, 'YYYY-MM-DD HH24:MI') AS CHECKTIME46
                ,TO_CHAR(FD.CHECK_TIME47, 'YYYY-MM-DD HH24:MI') AS CHECKTIME47
                ,TO_CHAR(FD.CHECK_TIME48, 'YYYY-MM-DD HH24:MI') AS CHECKTIME48
                ,TO_CHAR(FD.CHECK_TIME49, 'YYYY-MM-DD HH24:MI') AS CHECKTIME49
                ,TO_CHAR(FD.CHECK_TIME50, 'YYYY-MM-DD HH24:MI') AS CHECKTIME50
                ,FD.CHECK_RESULT_NG1 AS CHECKRESULTNG1
                ,FD.CHECK_RESULT_NG2 AS CHECKRESULTNG2
                ,FD.CHECK_RESULT_NG3 AS CHECKRESULTNG3
                ,FD.CHECK_RESULT_NG4 AS CHECKRESULTNG4
                ,FD.CHECK_RESULT_NG5 AS CHECKRESULTNG5
                ,FD.CHECK_RESULT_NG6 AS CHECKRESULTNG6
                ,FD.CHECK_RESULT_NG7 AS CHECKRESULTNG7
                ,FD.CHECK_RESULT_NG8 AS CHECKRESULTNG8
                ,FD.CHECK_RESULT_NG9 AS CHECKRESULTNG9
                ,FD.CHECK_RESULT_NG10 AS CHECKRESULTNG10
                ,FD.CHECK_RESULT_NG11 AS CHECKRESULTNG11
                ,FD.CHECK_RESULT_NG12 AS CHECKRESULTNG12
                ,FD.CHECK_RESULT_NG13 AS CHECKRESULTNG13
                ,FD.CHECK_RESULT_NG14 AS CHECKRESULTNG14
                ,FD.CHECK_RESULT_NG15 AS CHECKRESULTNG15
                ,FD.CHECK_RESULT_NG16 AS CHECKRESULTNG16
                ,FD.CHECK_RESULT_NG17 AS CHECKRESULTNG17
                ,FD.CHECK_RESULT_NG18 AS CHECKRESULTNG18
                ,FD.CHECK_RESULT_NG19 AS CHECKRESULTNG19
                ,FD.CHECK_RESULT_NG20 AS CHECKRESULTNG20
                ,FD.CHECK_RESULT_NG21 AS CHECKRESULTNG21
                ,FD.CHECK_RESULT_NG22 AS CHECKRESULTNG22
                ,FD.CHECK_RESULT_NG23 AS CHECKRESULTNG23
                ,FD.CHECK_RESULT_NG24 AS CHECKRESULTNG24
                ,FD.CHECK_RESULT_NG25 AS CHECKRESULTNG25
                ,FD.CHECK_RESULT_NG26 AS CHECKRESULTNG26
                ,FD.CHECK_RESULT_NG27 AS CHECKRESULTNG27
                ,FD.CHECK_RESULT_NG28 AS CHECKRESULTNG28
                ,FD.CHECK_RESULT_NG29 AS CHECKRESULTNG29
                ,FD.CHECK_RESULT_NG30 AS CHECKRESULTNG30
                ,FD.CHECK_RESULT_NG31 AS CHECKRESULTNG31
                ,FD.CHECK_RESULT_NG32 AS CHECKRESULTNG32
                ,FD.CHECK_RESULT_NG33 AS CHECKRESULTNG33
                ,FD.CHECK_RESULT_NG34 AS CHECKRESULTNG34
                ,FD.CHECK_RESULT_NG35 AS CHECKRESULTNG35
                ,FD.CHECK_RESULT_NG36 AS CHECKRESULTNG36
                ,FD.CHECK_RESULT_NG37 AS CHECKRESULTNG37
                ,FD.CHECK_RESULT_NG38 AS CHECKRESULTNG38
                ,FD.CHECK_RESULT_NG39 AS CHECKRESULTNG39
                ,FD.CHECK_RESULT_NG40 AS CHECKRESULTNG40
                ,FD.CHECK_RESULT_NG41 AS CHECKRESULTNG41
                ,FD.CHECK_RESULT_NG42 AS CHECKRESULTNG42
                ,FD.CHECK_RESULT_NG43 AS CHECKRESULTNG43
                ,FD.CHECK_RESULT_NG44 AS CHECKRESULTNG44
                ,FD.CHECK_RESULT_NG45 AS CHECKRESULTNG45
                ,FD.CHECK_RESULT_NG46 AS CHECKRESULTNG46
                ,FD.CHECK_RESULT_NG47 AS CHECKRESULTNG47
                ,FD.CHECK_RESULT_NG48 AS CHECKRESULTNG48
                ,FD.CHECK_RESULT_NG49 AS CHECKRESULTNG49
                ,FD.CHECK_RESULT_NG50 AS CHECKRESULTNG50
                ,FD.CHECK_YN AS CHECKYN
                ,(SELECT SC.SMALL_NAME
                    FROM CB_SMALL_CODE SC
                   WHERE 1=1
                     AND SC.BIG_CODE = 'QM'
                     AND SC.MIDDLE_CODE = 'CHECK_YN'
                     AND SC.SMALL_CODE = FD.CHECK_YN) AS CHECKYNNAME
                ,FM.PERSON_ID AS PERSONID
                ,(SELECT HM.KR_NAME
                    FROM CB_HUMANRESOURCE_MANAGER_V HM
                   WHERE 1=1
                     AND HM.ORG_ID = FM.ORG_ID
                     AND HM.COMPANY_ID = FM.COMPANY_ID
                     AND HM.EMPLOYEE_NUMBER = FM.PERSON_ID) AS KRNAME
                ,FD.CHECK_RESULT_M AS CHECKRESULTM
                ,FD.MANAGE_EMPLOYEE AS MANAGEEMPLOYEE
                ,(SELECT HM.KR_NAME
                    FROM CB_HUMANRESOURCE_MANAGER_V HM
                   WHERE 1=1
                     AND HM.ORG_ID = FD.ORG_ID
                     AND HM.COMPANY_ID = FD.COMPANY_ID
                     AND HM.EMPLOYEE_NUMBER = FD.MANAGE_EMPLOYEE) AS MANAGEKRNAME
                ,FM.CHECK_START_TIME AS STARTTIME
                ,FM.BP_YN AS BPYN
                ,(SELECT WO.LOT_NO_VISUAL
                    FROM CB_WORK_ORDER WO
                   WHERE 1=1
                     AND WO.ORG_ID = FM.ORG_ID
                     AND WO.COMPANY_ID = FM.COMPANY_ID
                     AND WO.WORK_ORDER_ID = FM.WORK_ORDER_ID
                     AND WO.WORK_ORDER_SEQ = FM.WORK_ORDER_SEQ) AS LOTNOVISUALOLD
                ,(SELECT WO.LOT_NO_VISUAL
                    FROM CB_WORK_ORDER WO
                   WHERE 1=1
                     AND WO.ORG_ID = FM.ORG_ID
                     AND WO.COMPANY_ID = FM.COMPANY_ID
                     AND WO.WORK_ORDER_ID = FM.WORK_ORDER_ID
                     AND WO.WORK_ORDER_SEQ = FM.WORK_ORDER_SEQ) AS LOTNOVISUAL
                ,CM.CHECK_CYCLE AS CHECKCYCLE
                ,(SELECT SC.SMALL_NAME
                    FROM CB_SMALL_CODE SC
                   WHERE 1=1
                     AND SC.ORG_ID = CM.ORG_ID
                     AND SC.COMPANY_ID = CM.COMPANY_ID
                     AND SC.BIG_CODE = 'QM'
                     AND SC.MIDDLE_CODE = 'CHECK_CYCLE'
                     AND SC.SMALL_CODE = CM.CHECK_CYCLE) AS CHECKCYCLENAME
        FROM CB_FML_CHECK_MASTER FM
                ,CB_FML_CHECK_RESULT FD
                ,CB_CHECK_MASTER CM
    </sql>
    
    <sql id="prod.work.fml.list.sql-where">
       WHERE 1 = 1
           AND FM.ORG_ID = FD.ORG_ID
           AND FM.COMPANY_ID = FD.COMPANY_ID
           AND FM.FML_ID = FD.FML_ID
           AND FM.WORK_ORDER_ID = FD.WORK_ORDER_ID
           AND FM.WORK_ORDER_SEQ = FD.WORK_ORDER_SEQ
           AND FD.ORG_ID = CM.ORG_ID
           AND FD.COMPANY_ID = CM.COMPANY_ID
           AND FD.ITEM_CODE = CM.ITEM_CODE
           AND FD.CHECK_LIST_ID = CM.CHECK_SEQ
        <isNotEmpty property="ORGID" prepend="AND">
            FD.ORG_ID = $ORGID$
        </isNotEmpty>
        <isNotEmpty property="COMPANYID" prepend="AND">
            FD.COMPANY_ID = $COMPANYID$
        </isNotEmpty>
        <isNotEmpty property="WORKORDERID" prepend="AND">
            FD.WORK_ORDER_ID = #WORKORDERID#
        </isNotEmpty>
        <isNotEmpty property="WORKORDERSEQ" prepend="AND">
            FD.WORK_ORDER_SEQ = $WORKORDERSEQ$
        </isNotEmpty>
        <isNotEmpty property="CHECKBIG" prepend="AND">
            FM.CHECK_BIG = #CHECKBIG#
        </isNotEmpty>
        <isNotEmpty property="FMLID" prepend="AND">
            FM.FML_ID = #FMLID#
        </isNotEmpty>
        ORDER BY FD.ORG_ID, FD.COMPANY_ID, FM.CHECK_BIG, (SELECT RC.ROUTING_OP
                                                                               FROM CB_ROUTING_CONTROL RC
                                                                              WHERE RC.ORG_ID = CM.ORG_ID
                                                                                AND RC.COMPANY_ID = CM.COMPANY_ID
                                                                                AND RC.ROUTING_ID = CM.ROUTING_ID), CM.ORDER_NO
    </sql>
    
    <select id="prod.work.fml.list.select" parameterClass="java.util.Map"
        resultClass="java.util.HashMap">
        <include refid="prod.work.fml.list.sql-select" />
        <include refid="prod.work.fml.list.sql-where" />
    </select>

    <select id="prod.work.fml.list.count" parameterClass="java.util.Map"
        resultClass="java.lang.Integer">
        SELECT COUNT(*) FROM (
        <include refid="prod.work.fml.list.sql-select" />
        <include refid="prod.work.fml.list.sql-where" />
        ) TOT
    </select>
    
    <update id="prod.work.fml.detail.update" parameterClass="java.util.Map">
        <![CDATA[
        UPDATE CB_FML_CHECK_RESULT
           SET LAST_UPDATED_BY  = #UPDATEID#
               , LAST_UPDATE_DATE = SYSDATE
        ]]>
        <isNotEmpty property="CHECKRESULT1" prepend=",">
         CHECK_RESULT1 = #CHECKRESULT1#
        </isNotEmpty>
        <isEmpty property="CHECKRESULT1" prepend=",">
         CHECK_RESULT1 = NULL
        </isEmpty>
        <isNotEmpty property="CHECKRESULT2" prepend=",">
         CHECK_RESULT2 = #CHECKRESULT2#
        </isNotEmpty>
        <isEmpty property="CHECKRESULT2" prepend=",">
         CHECK_RESULT2 = NULL
        </isEmpty>
        <isNotEmpty property="CHECKRESULT3" prepend=",">
         CHECK_RESULT3 = #CHECKRESULT3#
        </isNotEmpty>
        <isEmpty property="CHECKRESULT3" prepend=",">
         CHECK_RESULT3 = NULL
        </isEmpty>
        <isNotEmpty property="CHECKRESULT4" prepend=",">
         CHECK_RESULT4 = #CHECKRESULT4#
        </isNotEmpty>
        <isEmpty property="CHECKRESULT4" prepend=",">
         CHECK_RESULT4 = NULL
        </isEmpty>
        <isNotEmpty property="CHECKRESULT5" prepend=",">
         CHECK_RESULT5 = #CHECKRESULT5#
        </isNotEmpty>
        <isEmpty property="CHECKRESULT5" prepend=",">
         CHECK_RESULT5 = NULL
        </isEmpty>
        <isNotEmpty property="CHECKRESULT6" prepend=",">
         CHECK_RESULT6 = #CHECKRESULT6#
        </isNotEmpty>
        <isEmpty property="CHECKRESULT6" prepend=",">
         CHECK_RESULT6 = NULL
        </isEmpty>
        <isNotEmpty property="CHECKRESULT7" prepend=",">
         CHECK_RESULT7 = #CHECKRESULT7#
        </isNotEmpty>
        <isEmpty property="CHECKRESULT7" prepend=",">
         CHECK_RESULT7 = NULL
        </isEmpty>
        <isNotEmpty property="CHECKRESULT8" prepend=",">
         CHECK_RESULT8 = #CHECKRESULT8#
        </isNotEmpty>
        <isEmpty property="CHECKRESULT8" prepend=",">
         CHECK_RESULT8 = NULL
        </isEmpty>
        <isNotEmpty property="CHECKRESULT9" prepend=",">
         CHECK_RESULT9 = #CHECKRESULT9#
        </isNotEmpty>
        <isEmpty property="CHECKRESULT9" prepend=",">
         CHECK_RESULT9 = NULL
        </isEmpty>
        <isNotEmpty property="CHECKRESULT10" prepend=",">
         CHECK_RESULT10 = #CHECKRESULT10#
        </isNotEmpty>
        <isEmpty property="CHECKRESULT10" prepend=",">
         CHECK_RESULT10 = NULL
        </isEmpty>
        <isNotEmpty property="CHECKRESULT11" prepend=",">
         CHECK_RESULT11 = #CHECKRESULT11#
        </isNotEmpty>
        <isEmpty property="CHECKRESULT11" prepend=",">
         CHECK_RESULT11 = NULL
        </isEmpty>
        <isNotEmpty property="CHECKRESULT12" prepend=",">
         CHECK_RESULT12 = #CHECKRESULT12#
        </isNotEmpty>
        <isEmpty property="CHECKRESULT12" prepend=",">
         CHECK_RESULT12 = NULL
        </isEmpty>
        <isNotEmpty property="CHECKRESULT13" prepend=",">
         CHECK_RESULT13 = #CHECKRESULT13#
        </isNotEmpty>
        <isEmpty property="CHECKRESULT13" prepend=",">
         CHECK_RESULT13 = NULL
        </isEmpty>
        <isNotEmpty property="CHECKRESULT14" prepend=",">
         CHECK_RESULT14 = #CHECKRESULT14#
        </isNotEmpty>
        <isEmpty property="CHECKRESULT14" prepend=",">
         CHECK_RESULT14 = NULL
        </isEmpty>
        <isNotEmpty property="CHECKRESULT15" prepend=",">
         CHECK_RESULT15 = #CHECKRESULT15#
        </isNotEmpty>
        <isEmpty property="CHECKRESULT15" prepend=",">
         CHECK_RESULT15 = NULL
        </isEmpty>
        <isNotEmpty property="CHECKRESULT16" prepend=",">
         CHECK_RESULT16 = #CHECKRESULT16#
        </isNotEmpty>
        <isEmpty property="CHECKRESULT16" prepend=",">
         CHECK_RESULT16 = NULL
        </isEmpty>
        <isNotEmpty property="CHECKRESULT17" prepend=",">
         CHECK_RESULT17 = #CHECKRESULT17#
        </isNotEmpty>
        <isEmpty property="CHECKRESULT17" prepend=",">
         CHECK_RESULT17 = NULL
        </isEmpty>
        <isNotEmpty property="CHECKRESULT18" prepend=",">
         CHECK_RESULT18 = #CHECKRESULT18#
        </isNotEmpty>
        <isEmpty property="CHECKRESULT18" prepend=",">
         CHECK_RESULT18 = NULL
        </isEmpty>
        <isNotEmpty property="CHECKRESULT19" prepend=",">
         CHECK_RESULT19 = #CHECKRESULT19#
        </isNotEmpty>
        <isEmpty property="CHECKRESULT19" prepend=",">
         CHECK_RESULT19 = NULL
        </isEmpty>
        <isNotEmpty property="CHECKRESULT20" prepend=",">
         CHECK_RESULT20 = #CHECKRESULT20#
        </isNotEmpty>
        <isEmpty property="CHECKRESULT20" prepend=",">
         CHECK_RESULT20 = NULL
        </isEmpty>
        <isNotEmpty property="CHECKRESULT21" prepend=",">
         CHECK_RESULT21 = #CHECKRESULT21#
        </isNotEmpty>
        <isEmpty property="CHECKRESULT21" prepend=",">
         CHECK_RESULT21 = NULL
        </isEmpty>
        <isNotEmpty property="CHECKRESULT22" prepend=",">
         CHECK_RESULT22 = #CHECKRESULT22#
        </isNotEmpty>
        <isEmpty property="CHECKRESULT22" prepend=",">
         CHECK_RESULT22 = NULL
        </isEmpty>
        <isNotEmpty property="CHECKRESULT23" prepend=",">
         CHECK_RESULT23 = #CHECKRESULT23#
        </isNotEmpty>
        <isEmpty property="CHECKRESULT23" prepend=",">
         CHECK_RESULT23 = NULL
        </isEmpty>
        <isNotEmpty property="CHECKRESULT24" prepend=",">
         CHECK_RESULT24 = #CHECKRESULT24#
        </isNotEmpty>
        <isEmpty property="CHECKRESULT24" prepend=",">
         CHECK_RESULT24 = NULL
        </isEmpty>
        <isNotEmpty property="CHECKRESULT25" prepend=",">
         CHECK_RESULT25 = #CHECKRESULT25#
        </isNotEmpty>
        <isEmpty property="CHECKRESULT25" prepend=",">
         CHECK_RESULT25 = NULL
        </isEmpty>
        <isNotEmpty property="CHECKRESULT26" prepend=",">
         CHECK_RESULT26 = #CHECKRESULT26#
        </isNotEmpty>
        <isEmpty property="CHECKRESULT26" prepend=",">
         CHECK_RESULT26 = NULL
        </isEmpty>
        <isNotEmpty property="CHECKRESULT27" prepend=",">
         CHECK_RESULT27 = #CHECKRESULT27#
        </isNotEmpty>
        <isEmpty property="CHECKRESULT27" prepend=",">
         CHECK_RESULT27 = NULL
        </isEmpty>
        <isNotEmpty property="CHECKRESULT28" prepend=",">
         CHECK_RESULT28 = #CHECKRESULT28#
        </isNotEmpty>
        <isEmpty property="CHECKRESULT28" prepend=",">
         CHECK_RESULT28 = NULL
        </isEmpty>
        <isNotEmpty property="CHECKRESULT29" prepend=",">
         CHECK_RESULT29 = #CHECKRESULT29#
        </isNotEmpty>
        <isEmpty property="CHECKRESULT29" prepend=",">
         CHECK_RESULT29 = NULL
        </isEmpty>
        <isNotEmpty property="CHECKRESULT30" prepend=",">
         CHECK_RESULT30 = #CHECKRESULT30#
        </isNotEmpty>
        <isEmpty property="CHECKRESULT30" prepend=",">
         CHECK_RESULT30 = NULL
        </isEmpty>
        <isNotEmpty property="CHECKRESULT31" prepend=",">
         CHECK_RESULT31 = #CHECKRESULT31#
        </isNotEmpty>
        <isEmpty property="CHECKRESULT31" prepend=",">
         CHECK_RESULT31 = NULL
        </isEmpty>
        <isNotEmpty property="CHECKRESULT32" prepend=",">
         CHECK_RESULT32 = #CHECKRESULT32#
        </isNotEmpty>
        <isEmpty property="CHECKRESULT32" prepend=",">
         CHECK_RESULT32 = NULL
        </isEmpty>
        <isNotEmpty property="CHECKRESULT33" prepend=",">
         CHECK_RESULT33 = #CHECKRESULT33#
        </isNotEmpty>
        <isEmpty property="CHECKRESULT33" prepend=",">
         CHECK_RESULT33 = NULL
        </isEmpty>
        <isNotEmpty property="CHECKRESULT34" prepend=",">
         CHECK_RESULT34 = #CHECKRESULT34#
        </isNotEmpty>
        <isEmpty property="CHECKRESULT34" prepend=",">
         CHECK_RESULT34 = NULL
        </isEmpty>
        <isNotEmpty property="CHECKRESULT35" prepend=",">
         CHECK_RESULT35 = #CHECKRESULT35#
        </isNotEmpty>
        <isEmpty property="CHECKRESULT35" prepend=",">
         CHECK_RESULT35 = NULL
        </isEmpty>
        <isNotEmpty property="CHECKRESULT36" prepend=",">
         CHECK_RESULT36 = #CHECKRESULT36#
        </isNotEmpty>
        <isEmpty property="CHECKRESULT36" prepend=",">
         CHECK_RESULT36 = NULL
        </isEmpty>
        <isNotEmpty property="CHECKRESULT37" prepend=",">
         CHECK_RESULT37 = #CHECKRESULT37#
        </isNotEmpty>
        <isEmpty property="CHECKRESULT37" prepend=",">
         CHECK_RESULT37 = NULL
        </isEmpty>
        <isNotEmpty property="CHECKRESULT38" prepend=",">
         CHECK_RESULT38 = #CHECKRESULT38#
        </isNotEmpty>
        <isEmpty property="CHECKRESULT38" prepend=",">
         CHECK_RESULT38 = NULL
        </isEmpty>
        <isNotEmpty property="CHECKRESULT39" prepend=",">
         CHECK_RESULT39 = #CHECKRESULT39#
        </isNotEmpty>
        <isEmpty property="CHECKRESULT39" prepend=",">
         CHECK_RESULT39 = NULL
        </isEmpty>
        <isNotEmpty property="CHECKRESULT40" prepend=",">
         CHECK_RESULT40 = #CHECKRESULT40#
        </isNotEmpty>
        <isEmpty property="CHECKRESULT40" prepend=",">
         CHECK_RESULT40 = NULL
        </isEmpty>
        <isNotEmpty property="CHECKRESULT41" prepend=",">
         CHECK_RESULT41 = #CHECKRESULT41#
        </isNotEmpty>
        <isEmpty property="CHECKRESULT41" prepend=",">
         CHECK_RESULT41 = NULL
        </isEmpty>
        <isNotEmpty property="CHECKRESULT42" prepend=",">
         CHECK_RESULT42 = #CHECKRESULT42#
        </isNotEmpty>
        <isEmpty property="CHECKRESULT42" prepend=",">
         CHECK_RESULT42 = NULL
        </isEmpty>
        <isNotEmpty property="CHECKRESULT43" prepend=",">
         CHECK_RESULT43 = #CHECKRESULT43#
        </isNotEmpty>
        <isEmpty property="CHECKRESULT43" prepend=",">
         CHECK_RESULT43 = NULL
        </isEmpty>
        <isNotEmpty property="CHECKRESULT44" prepend=",">
         CHECK_RESULT44 = #CHECKRESULT44#
        </isNotEmpty>
        <isEmpty property="CHECKRESULT44" prepend=",">
         CHECK_RESULT44 = NULL
        </isEmpty>
        <isNotEmpty property="CHECKRESULT45" prepend=",">
         CHECK_RESULT45 = #CHECKRESULT45#
        </isNotEmpty>
        <isEmpty property="CHECKRESULT45" prepend=",">
         CHECK_RESULT45 = NULL
        </isEmpty>
        <isNotEmpty property="CHECKRESULT46" prepend=",">
         CHECK_RESULT46 = #CHECKRESULT46#
        </isNotEmpty>
        <isEmpty property="CHECKRESULT46" prepend=",">
         CHECK_RESULT46 = NULL
        </isEmpty>
        <isNotEmpty property="CHECKRESULT47" prepend=",">
         CHECK_RESULT47 = #CHECKRESULT47#
        </isNotEmpty>
        <isEmpty property="CHECKRESULT47" prepend=",">
         CHECK_RESULT47 = NULL
        </isEmpty>
        <isNotEmpty property="CHECKRESULT48" prepend=",">
         CHECK_RESULT48 = #CHECKRESULT48#
        </isNotEmpty>
        <isEmpty property="CHECKRESULT48" prepend=",">
         CHECK_RESULT48 = NULL
        </isEmpty>
        <isNotEmpty property="CHECKRESULT49" prepend=",">
         CHECK_RESULT49 = #CHECKRESULT49#
        </isNotEmpty>
        <isEmpty property="CHECKRESULT49" prepend=",">
         CHECK_RESULT49 = NULL
        </isEmpty>
        <isNotEmpty property="CHECKRESULT50" prepend=",">
         CHECK_RESULT50 = #CHECKRESULT50#
        </isNotEmpty>
        <isEmpty property="CHECKRESULT50" prepend=",">
         CHECK_RESULT50 = NULL
        </isEmpty>
        <isNotEmpty property="CHECKRESULTNG1" prepend=",">
         CHECK_RESULT_NG1 = #CHECKRESULTNG1#
        </isNotEmpty>
        <isEmpty property="CHECKRESULTNG1" prepend=",">
         CHECK_RESULT_NG1 = NULL
        </isEmpty>
        <isNotEmpty property="CHECKRESULTNG2" prepend=",">
         CHECK_RESULT_NG2 = #CHECKRESULTNG2#
        </isNotEmpty>
        <isEmpty property="CHECKRESULTNG2" prepend=",">
         CHECK_RESULT_NG2 = NULL
        </isEmpty>
        <isNotEmpty property="CHECKRESULTNG3" prepend=",">
         CHECK_RESULT_NG3 = #CHECKRESULTNG3#
        </isNotEmpty>
        <isEmpty property="CHECKRESULTNG3" prepend=",">
         CHECK_RESULT_NG3 = NULL
        </isEmpty>
        <isNotEmpty property="CHECKRESULTNG4" prepend=",">
         CHECK_RESULT_NG4 = #CHECKRESULTNG4#
        </isNotEmpty>
        <isEmpty property="CHECKRESULTNG4" prepend=",">
         CHECK_RESULT_NG4 = NULL
        </isEmpty>
        <isNotEmpty property="CHECKRESULTNG5" prepend=",">
         CHECK_RESULT_NG5 = #CHECKRESULTNG5#
        </isNotEmpty>
        <isEmpty property="CHECKRESULTNG5" prepend=",">
         CHECK_RESULT_NG5 = NULL
        </isEmpty>
        <isNotEmpty property="CHECKRESULTNG6" prepend=",">
         CHECK_RESULT_NG6 = #CHECKRESULTNG6#
        </isNotEmpty>
        <isEmpty property="CHECKRESULTNG6" prepend=",">
         CHECK_RESULT_NG6 = NULL
        </isEmpty>
        <isNotEmpty property="CHECKRESULTNG7" prepend=",">
         CHECK_RESULT_NG7 = #CHECKRESULTNG7#
        </isNotEmpty>
        <isEmpty property="CHECKRESULTNG7" prepend=",">
         CHECK_RESULT_NG7 = NULL
        </isEmpty>
        <isNotEmpty property="CHECKRESULTNG8" prepend=",">
         CHECK_RESULT_NG8 = #CHECKRESULTNG8#
        </isNotEmpty>
        <isEmpty property="CHECKRESULTNG8" prepend=",">
         CHECK_RESULT_NG8 = NULL
        </isEmpty>
        <isNotEmpty property="CHECKRESULTNG9" prepend=",">
         CHECK_RESULT_NG9 = #CHECKRESULTNG9#
        </isNotEmpty>
        <isEmpty property="CHECKRESULTNG9" prepend=",">
         CHECK_RESULT_NG9 = NULL
        </isEmpty>
        <isNotEmpty property="CHECKRESULTNG10" prepend=",">
         CHECK_RESULT_NG10 = #CHECKRESULTNG10#
        </isNotEmpty>
        <isEmpty property="CHECKRESULTNG10" prepend=",">
         CHECK_RESULT_NG10 = NULL
        </isEmpty>
        <isNotEmpty property="CHECKRESULTNG11" prepend=",">
         CHECK_RESULT_NG11 = #CHECKRESULTNG11#
        </isNotEmpty>
        <isEmpty property="CHECKRESULTNG11" prepend=",">
         CHECK_RESULT_NG11 = NULL
        </isEmpty>
        <isNotEmpty property="CHECKRESULTNG12" prepend=",">
         CHECK_RESULT_NG12 = #CHECKRESULTNG12#
        </isNotEmpty>
        <isEmpty property="CHECKRESULTNG12" prepend=",">
         CHECK_RESULT_NG12 = NULL
        </isEmpty>
        <isNotEmpty property="CHECKRESULTNG13" prepend=",">
         CHECK_RESULT_NG13 = #CHECKRESULTNG13#
        </isNotEmpty>
        <isEmpty property="CHECKRESULTNG13" prepend=",">
         CHECK_RESULT_NG13 = NULL
        </isEmpty>
        <isNotEmpty property="CHECKRESULTNG14" prepend=",">
         CHECK_RESULT_NG14 = #CHECKRESULTNG14#
        </isNotEmpty>
        <isEmpty property="CHECKRESULTNG14" prepend=",">
         CHECK_RESULT_NG14 = NULL
        </isEmpty>
        <isNotEmpty property="CHECKRESULTNG15" prepend=",">
         CHECK_RESULT_NG15 = #CHECKRESULTNG15#
        </isNotEmpty>
        <isEmpty property="CHECKRESULTNG15" prepend=",">
         CHECK_RESULT_NG15 = NULL
        </isEmpty>
        <isNotEmpty property="CHECKRESULTNG16" prepend=",">
         CHECK_RESULT_NG16 = #CHECKRESULTNG16#
        </isNotEmpty>
        <isEmpty property="CHECKRESULTNG16" prepend=",">
         CHECK_RESULT_NG16 = NULL
        </isEmpty>
        <isNotEmpty property="CHECKRESULTNG17" prepend=",">
         CHECK_RESULT_NG17 = #CHECKRESULTNG17#
        </isNotEmpty>
        <isEmpty property="CHECKRESULTNG17" prepend=",">
         CHECK_RESULT_NG17 = NULL
        </isEmpty>
        <isNotEmpty property="CHECKRESULTNG18" prepend=",">
         CHECK_RESULT_NG18 = #CHECKRESULTNG18#
        </isNotEmpty>
        <isEmpty property="CHECKRESULTNG18" prepend=",">
         CHECK_RESULT_NG18 = NULL
        </isEmpty>
        <isNotEmpty property="CHECKRESULTNG19" prepend=",">
         CHECK_RESULT_NG19 = #CHECKRESULTNG19#
        </isNotEmpty>
        <isEmpty property="CHECKRESULTNG19" prepend=",">
         CHECK_RESULT_NG19 = NULL
        </isEmpty>
        <isNotEmpty property="CHECKRESULTNG20" prepend=",">
         CHECK_RESULT_NG20 = #CHECKRESULTNG20#
        </isNotEmpty>
        <isEmpty property="CHECKRESULTNG20" prepend=",">
         CHECK_RESULT_NG20 = NULL
        </isEmpty>
        <isNotEmpty property="CHECKRESULTNG21" prepend=",">
         CHECK_RESULT_NG21 = #CHECKRESULTNG21#
        </isNotEmpty>
        <isEmpty property="CHECKRESULTNG21" prepend=",">
         CHECK_RESULT_NG21 = NULL
        </isEmpty>
        <isNotEmpty property="CHECKRESULTNG22" prepend=",">
         CHECK_RESULT_NG22 = #CHECKRESULTNG22#
        </isNotEmpty>
        <isEmpty property="CHECKRESULTNG22" prepend=",">
         CHECK_RESULT_NG22 = NULL
        </isEmpty>
        <isNotEmpty property="CHECKRESULTNG23" prepend=",">
         CHECK_RESULT_NG23 = #CHECKRESULTNG23#
        </isNotEmpty>
        <isEmpty property="CHECKRESULTNG23" prepend=",">
         CHECK_RESULT_NG23 = NULL
        </isEmpty>
        <isNotEmpty property="CHECKRESULTNG24" prepend=",">
         CHECK_RESULT_NG24 = #CHECKRESULTNG24#
        </isNotEmpty>
        <isEmpty property="CHECKRESULTNG24" prepend=",">
         CHECK_RESULT_NG24 = NULL
        </isEmpty>
        <isNotEmpty property="CHECKRESULTNG25" prepend=",">
         CHECK_RESULT_NG25 = #CHECKRESULTNG25#
        </isNotEmpty>
        <isEmpty property="CHECKRESULTNG25" prepend=",">
         CHECK_RESULT_NG25 = NULL
        </isEmpty>
        <isNotEmpty property="CHECKRESULTNG26" prepend=",">
         CHECK_RESULT_NG26 = #CHECKRESULTNG26#
        </isNotEmpty>
        <isEmpty property="CHECKRESULTNG26" prepend=",">
         CHECK_RESULT_NG26 = NULL
        </isEmpty>
        <isNotEmpty property="CHECKRESULTNG27" prepend=",">
         CHECK_RESULT_NG27 = #CHECKRESULTNG27#
        </isNotEmpty>
        <isEmpty property="CHECKRESULTNG27" prepend=",">
         CHECK_RESULT_NG27 = NULL
        </isEmpty>
        <isNotEmpty property="CHECKRESULTNG28" prepend=",">
         CHECK_RESULT_NG28 = #CHECKRESULTNG28#
        </isNotEmpty>
        <isEmpty property="CHECKRESULTNG28" prepend=",">
         CHECK_RESULT_NG28 = NULL
        </isEmpty>
        <isNotEmpty property="CHECKRESULTNG29" prepend=",">
         CHECK_RESULT_NG29 = #CHECKRESULTNG29#
        </isNotEmpty>
        <isEmpty property="CHECKRESULTNG29" prepend=",">
         CHECK_RESULT_NG29 = NULL
        </isEmpty>
        <isNotEmpty property="CHECKRESULTNG30" prepend=",">
         CHECK_RESULT_NG30 = #CHECKRESULTNG30#
        </isNotEmpty>
        <isEmpty property="CHECKRESULTNG30" prepend=",">
         CHECK_RESULT_NG30 = NULL
        </isEmpty>
        <isNotEmpty property="CHECKRESULTNG31" prepend=",">
         CHECK_RESULT_NG31 = #CHECKRESULTNG31#
        </isNotEmpty>
        <isEmpty property="CHECKRESULTNG31" prepend=",">
         CHECK_RESULT_NG31 = NULL
        </isEmpty>
        <isNotEmpty property="CHECKRESULTNG32" prepend=",">
         CHECK_RESULT_NG32 = #CHECKRESULTNG32#
        </isNotEmpty>
        <isEmpty property="CHECKRESULTNG32" prepend=",">
         CHECK_RESULT_NG32 = NULL
        </isEmpty>
        <isNotEmpty property="CHECKRESULTNG33" prepend=",">
         CHECK_RESULT_NG33 = #CHECKRESULTNG33#
        </isNotEmpty>
        <isEmpty property="CHECKRESULTNG33" prepend=",">
         CHECK_RESULT_NG33 = NULL
        </isEmpty>
        <isNotEmpty property="CHECKRESULTNG34" prepend=",">
         CHECK_RESULT_NG34 = #CHECKRESULTNG34#
        </isNotEmpty>
        <isEmpty property="CHECKRESULTNG34" prepend=",">
         CHECK_RESULT_NG34 = NULL
        </isEmpty>
        <isNotEmpty property="CHECKRESULTNG35" prepend=",">
         CHECK_RESULT_NG35 = #CHECKRESULTNG35#
        </isNotEmpty>
        <isEmpty property="CHECKRESULTNG35" prepend=",">
         CHECK_RESULT_NG35 = NULL
        </isEmpty>
        <isNotEmpty property="CHECKRESULTNG36" prepend=",">
         CHECK_RESULT_NG36 = #CHECKRESULTNG36#
        </isNotEmpty>
        <isEmpty property="CHECKRESULTNG36" prepend=",">
         CHECK_RESULT_NG36 = NULL
        </isEmpty>
        <isNotEmpty property="CHECKRESULTNG37" prepend=",">
         CHECK_RESULT_NG37 = #CHECKRESULTNG37#
        </isNotEmpty>
        <isEmpty property="CHECKRESULTNG37" prepend=",">
         CHECK_RESULT_NG37 = NULL
        </isEmpty>
        <isNotEmpty property="CHECKRESULTNG38" prepend=",">
         CHECK_RESULT_NG38 = #CHECKRESULTNG38#
        </isNotEmpty>
        <isEmpty property="CHECKRESULTNG38" prepend=",">
         CHECK_RESULT_NG38 = NULL
        </isEmpty>
        <isNotEmpty property="CHECKRESULTNG39" prepend=",">
         CHECK_RESULT_NG39 = #CHECKRESULTNG39#
        </isNotEmpty>
        <isEmpty property="CHECKRESULTNG39" prepend=",">
         CHECK_RESULT_NG39 = NULL
        </isEmpty>
        <isNotEmpty property="CHECKRESULTNG40" prepend=",">
         CHECK_RESULT_NG40 = #CHECKRESULTNG40#
        </isNotEmpty>
        <isEmpty property="CHECKRESULTNG40" prepend=",">
         CHECK_RESULT_NG40 = NULL
        </isEmpty>
        <isNotEmpty property="CHECKRESULTNG41" prepend=",">
         CHECK_RESULT_NG41 = #CHECKRESULTNG41#
        </isNotEmpty>
        <isEmpty property="CHECKRESULTNG41" prepend=",">
         CHECK_RESULT_NG41 = NULL
        </isEmpty>
        <isNotEmpty property="CHECKRESULTNG42" prepend=",">
         CHECK_RESULT_NG42 = #CHECKRESULTNG42#
        </isNotEmpty>
        <isEmpty property="CHECKRESULTNG42" prepend=",">
         CHECK_RESULT_NG42 = NULL
        </isEmpty>
        <isNotEmpty property="CHECKRESULTNG43" prepend=",">
         CHECK_RESULT_NG43 = #CHECKRESULTNG43#
        </isNotEmpty>
        <isEmpty property="CHECKRESULTNG43" prepend=",">
         CHECK_RESULT_NG43 = NULL
        </isEmpty>
        <isNotEmpty property="CHECKRESULTNG44" prepend=",">
         CHECK_RESULT_NG44 = #CHECKRESULTNG44#
        </isNotEmpty>
        <isEmpty property="CHECKRESULTNG44" prepend=",">
         CHECK_RESULT_NG44 = NULL
        </isEmpty>
        <isNotEmpty property="CHECKRESULTNG45" prepend=",">
         CHECK_RESULT_NG45 = #CHECKRESULTNG45#
        </isNotEmpty>
        <isEmpty property="CHECKRESULTNG45" prepend=",">
         CHECK_RESULT_NG45 = NULL
        </isEmpty>
        <isNotEmpty property="CHECKRESULTNG46" prepend=",">
         CHECK_RESULT_NG46 = #CHECKRESULTNG46#
        </isNotEmpty>
        <isEmpty property="CHECKRESULTNG46" prepend=",">
         CHECK_RESULT_NG46 = NULL
        </isEmpty>
        <isNotEmpty property="CHECKRESULTNG47" prepend=",">
         CHECK_RESULT_NG47 = #CHECKRESULTNG47#
        </isNotEmpty>
        <isEmpty property="CHECKRESULTNG47" prepend=",">
         CHECK_RESULT_NG47 = NULL
        </isEmpty>
        <isNotEmpty property="CHECKRESULTNG48" prepend=",">
         CHECK_RESULT_NG48 = #CHECKRESULTNG48#
        </isNotEmpty>
        <isEmpty property="CHECKRESULTNG48" prepend=",">
         CHECK_RESULT_NG48 = NULL
        </isEmpty>
        <isNotEmpty property="CHECKRESULTNG49" prepend=",">
         CHECK_RESULT_NG49 = #CHECKRESULTNG49#
        </isNotEmpty>
        <isEmpty property="CHECKRESULTNG49" prepend=",">
         CHECK_RESULT_NG49 = NULL
        </isEmpty>
        <isNotEmpty property="CHECKRESULTNG50" prepend=",">
         CHECK_RESULT_NG50 = #CHECKRESULTNG50#
        </isNotEmpty>
        <isEmpty property="CHECKRESULTNG50" prepend=",">
         CHECK_RESULT_NG50 = NULL
        </isEmpty>
        <isNotEmpty property="CHECKTIME1" prepend=",">
         CHECK_TIME1 = TO_DATE(#CHECKTIME1#, 'YYYY-MM-DD HH24:MI')
        </isNotEmpty>
        <isNotEmpty property="CHECKTIME2" prepend=",">
         CHECK_TIME2 = TO_DATE(#CHECKTIME2#, 'YYYY-MM-DD HH24:MI')
        </isNotEmpty>
        <isNotEmpty property="CHECKTIME3" prepend=",">
         CHECK_TIME3 = TO_DATE(#CHECKTIME3#, 'YYYY-MM-DD HH24:MI')
        </isNotEmpty>
        <isNotEmpty property="CHECKTIME4" prepend=",">
         CHECK_TIME4 = TO_DATE(#CHECKTIME4#, 'YYYY-MM-DD HH24:MI')
        </isNotEmpty>
        <isNotEmpty property="CHECKTIME5" prepend=",">
         CHECK_TIME5 = TO_DATE(#CHECKTIME5#, 'YYYY-MM-DD HH24:MI')
        </isNotEmpty>
        <isNotEmpty property="CHECKTIME6" prepend=",">
         CHECK_TIME6 = TO_DATE(#CHECKTIME6#, 'YYYY-MM-DD HH24:MI')
        </isNotEmpty>
        <isNotEmpty property="CHECKTIME7" prepend=",">
         CHECK_TIME7 = TO_DATE(#CHECKTIME7#, 'YYYY-MM-DD HH24:MI')
        </isNotEmpty>
        <isNotEmpty property="CHECKTIME8" prepend=",">
         CHECK_TIME8 = TO_DATE(#CHECKTIME8#, 'YYYY-MM-DD HH24:MI')
        </isNotEmpty>
        <isNotEmpty property="CHECKTIME9" prepend=",">
         CHECK_TIME9 = TO_DATE(#CHECKTIME9#, 'YYYY-MM-DD HH24:MI')
        </isNotEmpty>
        <isNotEmpty property="CHECKTIME10" prepend=",">
         CHECK_TIME10 = TO_DATE(#CHECKTIME10#, 'YYYY-MM-DD HH24:MI')
        </isNotEmpty>
        <isNotEmpty property="CHECKTIME11" prepend=",">
         CHECK_TIME11 = TO_DATE(#CHECKTIME11#, 'YYYY-MM-DD HH24:MI')
        </isNotEmpty>
        <isNotEmpty property="CHECKTIME12" prepend=",">
         CHECK_TIME12 = TO_DATE(#CHECKTIME12#, 'YYYY-MM-DD HH24:MI')
        </isNotEmpty>
        <isNotEmpty property="CHECKTIME13" prepend=",">
         CHECK_TIME13 = TO_DATE(#CHECKTIME13#, 'YYYY-MM-DD HH24:MI')
        </isNotEmpty>
        <isNotEmpty property="CHECKTIME14" prepend=",">
         CHECK_TIME14 = TO_DATE(#CHECKTIME14#, 'YYYY-MM-DD HH24:MI')
        </isNotEmpty>
        <isNotEmpty property="CHECKTIME15" prepend=",">
         CHECK_TIME15 = TO_DATE(#CHECKTIME15#, 'YYYY-MM-DD HH24:MI')
        </isNotEmpty>
        <isNotEmpty property="CHECKTIME16" prepend=",">
         CHECK_TIME16 = TO_DATE(#CHECKTIME16#, 'YYYY-MM-DD HH24:MI')
        </isNotEmpty>
        <isNotEmpty property="CHECKTIME17" prepend=",">
         CHECK_TIME17 = TO_DATE(#CHECKTIME17#, 'YYYY-MM-DD HH24:MI')
        </isNotEmpty>
        <isNotEmpty property="CHECKTIME18" prepend=",">
         CHECK_TIME18 = TO_DATE(#CHECKTIME18#, 'YYYY-MM-DD HH24:MI')
        </isNotEmpty>
        <isNotEmpty property="CHECKTIME19" prepend=",">
         CHECK_TIME19 = TO_DATE(#CHECKTIME19#, 'YYYY-MM-DD HH24:MI')
        </isNotEmpty>
        <isNotEmpty property="CHECKTIME20" prepend=",">
         CHECK_TIME20 = TO_DATE(#CHECKTIME20#, 'YYYY-MM-DD HH24:MI')
        </isNotEmpty>
        <isNotEmpty property="CHECKTIME21" prepend=",">
         CHECK_TIME21 = TO_DATE(#CHECKTIME21#, 'YYYY-MM-DD HH24:MI')
        </isNotEmpty>
        <isNotEmpty property="CHECKTIME22" prepend=",">
         CHECK_TIME22 = TO_DATE(#CHECKTIME22#, 'YYYY-MM-DD HH24:MI')
        </isNotEmpty>
        <isNotEmpty property="CHECKTIME23" prepend=",">
         CHECK_TIME23 = TO_DATE(#CHECKTIME23#, 'YYYY-MM-DD HH24:MI')
        </isNotEmpty>
        <isNotEmpty property="CHECKTIME24" prepend=",">
         CHECK_TIME24 = TO_DATE(#CHECKTIME24#, 'YYYY-MM-DD HH24:MI')
        </isNotEmpty>
        <isNotEmpty property="CHECKTIME25" prepend=",">
         CHECK_TIME25 = TO_DATE(#CHECKTIME25#, 'YYYY-MM-DD HH24:MI')
        </isNotEmpty>
        <isNotEmpty property="CHECKTIME26" prepend=",">
         CHECK_TIME26 = TO_DATE(#CHECKTIME26#, 'YYYY-MM-DD HH24:MI')
        </isNotEmpty>
        <isNotEmpty property="CHECKTIME27" prepend=",">
         CHECK_TIME27 = TO_DATE(#CHECKTIME27#, 'YYYY-MM-DD HH24:MI')
        </isNotEmpty>
        <isNotEmpty property="CHECKTIME28" prepend=",">
         CHECK_TIME28 = TO_DATE(#CHECKTIME28#, 'YYYY-MM-DD HH24:MI')
        </isNotEmpty>
        <isNotEmpty property="CHECKTIME29" prepend=",">
         CHECK_TIME29 = TO_DATE(#CHECKTIME29#, 'YYYY-MM-DD HH24:MI')
        </isNotEmpty>
        <isNotEmpty property="CHECKTIME30" prepend=",">
         CHECK_TIME30 = TO_DATE(#CHECKTIME30#, 'YYYY-MM-DD HH24:MI')
        </isNotEmpty>
        <isNotEmpty property="CHECKTIME31" prepend=",">
         CHECK_TIME31 = TO_DATE(#CHECKTIME31#, 'YYYY-MM-DD HH24:MI')
        </isNotEmpty>
        <isNotEmpty property="CHECKTIME32" prepend=",">
         CHECK_TIME32 = TO_DATE(#CHECKTIME32#, 'YYYY-MM-DD HH24:MI')
        </isNotEmpty>
        <isNotEmpty property="CHECKTIME33" prepend=",">
         CHECK_TIME33 = TO_DATE(#CHECKTIME33#, 'YYYY-MM-DD HH24:MI')
        </isNotEmpty>
        <isNotEmpty property="CHECKTIME34" prepend=",">
         CHECK_TIME34 = TO_DATE(#CHECKTIME34#, 'YYYY-MM-DD HH24:MI')
        </isNotEmpty>
        <isNotEmpty property="CHECKTIME35" prepend=",">
         CHECK_TIME35 = TO_DATE(#CHECKTIME35#, 'YYYY-MM-DD HH24:MI')
        </isNotEmpty>
        <isNotEmpty property="CHECKTIME36" prepend=",">
         CHECK_TIME36 = TO_DATE(#CHECKTIME36#, 'YYYY-MM-DD HH24:MI')
        </isNotEmpty>
        <isNotEmpty property="CHECKTIME37" prepend=",">
         CHECK_TIME37 = TO_DATE(#CHECKTIME37#, 'YYYY-MM-DD HH24:MI')
        </isNotEmpty>
        <isNotEmpty property="CHECKTIME38" prepend=",">
         CHECK_TIME38 = TO_DATE(#CHECKTIME38#, 'YYYY-MM-DD HH24:MI')
        </isNotEmpty>
        <isNotEmpty property="CHECKTIME39" prepend=",">
         CHECK_TIME39 = TO_DATE(#CHECKTIME39#, 'YYYY-MM-DD HH24:MI')
        </isNotEmpty>
        <isNotEmpty property="CHECKTIME40" prepend=",">
         CHECK_TIME40 = TO_DATE(#CHECKTIME40#, 'YYYY-MM-DD HH24:MI')
        </isNotEmpty>
        <isNotEmpty property="CHECKTIME41" prepend=",">
         CHECK_TIME41 = TO_DATE(#CHECKTIME41#, 'YYYY-MM-DD HH24:MI')
        </isNotEmpty>
        <isNotEmpty property="CHECKTIME42" prepend=",">
         CHECK_TIME42 = TO_DATE(#CHECKTIME42#, 'YYYY-MM-DD HH24:MI')
        </isNotEmpty>
        <isNotEmpty property="CHECKTIME43" prepend=",">
         CHECK_TIME43 = TO_DATE(#CHECKTIME43#, 'YYYY-MM-DD HH24:MI')
        </isNotEmpty>
        <isNotEmpty property="CHECKTIME44" prepend=",">
         CHECK_TIME44 = TO_DATE(#CHECKTIME44#, 'YYYY-MM-DD HH24:MI')
        </isNotEmpty>
        <isNotEmpty property="CHECKTIME45" prepend=",">
         CHECK_TIME45 = TO_DATE(#CHECKTIME45#, 'YYYY-MM-DD HH24:MI')
        </isNotEmpty>
        <isNotEmpty property="CHECKTIME46" prepend=",">
         CHECK_TIME46 = TO_DATE(#CHECKTIME46#, 'YYYY-MM-DD HH24:MI')
        </isNotEmpty>
        <isNotEmpty property="CHECKTIME47" prepend=",">
         CHECK_TIME47 = TO_DATE(#CHECKTIME47#, 'YYYY-MM-DD HH24:MI')
        </isNotEmpty>
        <isNotEmpty property="CHECKTIME48" prepend=",">
         CHECK_TIME48 = TO_DATE(#CHECKTIME48#, 'YYYY-MM-DD HH24:MI')
        </isNotEmpty>
        <isNotEmpty property="CHECKTIME49" prepend=",">
         CHECK_TIME49 = TO_DATE(#CHECKTIME49#, 'YYYY-MM-DD HH24:MI')
        </isNotEmpty>
        <isNotEmpty property="CHECKTIME50" prepend=",">
         CHECK_TIME50 = TO_DATE(#CHECKTIME50#, 'YYYY-MM-DD HH24:MI')
        </isNotEmpty>
        <isNotEmpty property="CHECKYN" prepend=",">
         CHECK_YN = #CHECKYN#
        </isNotEmpty>
        <isEmpty property="CHECKYN" prepend=",">
         CHECK_YN = NULL
        </isEmpty>
        <isNotEmpty property="CHECKRESULTM" prepend=",">
         CHECK_RESULT_M = #CHECKRESULTM#
        </isNotEmpty>
        <isEmpty property="CHECKRESULTM" prepend=",">
         CHECK_RESULT_M = NULL
        </isEmpty>
        <isNotEmpty property="MANAGEEMPLOYEE" prepend=",">
         MANAGE_EMPLOYEE = #MANAGEEMPLOYEE#
        </isNotEmpty>
        <isEmpty property="MANAGEEMPLOYEE" prepend=",">
         MANAGE_EMPLOYEE = NULL
        </isEmpty>
        <![CDATA[
        WHERE 1=1
           AND ORG_ID = $ORGID$
           AND COMPANY_ID = $COMPANYID$
           AND FML_ID = $FMLID$
           AND ORDER_NO = $ORDERNO$
        ]]>
<!--            AND WORK_ORDER_ID = #WORKORDERID# -->
<!--            AND WORK_ORDER_SEQ = $WORKORDERSEQ$ -->
    </update>
    
    <sql id="prod.work.fml.checkyn.sql-select">
    <![CDATA[
        SELECT COUNT(1) AS COUNT
          FROM CB_FML_CHECK_RESULT
      ]]>
    </sql>
    
    <sql id="prod.work.fml.checkyn.sql-where">
    WHERE 1=1
       AND FML_ID = $FMLID$
    <isNotEmpty property="FMLTYPE" prepend="AND">
             FML_ID IN (SELECT FML_ID
                            FROM CB_FML_CHECK_MASTER
                           WHERE 1=1
                             AND FML_TYPE = #FMLTYPE#)
    </isNotEmpty>
    <isEqual property="CHECKQTY" compareValue="1" prepend="AND">
       ( CHECK_RESULT1 IS NULL
    </isEqual>
    <isEqual property="CHECKQTY" compareValue="2" prepend="AND">
       ( CHECK_RESULT1 IS NULL
       OR CHECK_RESULT2 IS NULL
    </isEqual>
    <isEqual property="CHECKQTY" compareValue="3" prepend="AND">
       ( CHECK_RESULT1 IS NULL
       OR CHECK_RESULT2 IS NULL
       OR CHECK_RESULT3 IS NULL
    </isEqual>
    <isEqual property="CHECKQTY" compareValue="4" prepend="AND">
       ( CHECK_RESULT1 IS NULL
       OR CHECK_RESULT2 IS NULL
       OR CHECK_RESULT3 IS NULL
       OR CHECK_RESULT4 IS NULL
    </isEqual>
    <isEqual property="CHECKQTY" compareValue="5" prepend="AND">
       ( CHECK_RESULT1 IS NULL
       OR CHECK_RESULT2 IS NULL
       OR CHECK_RESULT3 IS NULL
       OR CHECK_RESULT4 IS NULL
       OR CHECK_RESULT5 IS NULL
    </isEqual>
       OR CHECK_YN IS NULL
       )
    </sql>
    
    <select id="prod.work.fml.checkyn.select" parameterClass="java.util.Map"
        resultClass="java.util.HashMap">
        <include refid="prod.work.fml.checkyn.sql-select" />
        <include refid="prod.work.fml.checkyn.sql-where" />
    </select>
    
    <update id="prod.work.fml.master.update" parameterClass="java.util.Map">
        UPDATE CB_FML_CHECK_MASTER
           SET LAST_UPDATED_BY  = #UPDATEID#
               , LAST_UPDATE_DATE = SYSDATE
               , CHECK_DATE = NVL(CHECK_DATE, TO_DATE(TO_CHAR(SYSDATE, 'YYYY-MM-DD'), 'YYYY-MM-DD') )
               , CHECK_TIME = NVL(CHECK_TIME, TO_CHAR(SYSDATE, 'HH24:MI') )
            <isNotEmpty property="PERSONID" prepend=",">
                PERSON_ID = #PERSONID#
            </isNotEmpty>
            <isNotEmpty property="INSPECTIONYN" prepend=",">
                INSPECTION_YN = DECODE(#INSPECTIONYN#, 'Y', 'Y', 'N')
            </isNotEmpty>
            <isNotEmpty property="STARTTIME" prepend=",">
                CHECK_START_TIME = NVL(CHECK_START_TIME, #STARTTIME#)
            </isNotEmpty>
            <isNotEmpty property="BPYN" prepend=",">
                BP_YN = DECODE(#BPYN#, 'Y', 'Y', 'N')
            </isNotEmpty>
        WHERE 1=1
           AND ORG_ID = $ORGID$
           AND COMPANY_ID = $COMPANYID$
           AND FML_ID = $FMLID$
    </update>
    <!-- 초중종 조회 끝 -->    
    
    
    <!-- 공구 변경점 등록 조회 시작 -->
    <sql id="prod.work.tool.change.list.sql-select">
        SELECT RANK() OVER(ORDER BY ORG_ID, COMPANY_ID, CHECK_SEQ DESC, CHANGE_SEQ) AS RN
					      ,ORG_ID AS ORGID
					      ,COMPANY_ID AS COMPANYID
					      ,CHANGE_SEQ AS CHANGESEQ
					      ,CHECK_SEQ AS CHECKSEQ
	              ,EQUIPMENT_CODE AS EQUIPMENTCODE
	              ,EQUIPMENT_NAME AS EQUIPMENTNAME
	              ,WORK_CENTER_CODE AS WORKCENTERCODE
	              ,WORK_CENTER_NAME AS WORKCENTERNAME
	              ,ROUTING_ITEM_CODE AS ROUTINGITEMCODE
	              ,ROUTING_ITEM_NAME AS ROUTINGITEMNAME
					      ,ROUTING_ID AS ROUTINGID
					      ,ROUTING_NO AS ROUTINGNO
					      ,ROUTING_NAME AS ROUTINGNAME
					      ,ITEM_CODE AS ITEMCODE
					      ,ITEM_NAME AS ITEMNAME
					      ,ITEM_STANDARD AS ITEMSTANDARD
					      ,CHANGE_DATE AS CHANGEDATE
					      ,TOOL_LIFE AS TOOLLIFE
					      ,PROD_QTY AS PRODQTY
					      ,TOOL_LIFE_CHECK AS TOOLLIFECHECK
					      ,EMPLOYEE_NUMBER AS EMPLOYEENUMBER
					      ,KR_NAME AS KRNAME
					      ,CHANGE_TYPE AS CHANGETYPE
					      ,CHANGE_TYPE_NAME AS CHANGETYPENAME
					      ,BACK_QTY AS BACKQTY
					      ,NCR_QTY AS NCRQTY
					      ,CHECK_NAME1 AS CHECKNAME1
					      ,CHECK_STANDARD1 AS CHECKSTANDARD1
					      ,PRE_CHECK1 AS PRECHECK1
					      ,POST_CHECK1 AS POSTCHECK1
					      ,CHECK_NAME2 AS CHECKNAME2
					      ,CHECK_STANDARD2 AS CHECKSTANDARD2
					      ,PRE_CHECK2 AS PRECHECK2
					      ,POST_CHECK2 AS POSTCHECK2
					      ,CHECK_NAME3 AS CHECKNAME3
					      ,CHECK_STANDARD3 AS CHECKSTANDARD3
					      ,PRE_CHECK3 AS PRECHECK3
					      ,POST_CHECK3 AS POSTCHECK3
					      ,CHECK_NAME4 AS CHECKNAME4
					      ,CHECK_STANDARD4 AS CHECKSTANDARD4
					      ,PRE_CHECK4 AS PRECHECK4
					      ,POST_CHECK4 AS POSTCHECK4
					      ,MANAGE_CHECK AS MANAGECHECK
					      ,MANAGE_CHECK_NAME AS MANAGECHECKNAME
			  FROM CB_TOOL_CHANGE_RESULT_V TCR
    </sql>

    <sql id="prod.work.tool.change.list.sql-where">
         WHERE 1 = 1
	      <isNotEmpty property="WORKCENTERCODE" prepend="AND">
	          (TCR.ORG_ID, TCR.COMPANY_ID, TCR.EQUIPMENT_CODE) IN (SELECT EM.ORG_ID, EM.COMPANY_ID, EM.EQUIPMENT_CODE
	                                                                                      FROM CB_EQUIPMENT_MASTER EM
	                                                                                     WHERE EM.USE_YN = 'Y'
																																							         <isNotEmpty property="ORGID" prepend="AND">
																																							            EM.ORG_ID = #ORGID#
																																							         </isNotEmpty>
																																							         <isNotEmpty property="COMPANYID" prepend="AND">
																																							            EM.COMPANY_ID = #COMPANYID#
																																							         </isNotEmpty>
	                                                                                        AND EM.WORK_CENTER_CODE = #WORKCENTERCODE#)
	      </isNotEmpty>
        <isNotEmpty property="ORGID" prepend="AND">
            TCR.ORG_ID = $ORGID$
        </isNotEmpty>
        <isNotEmpty property="COMPANYID" prepend="AND">
            TCR.COMPANY_ID = $COMPANYID$
        </isNotEmpty>
        <isNotEmpty property="WORKDEPT" prepend="AND">
            TCR.WORK_DEPT = #WORKDEPT#
        </isNotEmpty>
         ORDER BY ORG_ID, COMPANY_ID, CHECK_SEQ DESC, CHANGE_SEQ
    </sql>

    <select id="prod.work.tool.change.list.select" parameterClass="java.util.Map"
        resultClass="java.util.HashMap">
        SELECT * FROM (
        <include refid="prod.work.tool.change.list.sql-select" />
        <include refid="prod.work.tool.change.list.sql-where" />
        ) A
         WHERE 1=1
           AND RN BETWEEN 1 AND 5
    </select>

    <select id="prod.work.tool.change.list.count" parameterClass="java.util.Map"
        resultClass="java.lang.Integer">
        SELECT COUNT(*) FROM (
            <include refid="prod.work.tool.change.list.sql-select" />
            <include refid="prod.work.tool.change.list.sql-where" />
        ) TOT
    </select>
    
    <insert id="prod.work.tool.change.list.insert" parameterClass="java.util.Map">
    <![CDATA[
            INSERT INTO CB_TOOL_CHANGE_RESULT (
              ORG_ID
							,COMPANY_ID
							,CHANGE_SEQ
							,ITEM_CODE
							,CHANGE_DATE
							,CHANGE_TYPE
							,ROUTING_ID
							,ROUTING_NO
							,EQUIPMENT_CODE
							,WORK_CENTER_CODE
							,EMPLOYEE_NUMBER
							,PROD_QTY
							,BACK_QTY
							,NCR_QTY
							,CHECK_SEQ
							,PRE_CHECK1
							,POST_CHECK1
							,PRE_CHECK2
							,POST_CHECK2
							,PRE_CHECK3
							,POST_CHECK3
							,PRE_CHECK4
							,POST_CHECK4
							,MANAGE_CHECK
							,CREATED_BY
							,CREATION_DATE
							,LAST_UPDATED_BY
							,LAST_UPDATE_DATE
              )
            VALUES (
              #ORGID#
              ,#COMPANYID#
		          ,(SELECT TO_NUMBER(NVL(MAX(CHANGE_SEQ), 0)) + 1
		             FROM CB_TOOL_CHANGE_RESULT
		            WHERE 1=1)
              ,#ITEMCODE#
              ,TO_DATE(#CHANGEDATE#, 'YYYY-MM-DD HH24:MI')
              ,#CHANGETYPE#
              ,$ROUTINGID$
              ,#ROUTINGNO#
              ,#EQUIPMENTCODE#
              ,#WORKCENTERCODE#
              ,#EMPLOYEENUMBER#
              ,$PRODQTY$
              ,#BACKQTY#
              ,#NCRQTY#
              ,$CHECKSEQ$
              ,#PRECHECK1#
              ,#POSTCHECK1#
              ,#PRECHECK2#
              ,#POSTCHECK2#
              ,#PRECHECK3#
              ,#POSTCHECK3#
              ,#PRECHECK4#
              ,#POSTCHECK4#
              ,#MANAGECHECK#
              ,#REGISTID#
              ,SYSDATE
              ,#REGISTID#
              ,SYSDATE
              )
    ]]>
    </insert>
    
    <update id="prod.work.tool.change.list.update" parameterClass="java.util.Map">
        <![CDATA[
        UPDATE CB_TOOL_CHANGE_RESULT
           SET LAST_UPDATED_BY  = #UPDATEID#
               , LAST_UPDATE_DATE = SYSDATE
               , CHANGE_DATE = TO_DATE(#CHANGEDATE#, 'YYYY-MM-DD HH24:MI')
               , EMPLOYEE_NUMBER = #EMPLOYEENUMBER#
               , PROD_QTY = $PRODQTY$
               , CHANGE_TYPE = #CHANGETYPE#
               , BACK_QTY = #BACKQTY#
               , NCR_QTY = #NCRQTY#
               , PRE_CHECK1 = #PRECHECK1#
               , POST_CHECK1 = #POSTCHECK1#
               , PRE_CHECK2 = #PRECHECK2#
               , POST_CHECK2 = #POSTCHECK2#
               , PRE_CHECK3 = #PRECHECK3#
               , POST_CHECK3 = #POSTCHECK3#
               , PRE_CHECK4 = #PRECHECK4#
               , POST_CHECK4 = #POSTCHECK4#
               , MANAGE_CHECK = #MANAGECHECK#
        WHERE 1=1
           AND ORG_ID = $ORGID$
           AND COMPANY_ID = $COMPANYID$
           AND CHANGE_SEQ = $CHANGESEQ$
           AND ITEM_CODE = #ITEMCODE#
        ]]>
    </update>
    <!-- 공구 변경점 등록 조회 끝 -->
    
    <!-- 공정관리 > 입고등록 조회 시작 -->
    
    <sql id="prod.work.warehousing.list.sql-select">
     SELECT RANK() OVER(ORDER BY ORG_ID, COMPANY_ID, PO_DATE DESC, PO_NO DESC, PO_SEQ) AS RN
				      ,TABLE_GUBUN AS TABLEGUBUN
				      ,ORG_ID AS ORGID
				      ,COMPANY_ID AS COMPANYID
				      ,TO_CHAR(PO_DATE, 'YYYY-MM-DD') AS PODATE
				      ,PO_NO AS PONO
				      ,PO_SEQ AS POSEQ
				      ,WORK_ORDER_ID AS WORKORDERID
				      ,WORK_ORDER_SEQ AS WORKORDERSEQ
				      ,CUSTOMER_CODE AS CUSTOMERCODE
				      ,CUSTOMER_NAME AS  CUSTOMERNAME
				      ,OUT_PO_PERSON AS TRANSPERSON
				      ,OUT_PO_PERSON_NAME AS TRANSPERSONNAME
				      ,ITEM_CODE AS ITEMCODE
				      ,ORDER_NAME AS ORDERNAME
				      ,DRAWING_NO AS DRAWINGNO
				      ,ITEM_NAME AS ITEMNAME
				      ,MODEL_NAME AS MODELNAME
				      ,ITEM_STANDARD_DETAIL AS ITEMSTANDARDDETAIL
				      ,ROUTING_ID AS ROUTINGID
              ,ROUTING_OP AS ROUTINGOP
				      ,ROUTING_NAME AS ROUTINGNAME
				      ,ORDER_QTY AS ORDERQTY
				      ,TRANS_QTY AS TRANSQTY
				      ,NOW_TRANS_QTY AS NOWTRANSQTY
				      ,REMAIN_QTY AS REMAINQTY
				      ,TRADE_NO AS TRADENO
		  FROM CB_SCM_WAREHOUSING_LIST_V
    </sql>

    <sql id="prod.work.warehousing.list.sql-where">
         WHERE 1=1
<!--          AND PO_DATE BETWEEN TO_DATE(TO_CHAR(SYSDATE, 'YYYY-MM-DD') || ' 08:00', 'YYYY-MM-DD HH24:MI') AND TO_DATE(TO_CHAR(SYSDATE + 1, 'YYYY-MM-DD') || ' 07:59', 'YYYY-MM-DD HH24:MI') -->
         <isNotEmpty property="ORGID" prepend="AND">
            ORG_ID = #ORGID#
         </isNotEmpty>
         <isNotEmpty property="COMPANYID" prepend="AND">
            COMPANY_ID = #COMPANYID#
         </isNotEmpty>
         <isNotEmpty property="CUSTOMERNAME" prepend="AND">
            CUSTOMER_NAME LIKE '%' || #CUSTOMERNAME# || '%'
         </isNotEmpty>
         <isNotEmpty property="ITEMNAME" prepend="AND">
            ITEM_NAME LIKE '%' || #ITEMNAME# || '%'
         </isNotEmpty>
         <isNotEmpty property="TRADENO" prepend="AND">
            TRADE_NO LIKE '%' || #TRADENO# || '%'
         </isNotEmpty>
         <isNotEmpty property="GUBUN">
            <isEqual property="GUBUN" compareValue="Y" prepend="AND">
                TRANS_DATE BETWEEN TO_DATE(TO_CHAR(SYSDATE, 'YYYY-MM-DD'), 'YYYY-MM-DD') AND TO_DATE(TO_CHAR(SYSDATE + 1, 'YYYY-MM-DD'), 'YYYY-MM-DD')
            </isEqual>
            <isEqual property="GUBUN" compareValue="N" prepend="AND">
                REMAIN_QTY > 0
            </isEqual>
         </isNotEmpty>
    </sql>

    <select id="prod.work.warehousing.list.select" parameterClass="java.util.Map"
        resultClass="java.util.HashMap">
        <include refid="prod.work.warehousing.list.sql-select" />
        <include refid="prod.work.warehousing.list.sql-where" />
    </select>

    <select id="prod.work.warehousing.list.count" parameterClass="java.util.Map"
        resultClass="java.lang.Integer">
        SELECT COUNT(*) FROM (
            <include refid="prod.work.warehousing.list.sql-select" />
            <include refid="prod.work.warehousing.list.sql-where" />
        ) TOT
    </select>
    <!-- 공정관리 > 입고등록 조회 끝 -->
    
    <select id="prod.work.warehousing.new.transno.select" parameterClass="java.util.Map" resultClass="java.util.HashMap">
        SELECT #TRANSDIV# || TO_CHAR(SYSDATE, 'YYMMDD') || '-' ||
               (CASE
                  WHEN NUM BETWEEN 0 AND 8 THEN
                    TO_CHAR('00')
                  WHEN NUM BETWEEN 9 AND 98 THEN
                    TO_CHAR('0')
                  ELSE
                    TO_CHAR('')
                  END
                ) || TO_NUMBER(NUM + 1) AS TRANSNO
          FROM (SELECT NVL(TO_NUMBER(SUBSTR(MAX(OUT_TRANS_NO), -3)), 0) AS NUM
                  FROM CB_OUT_TRANS_H
                 WHERE ORG_ID = #ORGID#
                   AND COMPANY_ID = #COMPANYID#
                   AND OUT_TRANS_NO LIKE #TRANSDIV# || TO_CHAR(SYSDATE, 'YYMMDD') || '%'
                )
    </select>
    
    
    <!-- 작업반 / 설비 선택 없이 조회하는 작업지시 조회 화면 START -->
    <sql id="prod.work.process.new.list.sql-select">
       <![CDATA[
       SELECT RANK() OVER(ORDER BY ORG_ID, COMPANY_ID, FIRST_ORDER, WORK_ORDER_ID, WORK_ORDER_SEQ, WORK_LEV) AS RN
					      ,ORG_ID AS ORGID
					      ,COMPANY_ID AS COMPANYID
					      ,WORK_ORDER_ID AS WORKORDERID
					      ,WORK_ORDER_SEQ AS WORKORDERSEQ
					      ,ITEM_CODE AS ITEMCODE
					      ,WORK_STATUS AS WORKSTATUS
					      ,WORK_TYPE AS WORKTYPE
					      ,WORK_TYPE_NAME AS WORKTYPENAME
					      ,WORK_LEV AS WORKLEV
					      ,WORK_DEPT AS WORKDEPT
					      ,WORK_CENTER_CODE AS WORKCENTERCODE
					      ,ORDER_NAME AS ORDERNAME
					      ,DRAWING_NO AS DRAWINGNO
					      ,ITEM_NAME AS ITEMNAME
					      ,MODEL AS MODEL
					      ,MODEL_NAME AS MODELNAME
					      ,UOM AS UOM
					      ,UOM_NAME AS UOMNAME
					      ,ROUTING_ID AS ROUTINGID
					      ,ROUTING_COLOR AS ROUTINGCOLOR
					      ,ROUTING_OP AS ROUTINGOP
					      ,ROUTING_NAME AS ROUTINGNAME
					      ,PRE_WORK_ORDER_SEQ AS PREWORKORDERSEQ
					      ,PRE_ROUTING_NAME AS PREROUTINGNAME
					      ,POST_WORK_ORDER_SEQ AS POSTWORKORDERSEQ
					      ,POST_ROUTING_NAME AS POSTROUTINGNAME
					      ,WORK_CENTER_NAME AS WORKCENTERNAME
					      ,EXCESSQTYYN2
					      ,WORK_ORDER_QTY AS WORKORDERQTY
					      ,PRODUCED_QTY AS PRODUCEDQTY
					      ,IMPORT_QTY AS IMPORTQTY
					      ,FAULT_QTY AS FAULTQTY
					      ,DAILY_QTY AS DAILYQTY
					      ,DAY_GOAL_QTY AS DAYGOALQTY
					      ,DAY_IMPORT_QTY AS DAYIMPORTQTY
					      ,DAY_FAULT_QTY AS DAYFAULTQTY
					      ,WORK_PLAN_START_DATE AS WORKPLANSTARTDATE
					      ,FIRST_ORDER AS FIRSTORDER
					      ,EMPLOYEE_NUMBER AS EMPLOYEENUMBER
					      ,KR_NAME AS KRNAME
					      ,OPERATE_YN AS OPERATEYN
		    FROM CB_NEW_WORK_ORDER_LIST_V
        ]]>
    </sql>

    <sql id="prod.work.process.new.list.sql-where">
         WHERE 1 = 1
         <isNotEmpty property="ORGID" prepend="AND">
            ORG_ID = #ORGID#
         </isNotEmpty>
         <isNotEmpty property="COMPANYID" prepend="AND">
            COMPANY_ID = #COMPANYID#
         </isNotEmpty>
         <!-- <isNotEmpty property="EMPLOYEENUMBER" prepend="AND">
            EMPLOYEE_NUMBER LIKE '%' || #EMPLOYEENUMBER# || '%'
         </isNotEmpty> -->
         <isNotEmpty property="EMPLOYEENUMBER" prepend="AND">
            <![CDATA[
            ((SELECT DISTINCT REGEXP_SUBSTR(EMPLOYEE_NUMBER, '[^,]+', 1, 1) TXT
		          FROM DUAL
		        CONNECT BY LEVEL <= LENGTH(REGEXP_REPLACE(EMPLOYEE_NUMBER, '[^,]+', '')) + 1) = #EMPLOYEENUMBER#
		    OR (SELECT DISTINCT REGEXP_SUBSTR(EMPLOYEE_NUMBER, '[^,]+', 1, 2) TXT
		          FROM DUAL
		        CONNECT BY LEVEL <= LENGTH(REGEXP_REPLACE(EMPLOYEE_NUMBER, '[^,]+', '')) + 1) = #EMPLOYEENUMBER#
		    OR (SELECT DISTINCT REGEXP_SUBSTR(EMPLOYEE_NUMBER, '[^,]+', 1, 3) TXT
		          FROM DUAL
		        CONNECT BY LEVEL <= LENGTH(REGEXP_REPLACE(EMPLOYEE_NUMBER, '[^,]+', '')) + 1) = #EMPLOYEENUMBER#
		       )
            ]]>
         </isNotEmpty>
         ORDER BY ORG_ID, COMPANY_ID, FIRST_ORDER, WORK_ORDER_ID, WORK_ORDER_SEQ, WORK_LEV
    </sql>

    <select id="prod.work.process.new.list.select" parameterClass="java.util.Map"
        resultClass="java.util.HashMap">
        <include refid="prod.work.process.new.list.sql-select" />
        <include refid="prod.work.process.new.list.sql-where" />
    </select>

    <select id="prod.work.process.new.list.count" parameterClass="java.util.Map"
        resultClass="java.lang.Integer">
        SELECT COUNT(*) FROM (
            <include refid="prod.work.process.new.list.sql-select" />
            <include refid="prod.work.process.new.list.sql-where" />
        ) TOT
    </select>
    <!-- 작업반 / 설비 선택 없이 조회하는 작업지시 조회 화면 END -->
    
    
    <!-- 작업반 / 설비 선택 없이 조회하는 자주검사 조회 화면 START -->
    <sql id="prod.work.check.new.list.sql-select">
       <![CDATA[
       SELECT RANK() OVER(ORDER BY ORG_ID, COMPANY_ID, WORK_ORDER_ID, WORK_ORDER_SEQ, FML_ID) AS RN
                ,ORG_ID AS ORGID
                ,COMPANY_ID AS COMPANYID
                ,WORK_ORDER_ID AS WORKORDERID
                ,WORK_ORDER_SEQ AS WORKORDERSEQ
                ,WORK_PLAN_START_DATE AS WORKPLANSTARTDATE
                ,ITEM_CODE AS ITEMCODE
                ,WORK_DEPT AS WORKDEPT
                ,WORK_CENTER_CODE AS WORKCENTERCODE
                ,ORDER_NAME AS ORDERNAME
                ,DRAWING_NO AS DRAWINGNO
                ,ITEM_NAME AS ITEMNAME
                ,MODEL AS MODEL
                ,MODEL_NAME AS MODELNAME
                ,UOM AS UOM
                ,UOM_NAME AS UOMNAME
                ,CAR_TYPE AS CARTYPE
                ,CAR_TYPE_NAME AS CARTYPENAME
                ,ITEM_STANDARD_DETAIL AS ITEMSTANDARDDETAIL
                ,ROUTING_ID AS ROUTINGID
                ,ROUTING_COLOR AS ROUTINGCOLOR
                ,ROUTING_OP AS ROUTINGOP
                ,ROUTING_NAME AS ROUTINGNAME
                ,WORK_CENTER_NAME AS WORKCENTERNAME
                ,WORK_ORDER_QTY AS WORKORDERQTY
                ,PRODUCED_QTY AS PRODUCEDQTY
                ,WORKER_QTY AS WORKERQTY
                ,FML_ID AS FMLID
                ,FML_TYPE AS FMLTYPE
                ,CHECK_BIG AS CHECKBIG
                ,CHECK_BIG_NAME AS CHECKBIGNAME
                ,WORK_EMPLOYEE AS WORKEMPLOYEE
                ,WORK_KR_NAME AS WORKKRNAME
                ,START_TIME AS STARTTIME
                ,END_TIME AS ENDTIME
                ,START_DATE AS STARTDATE
                ,END_DATE AS ENDDATE
                ,INSPECTION_YN AS INSPECTIONYN
                ,INSPECTION_YN_NAME AS INSPECTIONYNNAME
                ,CHECK_YN AS CHECKYN
        FROM CB_NEW_FML_CHECK_MASTER_V
        ]]>
    </sql>

    <sql id="prod.work.check.new.list.sql-where">
         WHERE 1 = 1
         <isNotEmpty property="ORGID" prepend="AND">
            ORG_ID = #ORGID#
         </isNotEmpty>
         <isNotEmpty property="COMPANYID" prepend="AND">
            COMPANY_ID = #COMPANYID#
         </isNotEmpty>
         <isNotEmpty property="CHECKBIG" prepend="AND">
            CHECK_BIG = #CHECKBIG#
         </isNotEmpty>
         <isNotEmpty property="GUBUN" prepend="AND">
            WORK_DEPT = #GUBUN#
         </isNotEmpty>
         ORDER BY ORG_ID, COMPANY_ID, WORK_ORDER_ID, WORK_ORDER_SEQ, FML_ID
    </sql>

    <select id="prod.work.check.new.list.select" parameterClass="java.util.Map"
        resultClass="java.util.HashMap">
        <include refid="prod.work.check.new.list.sql-select" />
        <include refid="prod.work.check.new.list.sql-where" />
    </select>

    <select id="prod.work.check.new.list.count" parameterClass="java.util.Map"
        resultClass="java.lang.Integer">
        SELECT COUNT(*) FROM (
            <include refid="prod.work.check.new.list.sql-select" />
            <include refid="prod.work.check.new.list.sql-where" />
        ) TOT
    </select>
    <!-- 작업반 / 설비 선택 없이 조회하는 자주검사 조회 화면 END -->
    
    <!-- 일괄 투입확정 시 외주발주 전 해당 작지데이터 생성 시작 -->
     <insert id="prod.work.outorder.temp.insert" parameterClass="java.util.Map">
      <![CDATA[
          INSERT INTO CB_WORK_OUT_TEMP
            (ORG_ID
            ,COMPANY_ID
            ,WORK_ORDER_ID
            ,WORK_ORDER_SEQ
	          )
	          VALUES
            (#ORGID#
            ,#COMPANYID#
            ,#WORKORDERID#
            ,#WORKORDERSEQ#
            )
	      ]]>
	  </insert>
    <!-- 일괄 투입확정 시 외주발주 전 해당 작지데이터 생성 시작 -->
    
    <!-- 공정관리 작업지시등록 조회 -->
    <sql id="prod.workorder.process.list.sql-select">
       <![CDATA[
        SELECT RANK() OVER(ORDER BY GR.ITEMNAME DESC, RC.ROUTING_NAME DESC ,GR.CARTYPENAME, NVL(GR.SORTORDER, 999), GR.ITEMSTANDARD, DECODE(GR.LV
							                                                                                                                                                                                          , 1,GR.WORKCENTERNAME
							                                                                                                                                                                                          , 2,GR.WORKCENTERNAME2
							                                                                                                                                                                                          , 3,GR.WORKCENTERNAME3
							                                                                                                                                                                                          , 4,GR.WORKCENTERNAME4
							                                                                                                                                                                                          , 5,GR.WORKCENTERNAME5
							                                                                                                                                                                                          , 6,GR.WORKCENTERNAME6
							                                                                                                                                                                                          , 7,GR.WORKCENTERNAME7
							                                                                                                                                                                                          , 8,GR.WORKCENTERNAME8
							                                                                                                                                                                                          , 9,GR.WORKCENTERNAME9
							                                                                                                                                                                                          ,10,GR.WORKCENTERNAME10
							                                                                                                                                                                                          ,11,GR.WORKCENTERNAME11
							                                                                                                                                                                                          ,12,GR.WORKCENTERNAME12
							                                                                                                                                                                                          ,13,GR.WORKCENTERNAME13
							                                                                                                                                                                                          ,14,GR.WORKCENTERNAME14
							                                                                                                                                                                                          ,15,GR.WORKCENTERNAME15), GR.LV, GR.WORKORDERID DESC, GR.WORKORDERSEQ) AS RN
              ,DECODE(GR.WORKORDERSEQ,MAXSEQ, 'Y','N') AS RK
              ,GR.ORGID
              ,GR.COMPANYID
              ,GR.WORKORDERID
              ,GR.WORKORDERSEQ
              ,GR.WORKTYPE
              ,GR.WORKTYPENAME
              ,GR.WORKSTATUS
              ,GR.WORKSTATUSNAME
              ,GR.SNP
              ,GR.GROUPCODE
              ,GR.ROUTINGCODE AS ROUTINGCODE
              ,RC.ROUTING_NO AS ROUTINGNO
              ,RC.ROUTING_OP AS ROUTINGOP
              ,RC.ROUTING_NAME AS ROUTINGNAME
              ,GR.EQUIPMENTCODE AS EQUIPMENTCODE
              ,DECODE(GR.LV
                        , 1,GR.WORKCENTERCODE
                        , 2,GR.WORKCENTERCODE2
                        , 3,GR.WORKCENTERCODE3
                        , 4,GR.WORKCENTERCODE4
                        , 5,GR.WORKCENTERCODE5
                        , 6,GR.WORKCENTERCODE6
                        , 7,GR.WORKCENTERCODE7
                        , 8,GR.WORKCENTERCODE8
                        , 9,GR.WORKCENTERCODE9
                        ,10,GR.WORKCENTERCODE10
                        ,11,GR.WORKCENTERCODE11
                        ,12,GR.WORKCENTERCODE12
                        ,13,GR.WORKCENTERCODE13
                        ,14,GR.WORKCENTERCODE14
                        ,15,GR.WORKCENTERCODE15) AS WORKCENTERCODE
              ,DECODE(GR.LV
                        , 1,GR.WORKCENTERNAME
                        , 2,GR.WORKCENTERNAME2
                        , 3,GR.WORKCENTERNAME3
                        , 4,GR.WORKCENTERNAME4
                        , 5,GR.WORKCENTERNAME5
                        , 6,GR.WORKCENTERNAME6
                        , 7,GR.WORKCENTERNAME7
                        , 8,GR.WORKCENTERNAME8
                        , 9,GR.WORKCENTERNAME9
                        ,10,GR.WORKCENTERNAME10
                        ,11,GR.WORKCENTERNAME11
                        ,12,GR.WORKCENTERNAME12
                        ,13,GR.WORKCENTERNAME13
                        ,14,GR.WORKCENTERNAME14
                        ,15,GR.WORKCENTERNAME15) AS WORKCENTERNAME
              ,GR.FMLYN AS FMLYN
              ,GR.WORKORDERQTY AS WORKORDERQTY
              ,GR.ITEMCODE
              ,GR.ITEMNAME
              ,GR.ORDERNAME
              ,GR.CARTYPE
              ,GR.CARTYPENAME
              ,GR.ITEMSTANDARD
              ,GR.SORTORDER
              ,GR.BOXCNT
              ,GR.UOM
              ,GR.UOMNAME
              ,GR.WORKORDERQTY
              ,(SELECT MAX( WOD.WORKER) 
                  FROM CB_WORK_ORDER_D WOD
                 WHERE WOD.ORG_ID = GR.ORGID
                   AND WOD.COMPANY_ID = GR.COMPANYID
                   AND WOD.WORK_ORDER_ID = GR.WORKORDERID
                   AND WOD.WORK_ORDER_SEQ = GR.WORKORDERSEQ
                   AND WOD.WORK_CENTER_CODE = DECODE(GR.LV
																								                        , 1,GR.WORKCENTERCODE
																								                        , 2,GR.WORKCENTERCODE2
																								                        , 3,GR.WORKCENTERCODE3
																								                        , 4,GR.WORKCENTERCODE4
																								                        , 5,GR.WORKCENTERCODE5
																								                        , 6,GR.WORKCENTERCODE6
																								                        , 7,GR.WORKCENTERCODE7
																								                        , 8,GR.WORKCENTERCODE8
																								                        , 9,GR.WORKCENTERCODE9
																								                        ,10,GR.WORKCENTERCODE10
																								                        ,11,GR.WORKCENTERCODE11
																								                        ,12,GR.WORKCENTERCODE12
																								                        ,13,GR.WORKCENTERCODE13
																								                        ,14,GR.WORKCENTERCODE14
																								                        ,15,GR.WORKCENTERCODE15)
                   AND (WOD.START_TIME IS NOT NULL
                   AND WOD.END_TIME IS NULL)) AS WORKER
              ,(SELECT HM.KR_NAME
                  FROM CB_HUMANRESOURCE_MANAGER HM
                 WHERE HM.EMPLOYEE_NUMBER = (SELECT MAX(WOD.WORKER) 
                                              FROM CB_WORK_ORDER_D WOD
                                             WHERE WOD.ORG_ID = GR.ORGID
                                               AND WOD.COMPANY_ID = GR.COMPANYID
                                               AND WOD.WORK_ORDER_ID = GR.WORKORDERID
                                               AND WOD.WORK_ORDER_SEQ = GR.WORKORDERSEQ
                                               AND WOD.WORK_CENTER_CODE = DECODE(GR.LV
																																						                        , 1,GR.WORKCENTERCODE
																																						                        , 2,GR.WORKCENTERCODE2
																																						                        , 3,GR.WORKCENTERCODE3
																																						                        , 4,GR.WORKCENTERCODE4
																																						                        , 5,GR.WORKCENTERCODE5
																																						                        , 6,GR.WORKCENTERCODE6
																																						                        , 7,GR.WORKCENTERCODE7
																																						                        , 8,GR.WORKCENTERCODE8
																																						                        , 9,GR.WORKCENTERCODE9
																																						                        ,10,GR.WORKCENTERCODE10
																																						                        ,11,GR.WORKCENTERCODE11
																																						                        ,12,GR.WORKCENTERCODE12
																																						                        ,13,GR.WORKCENTERCODE13
																																						                        ,14,GR.WORKCENTERCODE14
																																						                        ,15,GR.WORKCENTERCODE15)
                                               AND (WOD.START_TIME IS NOT NULL
                                               AND WOD.END_TIME IS NULL ))) AS WORKER2NAME
              ,CB_MFG_PKG.CB_WORK_FIND_DAY_QTY(GR.ORGID
                                              ,GR.COMPANYID
                                              ,GR.WORKORDERID
                                              ,GR.WORKORDERSEQ
                                              ,DECODE(GR.LV
																                        , 1,GR.WORKCENTERCODE
																                        , 2,GR.WORKCENTERCODE2
																                        , 3,GR.WORKCENTERCODE3
																                        , 4,GR.WORKCENTERCODE4
																                        , 5,GR.WORKCENTERCODE5
																                        , 6,GR.WORKCENTERCODE6
																                        , 7,GR.WORKCENTERCODE7
																                        , 8,GR.WORKCENTERCODE8
																                        , 9,GR.WORKCENTERCODE9
																                        ,10,GR.WORKCENTERCODE10
																                        ,11,GR.WORKCENTERCODE11
																                        ,12,GR.WORKCENTERCODE12
																                        ,13,GR.WORKCENTERCODE13
																                        ,14,GR.WORKCENTERCODE14
																                        ,15,GR.WORKCENTERCODE15)
                                              ,'WORKER') AS WORKERNAME
              ,CB_MFG_PKG.CB_WORK_FIND_DAY_QTY(GR.ORGID
                                                              ,GR.COMPANYID
                                                              ,GR.WORKORDERID
                                                              ,GR.WORKORDERSEQ
                                                              ,DECODE(GR.LV
																								                        , 1,GR.WORKCENTERCODE
																								                        , 2,GR.WORKCENTERCODE2
																								                        , 3,GR.WORKCENTERCODE3
																								                        , 4,GR.WORKCENTERCODE4
																								                        , 5,GR.WORKCENTERCODE5
																								                        , 6,GR.WORKCENTERCODE6
																								                        , 7,GR.WORKCENTERCODE7
																								                        , 8,GR.WORKCENTERCODE8
																								                        , 9,GR.WORKCENTERCODE9
																								                        ,10,GR.WORKCENTERCODE10
																								                        ,11,GR.WORKCENTERCODE11
																								                        ,12,GR.WORKCENTERCODE12
																								                        ,13,GR.WORKCENTERCODE13
																								                        ,14,GR.WORKCENTERCODE14
																								                        ,15,GR.WORKCENTERCODE15)
                                                              ,'IMPORT_QTY') AS DAYIMPORTQTY
              ,CB_MFG_PKG.CB_WORK_FIND_DAY_QTY(GR.ORGID
                                                              ,GR.COMPANYID
                                                              ,GR.WORKORDERID
                                                              ,GR.WORKORDERSEQ
                                                              ,DECODE(GR.LV
																								                        , 1,GR.WORKCENTERCODE
																								                        , 2,GR.WORKCENTERCODE2
																								                        , 3,GR.WORKCENTERCODE3
																								                        , 4,GR.WORKCENTERCODE4
																								                        , 5,GR.WORKCENTERCODE5
																								                        , 6,GR.WORKCENTERCODE6
																								                        , 7,GR.WORKCENTERCODE7
																								                        , 8,GR.WORKCENTERCODE8
																								                        , 9,GR.WORKCENTERCODE9
																								                        ,10,GR.WORKCENTERCODE10
																								                        ,11,GR.WORKCENTERCODE11
																								                        ,12,GR.WORKCENTERCODE12
																								                        ,13,GR.WORKCENTERCODE13
																								                        ,14,GR.WORKCENTERCODE14
																								                        ,15,GR.WORKCENTERCODE15)
                                                              ,'FAULT_QTY') AS DAYFAULTQTY
              ,GR.QTY + GR.LOSSQTY  AS PRODUCEDQTY
              ,GR.QTY AS IMPORTQTY                          
              ,GR.LOSSQTY + GR.FAULTQTY AS DEFECTEDQTY
              ,TO_CHAR(GR.WORKSTARTDATE, 'YYYY-MM-DD') AS WORKSTARTDATE2
              ,TO_CHAR(GR.WORKSTARTDATE, 'YYYY-MM-DD HH24:MI') AS WORKSTARTDATE
              ,TO_CHAR(GR.WORKENDDATE, 'YYYY-MM-DD') AS WORKENDDATE
              ,TO_CHAR(GR.WORKPLANSTARTDATE, 'YYYY-MM-DD') AS WORKPLANSTARTDATE
              ,TO_CHAR(GR.WORKPLANENDDATE, 'YYYY-MM-DD') AS WORKPLANENDDATE
              ,DECODE(GR.MINSEQYN,
                         'Y', GR.WORKORDERQTY,
                         (SELECT SUM(WOD.QTY)
                           FROM CB_WORK_ORDER_D WOD
                          WHERE WOD.ORG_ID = GR.ORGID
                            AND WOD.COMPANY_ID = GR.COMPANYID
                            AND WOD.WORK_ORDER_ID = GR.WORKORDERID
                            AND WOD.WORK_ORDER_SEQ = GR.MAXSEQ)) AS PREWORKQTY
              ,0 AS CYCLEQTY
         FROM ( SELECT /*+ rule */ WOH.ORG_ID AS ORGID
			                ,WOH.COMPANY_ID AS COMPANYID
			                ,WOH.WORK_ORDER_ID AS WORKORDERID
			                ,WOH.WORK_TYPE AS WORKTYPE
			                ,(SELECT SC.SMALL_NAME
			                    FROM CB_SMALL_CODE SC
			                   WHERE SC.ORG_ID = WOH.ORG_ID
			                     AND SC.COMPANY_ID = WOH.COMPANY_ID
			                     AND SC.BIG_CODE = 'MFG'
			                     AND SC.MIDDLE_CODE = 'WORK_TYPE'
			                     AND SC.SMALL_CODE = WOH.WORK_TYPE) AS WORKTYPENAME
			                ,WO.WORK_ORDER_SEQ AS WORKORDERSEQ
			                ,WO.GROUP_CODE AS GROUPCODE
			                ,WO.EQUIPMENT_CODE AS EQUIPMENTCODE
			                ,WO.WORK_CENTER_CODE AS WORKCENTERCODE
			                ,WO.ROUTING_CODE AS ROUTINGCODE
			                ,(SELECT WC.WORK_CENTER_NAME
			                    FROM CB_WORK_CENTER WC
			                   WHERE WC.ORG_ID = WO.ORG_ID
			                     AND WC.COMPANY_ID = WO.COMPANY_ID
			                     AND WC.WORK_CENTER_CODE = WO.WORK_CENTER_CODE
			                 ) AS WORKCENTERNAME
			                ,(SELECT WC.WORK_DEPT
			                    FROM CB_WORK_CENTER WC
			                   WHERE WC.ORG_ID = WO.ORG_ID
			                     AND WC.COMPANY_ID = WO.COMPANY_ID
			                     AND WC.WORK_CENTER_CODE = WO.WORK_CENTER_CODE) AS WORKDEPT
			                ,WO.WORK_CENTER_CODE2 AS WORKCENTERCODE2
			                ,(SELECT WC.WORK_CENTER_NAME
			                    FROM CB_WORK_CENTER WC
			                   WHERE WC.ORG_ID = WO.ORG_ID
			                     AND WC.COMPANY_ID = WO.COMPANY_ID
			                     AND WC.WORK_CENTER_CODE = WO.WORK_CENTER_CODE2
			                 ) AS WORKCENTERNAME2
			                ,(SELECT WC.WORK_DEPT
			                    FROM CB_WORK_CENTER WC
			                   WHERE WC.ORG_ID = WO.ORG_ID
			                     AND WC.COMPANY_ID = WO.COMPANY_ID
			                     AND WC.WORK_CENTER_CODE = WO.WORK_CENTER_CODE2) AS WORKDEPT2
			                ,WO.WORK_CENTER_CODE3 AS WORKCENTERCODE3
			                ,(SELECT WC.WORK_CENTER_NAME
			                    FROM CB_WORK_CENTER WC
			                   WHERE WC.ORG_ID = WO.ORG_ID
			                     AND WC.COMPANY_ID = WO.COMPANY_ID
			                     AND WC.WORK_CENTER_CODE = WO.WORK_CENTER_CODE3
			                 ) AS WORKCENTERNAME3
			                ,(SELECT WC.WORK_DEPT
			                    FROM CB_WORK_CENTER WC
			                   WHERE WC.ORG_ID = WO.ORG_ID
			                     AND WC.COMPANY_ID = WO.COMPANY_ID
			                     AND WC.WORK_CENTER_CODE = WO.WORK_CENTER_CODE3) AS WORKDEPT3
			                ,WO.WORK_CENTER_CODE4 AS WORKCENTERCODE4
			                ,(SELECT WC.WORK_CENTER_NAME
			                    FROM CB_WORK_CENTER WC
			                   WHERE WC.ORG_ID = WO.ORG_ID
			                     AND WC.COMPANY_ID = WO.COMPANY_ID
			                     AND WC.WORK_CENTER_CODE = WO.WORK_CENTER_CODE4
			                 ) AS WORKCENTERNAME4
			                ,(SELECT WC.WORK_DEPT
			                    FROM CB_WORK_CENTER WC
			                   WHERE WC.ORG_ID = WO.ORG_ID
			                     AND WC.COMPANY_ID = WO.COMPANY_ID
			                     AND WC.WORK_CENTER_CODE = WO.WORK_CENTER_CODE4) AS WORKDEPT4
			                ,WO.WORK_CENTER_CODE5 AS WORKCENTERCODE5
			                ,(SELECT WC.WORK_CENTER_NAME
			                    FROM CB_WORK_CENTER WC
			                   WHERE WC.ORG_ID = WO.ORG_ID
			                     AND WC.COMPANY_ID = WO.COMPANY_ID
			                     AND WC.WORK_CENTER_CODE = WO.WORK_CENTER_CODE5
			                 ) AS WORKCENTERNAME5
			                ,(SELECT WC.WORK_DEPT
			                    FROM CB_WORK_CENTER WC
			                   WHERE WC.ORG_ID = WO.ORG_ID
			                     AND WC.COMPANY_ID = WO.COMPANY_ID
			                     AND WC.WORK_CENTER_CODE = WO.WORK_CENTER_CODE5) AS WORKDEPT5
                      ,WO.WORK_CENTER_CODE6 AS WORKCENTERCODE6
                      ,(SELECT WC.WORK_CENTER_NAME
                          FROM CB_WORK_CENTER WC
                         WHERE WC.ORG_ID = WO.ORG_ID
                           AND WC.COMPANY_ID = WO.COMPANY_ID
                           AND WC.WORK_CENTER_CODE = WO.WORK_CENTER_CODE6
                       ) AS WORKCENTERNAME6
                      ,(SELECT WC.WORK_DEPT
                          FROM CB_WORK_CENTER WC
                         WHERE WC.ORG_ID = WO.ORG_ID
                           AND WC.COMPANY_ID = WO.COMPANY_ID
                           AND WC.WORK_CENTER_CODE = WO.WORK_CENTER_CODE6) AS WORKDEPT6
                      ,WO.WORK_CENTER_CODE7 AS WORKCENTERCODE7
                      ,(SELECT WC.WORK_CENTER_NAME
                          FROM CB_WORK_CENTER WC
                         WHERE WC.ORG_ID = WO.ORG_ID
                           AND WC.COMPANY_ID = WO.COMPANY_ID
                           AND WC.WORK_CENTER_CODE = WO.WORK_CENTER_CODE7
                       ) AS WORKCENTERNAME7
                      ,(SELECT WC.WORK_DEPT
                          FROM CB_WORK_CENTER WC
                         WHERE WC.ORG_ID = WO.ORG_ID
                           AND WC.COMPANY_ID = WO.COMPANY_ID
                           AND WC.WORK_CENTER_CODE = WO.WORK_CENTER_CODE7) AS WORKDEPT7
                      ,WO.WORK_CENTER_CODE8 AS WORKCENTERCODE8
                      ,(SELECT WC.WORK_CENTER_NAME
                          FROM CB_WORK_CENTER WC
                         WHERE WC.ORG_ID = WO.ORG_ID
                           AND WC.COMPANY_ID = WO.COMPANY_ID
                           AND WC.WORK_CENTER_CODE = WO.WORK_CENTER_CODE8
                       ) AS WORKCENTERNAME8
                      ,(SELECT WC.WORK_DEPT
                          FROM CB_WORK_CENTER WC
                         WHERE WC.ORG_ID = WO.ORG_ID
                           AND WC.COMPANY_ID = WO.COMPANY_ID
                           AND WC.WORK_CENTER_CODE = WO.WORK_CENTER_CODE8) AS WORKDEPT8
                      ,WO.WORK_CENTER_CODE9 AS WORKCENTERCODE9
                      ,(SELECT WC.WORK_CENTER_NAME
                          FROM CB_WORK_CENTER WC
                         WHERE WC.ORG_ID = WO.ORG_ID
                           AND WC.COMPANY_ID = WO.COMPANY_ID
                           AND WC.WORK_CENTER_CODE = WO.WORK_CENTER_CODE9
                       ) AS WORKCENTERNAME9
                      ,(SELECT WC.WORK_DEPT
                          FROM CB_WORK_CENTER WC
                         WHERE WC.ORG_ID = WO.ORG_ID
                           AND WC.COMPANY_ID = WO.COMPANY_ID
                           AND WC.WORK_CENTER_CODE = WO.WORK_CENTER_CODE9) AS WORKDEPT9
                      ,WO.WORK_CENTER_CODE10 AS WORKCENTERCODE10
                      ,(SELECT WC.WORK_CENTER_NAME
                          FROM CB_WORK_CENTER WC
                         WHERE WC.ORG_ID = WO.ORG_ID
                           AND WC.COMPANY_ID = WO.COMPANY_ID
                           AND WC.WORK_CENTER_CODE = WO.WORK_CENTER_CODE10
                       ) AS WORKCENTERNAME10
                      ,(SELECT WC.WORK_DEPT
                          FROM CB_WORK_CENTER WC
                         WHERE WC.ORG_ID = WO.ORG_ID
                           AND WC.COMPANY_ID = WO.COMPANY_ID
                           AND WC.WORK_CENTER_CODE = WO.WORK_CENTER_CODE10) AS WORKDEPT10
                      ,WO.WORK_CENTER_CODE11 AS WORKCENTERCODE11
                      ,(SELECT WC.WORK_CENTER_NAME
                          FROM CB_WORK_CENTER WC
                         WHERE WC.ORG_ID = WO.ORG_ID
                           AND WC.COMPANY_ID = WO.COMPANY_ID
                           AND WC.WORK_CENTER_CODE = WO.WORK_CENTER_CODE11
                       ) AS WORKCENTERNAME11
                      ,(SELECT WC.WORK_DEPT
                          FROM CB_WORK_CENTER WC
                         WHERE WC.ORG_ID = WO.ORG_ID
                           AND WC.COMPANY_ID = WO.COMPANY_ID
                           AND WC.WORK_CENTER_CODE = WO.WORK_CENTER_CODE11) AS WORKDEPT11
                      ,WO.WORK_CENTER_CODE12 AS WORKCENTERCODE12
                      ,(SELECT WC.WORK_CENTER_NAME
                          FROM CB_WORK_CENTER WC
                         WHERE WC.ORG_ID = WO.ORG_ID
                           AND WC.COMPANY_ID = WO.COMPANY_ID
                           AND WC.WORK_CENTER_CODE = WO.WORK_CENTER_CODE12
                       ) AS WORKCENTERNAME12
                      ,(SELECT WC.WORK_DEPT
                          FROM CB_WORK_CENTER WC
                         WHERE WC.ORG_ID = WO.ORG_ID
                           AND WC.COMPANY_ID = WO.COMPANY_ID
                           AND WC.WORK_CENTER_CODE = WO.WORK_CENTER_CODE12) AS WORKDEPT12
                      ,WO.WORK_CENTER_CODE13 AS WORKCENTERCODE13
                      ,(SELECT WC.WORK_CENTER_NAME
                          FROM CB_WORK_CENTER WC
                         WHERE WC.ORG_ID = WO.ORG_ID
                           AND WC.COMPANY_ID = WO.COMPANY_ID
                           AND WC.WORK_CENTER_CODE = WO.WORK_CENTER_CODE13
                       ) AS WORKCENTERNAME13
                      ,(SELECT WC.WORK_DEPT
                          FROM CB_WORK_CENTER WC
                         WHERE WC.ORG_ID = WO.ORG_ID
                           AND WC.COMPANY_ID = WO.COMPANY_ID
                           AND WC.WORK_CENTER_CODE = WO.WORK_CENTER_CODE13) AS WORKDEPT13
                      ,WO.WORK_CENTER_CODE14 AS WORKCENTERCODE14
                      ,(SELECT WC.WORK_CENTER_NAME
                          FROM CB_WORK_CENTER WC
                         WHERE WC.ORG_ID = WO.ORG_ID
                           AND WC.COMPANY_ID = WO.COMPANY_ID
                           AND WC.WORK_CENTER_CODE = WO.WORK_CENTER_CODE14
                       ) AS WORKCENTERNAME14
                      ,(SELECT WC.WORK_DEPT
                          FROM CB_WORK_CENTER WC
                         WHERE WC.ORG_ID = WO.ORG_ID
                           AND WC.COMPANY_ID = WO.COMPANY_ID
                           AND WC.WORK_CENTER_CODE = WO.WORK_CENTER_CODE14) AS WORKDEPT14
                      ,WO.WORK_CENTER_CODE15 AS WORKCENTERCODE15
                      ,(SELECT WC.WORK_CENTER_NAME
                          FROM CB_WORK_CENTER WC
                         WHERE WC.ORG_ID = WO.ORG_ID
                           AND WC.COMPANY_ID = WO.COMPANY_ID
                           AND WC.WORK_CENTER_CODE = WO.WORK_CENTER_CODE15
                       ) AS WORKCENTERNAME15
                      ,(SELECT WC.WORK_DEPT
                          FROM CB_WORK_CENTER WC
                         WHERE WC.ORG_ID = WO.ORG_ID
                           AND WC.COMPANY_ID = WO.COMPANY_ID
                           AND WC.WORK_CENTER_CODE = WO.WORK_CENTER_CODE15) AS WORKDEPT15
			                ,WOH.ITEM_CODE AS ITEMCODE
			                ,IM.ITEM_NAME AS ITEMNAME
			                ,IM.ORDER_NAME AS ORDERNAME
			                ,IM.ITEM_STANDARD_DETAIL AS ITEMSTANDARD
			                ,IM.SORT_ORDER AS SORTORDER
			                ,IM.CAR_TYPE AS CARTYPE
			                ,(SELECT SC.SMALL_NAME
			                    FROM CB_SMALL_CODE SC
			                   WHERE SC.ORG_ID = WOH.ORG_ID
			                     AND SC.COMPANY_ID = WOH.COMPANY_ID
			                     AND SC.BIG_CODE = 'CMM'
			                     AND SC.MIDDLE_CODE = 'MODEL'
			                     AND SC.SMALL_CODE = IM.CAR_TYPE) AS CARTYPENAME
			                ,IM.UOM AS UOM
			                ,(SELECT SC.SMALL_NAME
			                    FROM CB_SMALL_CODE SC
			                   WHERE SC.ORG_ID = WOH.ORG_ID
			                     AND SC.COMPANY_ID = WOH.COMPANY_ID
			                     AND SC.BIG_CODE = 'CMM'
			                     AND SC.MIDDLE_CODE = 'UOM'
			                     AND SC.SMALL_CODE = IM.UOM) AS UOMNAME
			                ,IM.BOX_CNT AS BOXCNT
			                ,WO.WORK_STATUS AS WORKSTATUS
			                ,(SELECT SC.SMALL_NAME
			                    FROM CB_SMALL_CODE SC
			                   WHERE SC.ORG_ID = WOH.ORG_ID
			                     AND SC.COMPANY_ID = WOH.COMPANY_ID
			                     AND SC.BIG_CODE = 'MFG'
			                     AND SC.MIDDLE_CODE = 'STATUS'
			                     AND SC.SMALL_CODE = WO.WORK_STATUS) AS WORKSTATUSNAME
			                ,WOH.WORK_ORDER_QTY AS WORKORDERQTY
			                ,WOH.LOT_NO AS LOTNO
			                ,WOH.LOT_NO_VISUAL AS LOTNOVISUAL
			                ,WO.WORK_START_DATE AS WORKSTARTDATE
			                ,WO.WORK_END_DATE AS WORKENDDATE
			                ,WO.WORK_PLAN_START_DATE AS WORKPLANSTARTDATE
			                ,WO.WORK_PLAN_END_DATE AS WORKPLANENDDATE
			                ,WOH.CLOSE_REASON AS CLOSEREASON
			                ,WOH.INSERT_TIME AS INSERTTIME
			                ,WOH.REMARKS AS REMARKS
			                ,WOH.MOLD_CODE AS MOLDCODE
			                ,(SELECT CM.MOLD_NAME
			                    FROM CB_MOLD CM
			                   WHERE CM.ORG_ID = WOH.ORG_ID
			                     AND CM.COMPANY_ID = WOH.COMPANY_ID
			                     AND CM.MOLD_CODE = WOH.MOLD_CODE) AS MOLDNAME
			                ,WOH.PRINT_QTY AS PRINTQTY
			                ,DECODE((SELECT MAX(WO2.WORK_ORDER_SEQ)
			                           FROM CB_WORK_ORDER WO2
			                          WHERE WO2.ORG_ID = WO.ORG_ID
			                            AND WO2.COMPANY_ID = WO.COMPANY_ID
			                            AND WO2.WORK_ORDER_ID = WO.WORK_ORDER_ID
			                            AND WO2.WORK_ORDER_SEQ < WO.WORK_ORDER_SEQ), '', 'Y', 'N') AS MINSEQYN
		                  ,IM.SNP
		                  ,LV.LV
		                  ,(SELECT MAX(CWO.WORK_ORDER_SEQ)
		                      FROM CB_WORK_ORDER CWO
		                     WHERE CWO.ORG_ID = WO.ORG_ID
		                       AND CWO.COMPANY_ID = WO.COMPANY_ID
		                       AND CWO.WORK_ORDER_ID = WO.WORK_ORDER_ID) AS MAXSEQ
		                  ,(SELECT MIN(CASE WHEN CB_MFG_PKG.CB_FML_CHECK_QTY(FCR.ORG_ID
                                                     ,FCR.COMPANY_ID
                                                     ,FCR.FML_ID
                                                     ,FCR.ORDER_NO)  > 0 THEN
					                              'Y'
					                            ELSE
					                              'N'
					                            END
					                       )
					              FROM CB_WORK_ORDER_D WOD
					                  ,CB_FML_CHECK_MASTER FCM
					                  ,CB_FML_CHECK_RESULT FCR
					             WHERE WOD.ORG_ID = WO.ORG_ID
					               AND WOD.COMPANY_ID = WO.COMPANY_ID
					               AND WOD.WORK_ORDER_ID = WO.WORK_ORDER_ID
					               AND WOD.WORK_ORDER_SEQ = WO.WORK_ORDER_SEQ
					               AND FCM.ORG_ID = WOD.ORG_ID
					               AND FCM.COMPANY_ID = WOD.COMPANY_ID
					               AND FCM.WORK_ORDER_ID = WOD.WORK_ORDER_ID
					               AND FCM.WORK_ORDER_SEQ = WOD.WORK_ORDER_SEQ
					               AND FCM.EMPLOYEE_SEQ = WOD.SEQ_NO
					               AND FCM.ORG_ID = FCR.ORG_ID
					               AND FCM.COMPANY_ID = FCR.COMPANY_ID
					               AND FCM.FML_ID = FCR.FML_ID
					               AND WOD.END_TIME IS NULL) AS FMLYN
		                  ,NVL((SELECT NVL(SUM(WOD.QTY), 0)
		                           FROM CB_WORK_ORDER_D WOD
		                          WHERE WOD.ORG_ID = WO.ORG_ID
		                            AND WOD.COMPANY_ID = WO.COMPANY_ID
		                            AND WOD.WORK_ORDER_ID = WO.WORK_ORDER_ID
		                            AND WOD.WORK_ORDER_SEQ = WO.WORK_ORDER_SEQ), 0) AS QTY
		                  ,NVL((SELECT NVL(SUM(WOD.LOSS_QTY), 0)
		                           FROM CB_WORK_ORDER_D WOD
		                          WHERE WOD.ORG_ID = WO.ORG_ID
		                            AND WOD.COMPANY_ID = WO.COMPANY_ID
		                            AND WOD.WORK_ORDER_ID = WO.WORK_ORDER_ID
		                            AND WOD.WORK_ORDER_SEQ = WO.WORK_ORDER_SEQ), 0) AS LOSSQTY
		                  ,NVL((SELECT SUM(WOD.FAULT_QTY)
		                            FROM CB_WORK_ORDER_FAULT WOD
		                           WHERE WOD.ORG_ID = WO.ORG_ID
		                             AND WOD.COMPANY_ID = WO.COMPANY_ID
		                             AND WOD.WORK_ORDER_ID = WO.WORK_ORDER_ID
		                             AND WOD.WORK_ORDER_SEQ = WO.WORK_ORDER_SEQ), 0) AS FAULTQTY
			        FROM CB_WORK_ORDER_HEADER WOH
			            ,CB_ITEM_MASTER IM
			            ,CB_WORK_ORDER WO
			            ,(SELECT LEVEL AS LV
			                FROM DUAL 
			             CONNECT BY LEVEL <= 15) LV
			       WHERE WOH.ORG_ID = WO.ORG_ID
			         AND WOH.COMPANY_ID = WO.COMPANY_ID
			         AND WOH.WORK_ORDER_ID = WO.WORK_ORDER_ID
			         AND WO.ORG_ID = IM.ORG_ID
			         AND WO.COMPANY_ID = IM.COMPANY_ID
			         AND WO.ITEM_CODE = IM.ITEM_CODE
			         AND WO.WORK_STATUS NOT IN ('STAND_BY', 'CANCEL', 'HOLD', 'COMPLETE')
			         ) GR
			        ,CB_ROUTING_CONTROL RC
        ]]>
    </sql>

    <sql id="prod.workorder.process.list.sql-where">
				 WHERE GR.ORGID = RC.ORG_ID
				   AND GR.COMPANYID = RC.COMPANY_ID
				   AND GR.ROUTINGCODE = RC.ROUTING_ID
				   AND GR.ITEMCODE = RC.ITEM_CODE
         <isNotEmpty property="ORGID" prepend="AND">
            GR.ORGID = #ORGID#
         </isNotEmpty>
         <isNotEmpty property="COMPANYID" prepend="AND">
            GR.COMPANYID = #COMPANYID#
         </isNotEmpty>
         <isNotEmpty property="WORKTYPE" prepend="AND">
            GR.WORKTYPE = #WORKTYPE#
         </isNotEmpty>
         <isNotEmpty property="LOTNO" prepend="AND">
            GR.WORKORDERID = #LOTNO#
         </isNotEmpty>
         <isNotEmpty property="WORKORDERID" prepend="AND">
            GR.WORKORDERID = #WORKORDERID#
         </isNotEmpty>
         <isNotEmpty property="WORKCENTERCODE" prepend="AND">
            DECODE(GR.LV
                       , 1,GR.WORKCENTERCODE
                       , 2,GR.WORKCENTERCODE2
                       , 3,GR.WORKCENTERCODE3
                       , 4,GR.WORKCENTERCODE4
                       , 5,GR.WORKCENTERCODE5
                       , 6,GR.WORKCENTERCODE6
                       , 7,GR.WORKCENTERCODE7
                       , 8,GR.WORKCENTERCODE8
                       , 9,GR.WORKCENTERCODE9
                       ,10,GR.WORKCENTERCODE10
                       ,11,GR.WORKCENTERCODE11
                       ,12,GR.WORKCENTERCODE12
                       ,13,GR.WORKCENTERCODE13
                       ,14,GR.WORKCENTERCODE14
                       ,15,GR.WORKCENTERCODE15) = #WORKCENTERCODE#
         </isNotEmpty>
         <isNotEmpty property="WORKDEPT" prepend="AND">
            DECODE(GR.LV
                      , 1,GR.WORKDEPT
                      , 2,GR.WORKDEPT2
                      , 3,GR.WORKDEPT3
                      , 4,GR.WORKDEPT4
                      , 5,GR.WORKDEPT5
                      , 6,GR.WORKDEPT6
                      , 7,GR.WORKDEPT7
                      , 8,GR.WORKDEPT8
                      , 9,GR.WORKDEPT9
                      ,10,GR.WORKDEPT10
                      ,11,GR.WORKDEPT11
                      ,12,GR.WORKDEPT12
                      ,13,GR.WORKDEPT13
                      ,14,GR.WORKDEPT14
                      ,15,GR.WORKDEPT15) = #WORKDEPT#
         </isNotEmpty>
          ORDER BY GR.ITEMNAME DESC, RC.ROUTING_NAME DESC ,GR.CARTYPENAME, NVL(GR.SORTORDER, 999), GR.ITEMSTANDARD, DECODE(GR.LV
						                                                                                                                                                                  , 1,GR.WORKCENTERNAME
						                                                                                                                                                                  , 2,GR.WORKCENTERNAME2
						                                                                                                                                                                  , 3,GR.WORKCENTERNAME3
						                                                                                                                                                                  , 4,GR.WORKCENTERNAME4
						                                                                                                                                                                  , 5,GR.WORKCENTERNAME5
						                                                                                                                                                                  , 6,GR.WORKCENTERNAME6
						                                                                                                                                                                  , 7,GR.WORKCENTERNAME7
						                                                                                                                                                                  , 8,GR.WORKCENTERNAME8
						                                                                                                                                                                  , 9,GR.WORKCENTERNAME9
						                                                                                                                                                                  ,10,GR.WORKCENTERNAME10
						                                                                                                                                                                  ,11,GR.WORKCENTERNAME11
						                                                                                                                                                                  ,12,GR.WORKCENTERNAME12
						                                                                                                                                                                  ,13,GR.WORKCENTERNAME13
						                                                                                                                                                                  ,14,GR.WORKCENTERNAME14
						                                                                                                                                                                  ,15,GR.WORKCENTERNAME15), GR.LV, GR.WORKORDERID DESC, GR.WORKORDERSEQ
    </sql>

    <select id="prod.workorder.process.list.select" parameterClass="java.util.Map"
        resultClass="java.util.HashMap">
        <include refid="prod.workorder.process.list.sql-select" />
        <include refid="prod.workorder.process.list.sql-where" />
    </select>

    <select id="prod.workorder.process.list.count" parameterClass="java.util.Map"
        resultClass="java.lang.Integer">
        SELECT COUNT(*) FROM (
            <include refid="prod.workorder.process.list.sql-select" />
            <include refid="prod.workorder.process.list.sql-where" />
        ) TOT
    </select>
    
    <select id="prod.workorder.process.first.list.select" parameterClass="java.util.Map"
        resultClass="java.util.HashMap">
        SELECT T.ORGID, T.COMPANYID, T.WORKORDERID, T.WORKORDERSEQ 
         FROM(
                <include refid="prod.workorder.process.list.sql-select" />
                <include refid="prod.workorder.process.list.sql-where" />
                ) T
         WHERE ROWNUM = 1
    </select>
    <!-- 공정관리 작업지시등록 조회 끝 -->
    
    <!-- 생산실적 및 불량유형 등록 HEADER 조회 시작 -->
    <sql id="prod.work.orderresult.header.sql-select">
        SELECT RANK() OVER(ORDER BY A.ORG_ID, A.COMPANY_ID, A.WORK_ORDER_ID, A.WORK_ORDER_SEQ, A.SEQ_NO DESC, START_TIME DESC) AS RN
                 ,A.ORG_ID AS ORGID
                 ,A.COMPANY_ID AS COMPANYID
                 ,A.WORK_ORDER_ID AS WORKORDERID
                 ,A.WORK_ORDER_SEQ AS WORKORDERSEQ
                 ,A.SEQ_NO AS SEQNO
                 ,'' AS QTY
                 ,A.QTY AS HAPQTY
                 ,A.LOT_NO AS LOTNO
                 ,A.REMARKS
                 ,A.WORK_CENTER_CODE AS WORKCENTERCODE
                 ,(SELECT CWC.WORK_CENTER_NAME
                      FROM CB_WORK_CENTER CWC
                     WHERE CWC.ORG_ID = A.ORG_ID
                       AND CWC.COMPANY_ID = A.COMPANY_ID
                       AND CWC.WORK_CENTER_CODE = A.WORK_CENTER_CODE
                   ) AS WORKCENTERNAME
                 ,(SELECT CWC.WORK_DEPT
                      FROM CB_WORK_CENTER CWC
                     WHERE CWC.ORG_ID = A.ORG_ID
                       AND CWC.COMPANY_ID = A.COMPANY_ID
                       AND CWC.WORK_CENTER_CODE = A.WORK_CENTER_CODE
                   ) AS WORKDEPT
                 ,A.OUT_TRANS_NO AS OUTTRANSNO
                 ,A.OUT_TRANS_SEQ AS OUTTRANSSEQ
                 ,A.WORKER
                 ,(SELECT CHM.KR_NAME
                    FROM CB_HUMANRESOURCE_MANAGER CHM
                   WHERE CHM.EMPLOYEE_NUMBER = A.WORKER
                      AND NVL(CHM.USE_YN, 'Y') = 'Y'
                  ) AS WORKERNAME
                 ,A.WORK_DIV AS WORKDIV
                 ,(SELECT SC.SMALL_NAME
                     FROM CB_SMALL_CODE SC
                    WHERE SC.ORG_ID = A.ORG_ID
                      AND SC.COMPANY_ID = A.COMPANY_ID
                      AND SC.SMALL_CODE = A.WORK_DIV
                      AND SC.BIG_CODE = 'MFG'
                      AND SC.MIDDLE_CODE = 'WORK_DIV'
                  ) AS WORKDIVNAME
                 ,B.ITEM_CODE AS ITEMCODE
                 ,C.ITEM_NAME AS ITEMNAME
                 ,C.ORDER_NAME AS ORDERNAME
                 ,C.UOM
                 ,(SELECT SC.SMALL_NAME
                     FROM CB_SMALL_CODE SC
                    WHERE SC.ORG_ID = C.ORG_ID
                      AND SC.COMPANY_ID = C.COMPANY_ID
                      AND SC.SMALL_CODE = C.UOM
                      AND SC.BIG_CODE = 'CMM'
                      AND SC.MIDDLE_CODE = 'UOM'
                  ) AS UOMNAME
                 ,TO_CHAR(A.START_TIME, 'YYYY-MM-DD HH24:MI') AS STARTTIME
                 ,TO_CHAR(A.END_TIME, 'YYYY-MM-DD HH24:MI') AS ENDTIME
                 ,CEIL(QTY / NVL(C.SNP, 1)) AS PRINTCNT
                 ,B.ROUTING_CODE AS ROUTINGCODE
                ,NVL(CB_COMMON_STANDARD_PKG.CB_ITEM_CYCLE_QTY_FIND(A.ORG_ID
                                                                                            ,A.COMPANY_ID
                                                                                            ,A.WORK_ORDER_ID
                                                                                            ,A.WORK_ORDER_SEQ
                                                                                            ,A.SEQ_NO
                                                                                            ,A.WORKER
                                                                                            ,'CYCLE_QTY'), 0) AS CYCLEQTY
                ,NVL(CB_COMMON_STANDARD_PKG.CB_ITEM_CYCLE_QTY_FIND(A.ORG_ID
                                                                                            ,A.COMPANY_ID
                                                                                            ,A.WORK_ORDER_ID
                                                                                            ,A.WORK_ORDER_SEQ
                                                                                            ,A.SEQ_NO
                                                                                            ,A.WORKER
                                                                                            ,'CHECK_QTY'), 0) AS CHECKQTY
                ,(SELECT NVL(FCM.CHECK_YN,'N')
                    FROM CB_NEW_FML_CHECK_MASTER_V FCM
                   WHERE FCM.ORG_ID = A.ORG_ID
                     AND FCM.COMPANY_ID = A.COMPANY_ID
                     AND FCM.WORK_ORDER_ID = A.WORK_ORDER_ID
                     AND FCM.WORK_ORDER_SEQ = A.WORK_ORDER_SEQ
                     AND FCM.WORK_CENTER_CODE = A.WORK_CENTER_CODE 
                     AND FCM.EMPLOYEE_SEQ = A.SEQ_NO) AS FMLYN
                ,(SELECT FCM.FML_ID
                    FROM CB_NEW_FML_CHECK_MASTER_V FCM
                   WHERE FCM.ORG_ID = A.ORG_ID
                     AND FCM.COMPANY_ID = A.COMPANY_ID
                     AND FCM.WORK_ORDER_ID = A.WORK_ORDER_ID
                     AND FCM.WORK_ORDER_SEQ = A.WORK_ORDER_SEQ
                     AND FCM.WORK_CENTER_CODE = A.WORK_CENTER_CODE 
                     AND FCM.EMPLOYEE_SEQ = A.SEQ_NO) AS FMLID
            FROM CB_WORK_ORDER_D A
                   ,CB_WORK_ORDER B
                   ,CB_ITEM_MASTER C
    </sql>

    <sql id="prod.work.orderresult.header.sql-where">
         WHERE 1 = 1
            AND A.ORG_ID = B.ORG_ID
            AND A.COMPANY_ID = B.COMPANY_ID
            AND A.WORK_ORDER_ID = B.WORK_ORDER_ID
            AND A.WORK_ORDER_SEQ = B.WORK_ORDER_SEQ
            AND B.ORG_ID = C.ORG_ID
            AND B.COMPANY_ID = C.COMPANY_ID
            AND B.ITEM_CODE = C.ITEM_CODE
            AND A.END_TIME IS NULL
         <isNotEmpty property="ORGID" prepend="AND">
            A.ORG_ID = #ORGID#
         </isNotEmpty>
         <isNotEmpty property="COMPANYID" prepend="AND">
            A.COMPANY_ID = #COMPANYID#
         </isNotEmpty>
         <isNotEmpty property="WORKORDERID" prepend="AND">
            A.WORK_ORDER_ID = #WORKORDERID#
         </isNotEmpty>
         <isNotEmpty property="WORKORDERSEQ" prepend="AND">
            A.WORK_ORDER_SEQ = #WORKORDERSEQ#
         </isNotEmpty>
         <isNotEmpty property="WORKCENTERCODE" prepend="AND">
            A.WORK_CENTER_CODE = #WORKCENTERCODE#
         </isNotEmpty>
       ORDER BY A.ORG_ID, A.COMPANY_ID, A.WORK_ORDER_ID, A.WORK_ORDER_SEQ, A.SEQ_NO DESC, START_TIME DESC
    </sql>

    <select id="prod.work.orderresult.header.select" parameterClass="java.util.Map"
        resultClass="java.util.HashMap">
        <include refid="prod.work.orderresult.header.sql-select" />
        <include refid="prod.work.orderresult.header.sql-where" />
        
    </select>

    <select id="prod.work.orderresult.header.count" parameterClass="java.util.Map"
        resultClass="java.lang.Integer">
        SELECT COUNT(*) FROM (
            <include refid="prod.work.orderresult.header.sql-select" />
            <include refid="prod.work.orderresult.header.sql-where" />
        ) TOT
    </select>
    <!-- 생산실적 및 불량유형 등록 HEADER 조회 끝-->
    
   <!-- 생산실적등록 수정 -->
   <update id="prod.work.result.list.update" parameterClass="java.util.Map">
       UPDATE CB_WORK_ORDER_D
          SET LAST_UPDATED_BY  = #UPDATEID#
              , LAST_UPDATE_DATE = SYSDATE
       <isEmpty property="QTY" prepend=",">
              QTY = NULL
       </isEmpty>
       <isNotEmpty property="QTY" prepend=",">
              QTY = $QTY$
       </isNotEmpty>
       <isEmpty property="ROUTINGRATE" prepend=",">
              ROUTING_RATE = NULL
       </isEmpty>
       <isNotEmpty property="ROUTINGRATE" prepend=",">
              ROUTING_RATE = $ROUTINGRATE$
       </isNotEmpty>       
       <isEmpty property="REMARKS" prepend=",">
              REMARKS = NULL
       </isEmpty>
       <isNotEmpty property="REMARKS" prepend=",">
              REMARKS = #REMARKS#
       </isNotEmpty>           
       <isEmpty property="LOTNO" prepend=",">
              LOT_NO = NULL
       </isEmpty>
       <isNotEmpty property="LOTNO" prepend=",">
              LOT_NO = #LOTNO#
       </isNotEmpty>
       <isEmpty property="WORKCENTERCODE" prepend=",">
              WORK_CENTER_CODE = NULL
       </isEmpty>
       <isNotEmpty property="WORKCENTERCODE" prepend=",">
              WORK_CENTER_CODE = #WORKCENTERCODE#
       </isNotEmpty>
       <isEmpty property="WORKTIMEHOUR" prepend=",">
              WORK_TIME = NULL
       </isEmpty>
       <isNotEmpty property="WORKTIMEHOUR" prepend=",">
              WORK_TIME = $WORKTIMEHOUR$
       </isNotEmpty>
       <isEmpty property="WORKTIMEMIN" prepend=",">
              WORK_TIME_MIN = NULL
       </isEmpty>
       <isNotEmpty property="WORKTIMEMIN" prepend=",">
              WORK_TIME_MIN = $WORKTIMEMIN$
       </isNotEmpty>
       <isEmpty property="WORKER" prepend=",">
              WORKER = NULL
       </isEmpty>
       <isNotEmpty property="WORKER" prepend=",">
              WORKER = #WORKER#
       </isNotEmpty>
       <isEmpty property="WORKER2" prepend=",">
              WORKER2 = NULL
       </isEmpty>
       <isNotEmpty property="WORKER2" prepend=",">
              WORKER2 = #WORKER2#
       </isNotEmpty>
       <isEmpty property="WORKER3" prepend=",">
              WORKER3 = NULL
       </isEmpty>
       <isNotEmpty property="WORKER3" prepend=",">
              WORKER3 = #WORKER3#
       </isNotEmpty>
       <isEmpty property="WORKER4" prepend=",">
              WORKER4 = NULL
       </isEmpty>
       <isNotEmpty property="WORKER4" prepend=",">
              WORKER4 = #WORKER4#
       </isNotEmpty>
       <isEmpty property="WORKER5" prepend=",">
              WORKER5 = NULL
       </isEmpty>
       <isNotEmpty property="WORKER5" prepend=",">
              WORKER5 = #WORKER5#
       </isNotEmpty>
       <isEmpty property="STARTTIME" prepend=",">
              START_TIME = NULL
       </isEmpty>
       <isNotEmpty property="STARTTIME" prepend=",">
              START_TIME = TO_DATE(#STARTTIME#, 'YYYY-MM-DD')
       </isNotEmpty>
       <isEmpty property="STARTTIME" prepend=",">
              END_TIME = NULL
       </isEmpty>
       <isNotEmpty property="STARTTIME" prepend=",">
              END_TIME = TO_DATE(#STARTTIME#, 'YYYY-MM-DD')
       </isNotEmpty>
       <isEmpty property="VARIABLECOL1" prepend=",">
              VARIABLE_COL1 = NULL
       </isEmpty>
       <isNotEmpty property="VARIABLECOL1" prepend=",">
              VARIABLE_COL1 = $VARIABLECOL1$
       </isNotEmpty>
       <isEmpty property="VARIABLECOL2" prepend=",">
              VARIABLE_COL2 = NULL
       </isEmpty>
       <isNotEmpty property="VARIABLECOL2" prepend=",">
              VARIABLE_COL2 = $VARIABLECOL2$
       </isNotEmpty>
       <isEmpty property="VARIABLECOL3" prepend=",">
              VARIABLE_COL3 = NULL
       </isEmpty>
       <isNotEmpty property="VARIABLECOL3" prepend=",">
              VARIABLE_COL3 = $VARIABLECOL3$
       </isNotEmpty>
       <isEmpty property="VARIABLECOL4" prepend=",">
              VARIABLE_COL4 = NULL
       </isEmpty>
       <isNotEmpty property="VARIABLECOL4" prepend=",">
              VARIABLE_COL4 = #VARIABLECOL4#
       </isNotEmpty>
       <isEmpty property="VARIABLECOL5" prepend=",">
              VARIABLE_COL5 = NULL
       </isEmpty>
       <isNotEmpty property="VARIABLECOL5" prepend=",">
              VARIABLE_COL5 = $VARIABLECOL5$
       </isNotEmpty>     
       WHERE 1=1
         AND ORG_ID = $ORGID$
         AND COMPANY_ID = $COMPANYID$
         AND WORK_ORDER_ID = #WORKORDERID#
         AND WORK_ORDER_SEQ = $WORKORDERSEQ$
         AND SEQ_NO = $SEQNO$
   </update>
   <!-- 생산실적등록 수정 끝-->
   
    <!-- 생산실적등록 삭제 시작 -->
    <delete id="prod.work.result.list.delete" parameterClass="java.util.Map">
         DELETE FROM CB_WORK_ORDER_D
         WHERE 1=1
            AND ORG_ID = $ORGID$
            AND COMPANY_ID = $COMPANYID$
            AND WORK_ORDER_ID = #WORKORDERID#
            AND WORK_ORDER_SEQ = $WORKORDERSEQ$
            AND SEQ_NO = $SEQNO$
    </delete>
    <!-- 생산실적등록 삭제 끝 -->
    
    <!-- 공정검사 불량유형 등록 조회 시작-->
    <sql id="prod.work.orderresult.detail.sql-select">
        SELECT   RANK() OVER(ORDER BY WOF.ORG_ID, WOF.COMPANY_ID, WOF.WORK_ORDER_ID, WOF.WORK_ORDER_SEQ, WOF.SEQ_NO) AS RN
                   ,WOF.ORG_ID AS ORGID
                   ,WOF.COMPANY_ID AS COMPANYID
                   ,WOF.WORK_ORDER_ID AS WORKORDERID
                   ,WOF.WORK_ORDER_SEQ AS WORKORDERSEQ
                   ,WOF.SEQ_NO AS SEQNO
                   ,WOF.EMPLOYEE_SEQ AS WORKER
                   ,(SELECT A.KR_NAME
                       FROM CB_HUMANRESOURCE_MANAGER_V A
                      WHERE A.ORG_ID = WOF.ORG_ID
                        AND A.COMPANY_ID = WOF.COMPANY_ID
                        AND A.EMPLOYEE_NUMBER = TO_CHAR(WOF.EMPLOYEE_SEQ)) AS WORKERNAME
                   ,TO_CHAR(CW.WORK_START_DATE, 'YYYY-MM-DD') AS WORKSTARTDATE
                   ,(SELECT SC.SMALL_NAME || DECODE(SC.ATTRIBUTE5, NULL, NULL, ' ( ' || SC.ATTRIBUTE5 || ' )')
                      FROM CB_SMALL_CODE SC
                     WHERE SC.ORG_ID = WOF.ORG_ID
                        AND SC.COMPANY_ID = WOF.COMPANY_ID
                        AND SC.BIG_CODE = 'MFG'
                        AND SC.MIDDLE_CODE = 'FAULT_TYPE'
                        AND SC.SMALL_CODE = WOF.FAULT_TYPE) AS FAULTTYPENAME
                   ,WOF.FAULT_TYPE AS FAULTTYPE
                   ,WOF.FAULT_QTY AS FAULTQTY
                   ,WOF.REMARKS
                   ,TO_CHAR(WOF.FAULT_DATE, 'YYYY-MM-DD HH24:MI') AS FAULTDATE
                   ,WOF.FAULT_ITEM_CODE AS FAULTITEMCODE
                   ,(SELECT IM.ORDER_NAME
                      FROM CB_ITEM_MASTER IM
                     WHERE IM.ORG_ID = WOF.ORG_ID
                       AND IM.COMPANY_ID = WOF.COMPANY_ID
                       AND IM.ITEM_CODE = WOF.FAULT_ITEM_CODE) FAULTORDERNAME
                  ,(SELECT IM.ITEM_NAME
                      FROM CB_ITEM_MASTER IM
                     WHERE IM.ORG_ID = WOF.ORG_ID
                       AND IM.COMPANY_ID = WOF.COMPANY_ID
                       AND IM.ITEM_CODE = WOF.FAULT_ITEM_CODE) FAULTITEMNAME
          FROM CB_WORK_ORDER CW
                  ,CB_WORK_ORDER_FAULT WOF
                  ,CB_WORK_ORDER_HEADER WOH
    </sql>

    <sql id="prod.work.orderresult.detail.sql-where">
        WHERE CW.ORG_ID = WOF.ORG_ID
           AND CW.COMPANY_ID = WOF.COMPANY_ID
           AND CW.WORK_ORDER_ID = WOF.WORK_ORDER_ID
           AND CW.WORK_ORDER_SEQ = WOF.WORK_ORDER_SEQ
           AND CW.ORG_ID = WOH.ORG_ID
           AND CW.COMPANY_ID = WOH.COMPANY_ID
           AND CW.WORK_ORDER_ID = WOH.WORK_ORDER_ID
         <isNotEmpty property="ORGID" prepend="AND">
            WOF.ORG_ID = #ORGID#
         </isNotEmpty>
         <isNotEmpty property="COMPANYID" prepend="AND">
            WOF.COMPANY_ID = #COMPANYID#
         </isNotEmpty>
           AND WOF.WORK_ORDER_ID = #WORKORDERID#
         <isNotEmpty property="WORKORDERSEQ" prepend="AND">
            WOF.WORK_ORDER_SEQ = $WORKORDERSEQ$
         </isNotEmpty>
         <isNotEmpty property="WORKCENTERCODE" prepend="AND">
            WOF.WORK_CENTER_CODE = #WORKCENTERCODE#
         </isNotEmpty>
         <isNotEmpty property="SEARCHGUBUN" prepend="AND">
            TRUNC(WOF.FAULT_DATE, 'DD') = TRUNC(SYSDATE, 'DD')
         </isNotEmpty>
    </sql>

    <select id="prod.work.orderresult.detail.select" parameterClass="java.util.Map"
        resultClass="java.util.HashMap">
        <include refid="prod.work.orderresult.detail.sql-select" />
        <include refid="prod.work.orderresult.detail.sql-where" />
    </select>

    <select id="prod.work.orderresult.detail.count" parameterClass="java.util.Map"
        resultClass="java.lang.Integer">
        SELECT COUNT(*) FROM (
            <include refid="prod.work.orderresult.detail.sql-select" />
            <include refid="prod.work.orderresult.detail.sql-where" />
        ) TOT
    </select>
    <!-- 공정검사 불량유형 등록 조회 끝-->
    
   <!-- 공정검사등록 등록시 조회 -->
   <sql id="prod.work.result.detail.find.sql-select">
       SELECT COUNT(SEQ_NO) AS COUNT
         FROM CB_WORK_ORDER_FAULT
   </sql>

   <sql id="prod.work.result.detail.find.sql-where">
        WHERE 1 = 1
        <isNotEmpty property="ORGID" prepend="AND">
           ORG_ID = #ORGID#
        </isNotEmpty>
        <isNotEmpty property="COMPANYID" prepend="AND">
           COMPANY_ID = #COMPANYID#
        </isNotEmpty>
        <isNotEmpty property="WORKORDERID" prepend="AND">
           WORK_ORDER_ID = #WORKORDERID#
        </isNotEmpty>
        <isNotEmpty property="WORKORDERSEQ" prepend="AND">
           WORK_ORDER_SEQ = #WORKORDERSEQ#
        </isNotEmpty>
        <isNotEmpty property="SEQNO" prepend="AND">
           SEQ_NO = #SEQNO#
        </isNotEmpty>
   </sql>

   <select id="prod.work.result.detail.find.select" parameterClass="java.util.Map"
       resultClass="java.util.HashMap">
       <include refid="prod.work.result.detail.find.sql-select" />
       <include refid="prod.work.result.detail.find.sql-where" />
   </select>
   
   <select id="prod.work.result.detail.new.select" parameterClass="java.util.Map"
       resultClass="java.util.HashMap">
       SELECT NVL(MAX(SEQ_NO),0)+1 AS SEQ
         FROM CB_WORK_ORDER_FAULT
      WHERE  ORG_ID = #ORGID#
        AND COMPANY_ID = #COMPANYID#
        AND WORK_ORDER_ID = #WORKORDERID#
        AND WORK_ORDER_SEQ = #WORKORDERSEQ#
         
   </select>
   <!-- 공정검사등록 등록시 조회 끝 -->
   
   <!-- 공정검사등록 등록 시작 -->
   <insert id="prod.work.result.detail.insert" parameterClass="java.util.Map">
       <![CDATA[
           INSERT INTO CB_WORK_ORDER_FAULT
             (ORG_ID
             ,COMPANY_ID
             ,WORK_ORDER_ID
             ,WORK_ORDER_SEQ
             ,SEQ_NO
             ,EMPLOYEE_SEQ
       ]]>
       <isNotEmpty property="FAULTTYPE" prepend=",">
             FAULT_TYPE
       </isNotEmpty>
       <isNotEmpty property="FAULTQTY" prepend=",">
             FAULT_QTY
       </isNotEmpty>
       <isNotEmpty property="FAULTDATE" prepend=",">
             FAULT_DATE
       </isNotEmpty>
       <isNotEmpty property="REMARKS" prepend=",">
             REMARKS
       </isNotEmpty>
       <isNotEmpty property="FAULTITEMCODE" prepend=",">
             FAULT_ITEM_CODE
       </isNotEmpty>
       <isNotEmpty property="WORKCENTERCODE" prepend=",">
             WORK_CENTER_CODE
       </isNotEmpty>
       <![CDATA[
             ,CREATED_BY
             ,CREATION_DATE
             ,LAST_UPDATED_BY
             ,LAST_UPDATE_DATE
              )
           VALUES
             ($ORGID$
              ,$COMPANYID$
              ,#WORKORDERID#
              ,$WORKORDERSEQ$
              ,$SEQNO$
              ,#WORKER#
       ]]>
       <isNotEmpty property="FAULTTYPE" prepend=",">
             #FAULTTYPE#
       </isNotEmpty>
       <isNotEmpty property="FAULTQTY" prepend=",">
             $FAULTQTY$
       </isNotEmpty>
       <isNotEmpty property="FAULTDATE" prepend=",">
             TO_DATE(#FAULTDATE#, 'YYYY-MM-DD HH24:MI')
       </isNotEmpty>
       <isNotEmpty property="REMARKS" prepend=",">
             #REMARKS#
       </isNotEmpty>
       <isNotEmpty property="FAULTITEMCODE" prepend=",">
             #FAULTITEMCODE#
       </isNotEmpty>
       <isNotEmpty property="WORKCENTERCODE" prepend=",">
             #WORKCENTERCODE#
       </isNotEmpty>
       <![CDATA[
              ,#REGISTID#
              ,SYSDATE
              ,#REGISTID#
              ,SYSDATE
              )
       ]]>
   </insert>
   <!-- 공정검사등록 등록 끝 -->
   
   <!-- 공정검사등록 수정 시작 -->
   <update id="prod.work.result.detail.update" parameterClass="java.util.Map">
       <![CDATA[
       UPDATE CB_WORK_ORDER_FAULT
          SET LAST_UPDATED_BY  = #UPDATEID#
              , LAST_UPDATE_DATE = SYSDATE
       ]]>
       <isNotEmpty property="FAULTDATE" prepend=",">
             FAULT_DATE = TO_DATE(#FAULTDATE#, 'YYYY-MM-DD HH24:MI')
       </isNotEmpty>
       <isEmpty property="FAULTDATE" prepend=",">
             FAULT_DATE = NULL
       </isEmpty>
       <isNotEmpty property="FAULTTYPE" prepend=",">
             FAULT_TYPE = #FAULTTYPE#
       </isNotEmpty>
       <isEmpty property="FAULTTYPE" prepend=",">
             FAULT_TYPE = NULL
       </isEmpty>
       <isNotEmpty property="FAULTQTY" prepend=",">
             FAULT_QTY = $FAULTQTY$
       </isNotEmpty>
       <isEmpty property="FAULTQTY" prepend=",">
             FAULT_QTY = NULL
       </isEmpty>
       <isNotEmpty property="REMARKS" prepend=",">
             REMARKS = #REMARKS#
       </isNotEmpty>
       <isEmpty property="REMARKS" prepend=",">
             REMARKS = NULL
       </isEmpty>
       <isNotEmpty property="FAULTITEMCODE" prepend=",">
             FAULT_ITEM_CODE = #FAULTITEMCODE#
       </isNotEmpty>
       <isEmpty property="FAULTITEMCODE" prepend=",">
             FAULT_ITEM_CODE = NULL
       </isEmpty>
       <isNotEmpty property="WORKER" prepend=",">
             EMPLOYEE_SEQ = #WORKER#
       </isNotEmpty>
       <isEmpty property="WORKER" prepend=",">
             EMPLOYEE_SEQ = NULL
       </isEmpty>
       <![CDATA[
       WHERE 1=1
          AND ORG_ID = $ORGID$
          AND COMPANY_ID = $COMPANYID$
          AND WORK_ORDER_ID = #WORKORDERID#
          AND WORK_ORDER_SEQ = $WORKORDERSEQ$
          AND SEQ_NO = $SEQNO$
       ]]>
   </update>
   <!-- 공정검사등록 수정 끝 -->
   
   <sql id="prod.work.outorder.sql-select">
   <![CDATA[
   SELECT RANK() OVER(ORDER BY GR.ITEMNAME, GR.MODELNAME, GR.ITEMSTANDARD, RC.ROUTING_NAME, GR.WORKORDERID, GR.WORKORDERSEQ) AS RN
             ,DECODE(GR.WORKORDERSEQ, (SELECT MAX(CWO.WORK_ORDER_SEQ)
                                         FROM CB_WORK_ORDER CWO
                                        WHERE CWO.ORG_ID = GR.ORGID
                                          AND CWO.COMPANY_ID = GR.COMPANYID
                                          AND CWO.WORK_ORDER_ID = GR.WORKORDERID), 'Y', 'N') AS RK
             ,GR.ORGID
             ,GR.COMPANYID
             ,GR.WORKORDERID
             ,GR.WORKORDERSEQ
             ,GR.WORKTYPE
             ,GR.WORKTYPENAME
             ,GR.WORKSTATUS
             ,GR.ITEMCODE
             ,GR.ITEMNAME
             ,GR.ORDERNAME
             ,GR.MODEL
             ,GR.MODELNAME
             ,GR.ITEMSTANDARD
             ,GR.UOM
             ,GR.UOMNAME
             ,WOB.ROUTING_CODE AS ROUTINGCODE
             ,RC.ROUTING_NO AS ROUTINGNO
             ,RC.ROUTING_OP AS ROUTINGOP
             ,CB_COMMON_STANDARD_PKG.CB_FIND_SMALL_NAME_1(RC.ORG_ID
                                                         ,RC.COMPANY_ID
                                                         ,'MFG'
                                                         ,'ROUTING_NAME'
                                                         ,RC.ROUTING_NO
                                                         ,'LABEL') AS ROUTINGNAME
             ,WOB.EQUIPMENT_CODE AS EQUIPMENTCODE
             ,GR.IMPORTQTY
             ,GR.ORDERQTY
             ,(GR.IMPORTQTY - GR.ORDERQTY) AS REMAINQTY
             ,GR.OUTPONO
     FROM (
           SELECT WOH.ORG_ID AS ORGID
                 ,WOH.COMPANY_ID AS COMPANYID
                 ,WOH.WORK_ORDER_ID AS WORKORDERID
                 ,WO.WORK_ORDER_SEQ AS WORKORDERSEQ
                 ,WOH.WORK_TYPE AS WORKTYPE
                 ,CB_COMMON_STANDARD_PKG.CB_FIND_SMALL_NAME_1(WOH.ORG_ID
                                                             ,WOH.COMPANY_ID
                                                             ,'MFG'
                                                             ,'WORK_TYPE'
                                                             ,WOH.WORK_TYPE
                                                             ,'LABEL') AS WORKTYPENAME
                 ,WO.EQUIPMENT_CODE AS EQUIPMENTCODE
                 ,WOH.ITEM_CODE AS ITEMCODE
                 ,IM.ITEM_NAME AS ITEMNAME
                 ,IM.ORDER_NAME AS ORDERNAME
                 ,IM.ITEM_STANDARD_DETAIL AS ITEMSTANDARD
                 ,IM.CAR_TYPE AS MODEL
                 ,CB_COMMON_STANDARD_PKG.CB_FIND_SMALL_NAME_1(IM.ORG_ID
                                                             ,IM.COMPANY_ID
                                                             ,'CMM'
                                                             ,'MODEL'
                                                             ,IM.CAR_TYPE
                                                             ,'LABEL') AS MODELNAME
                 ,IM.UOM AS UOM
                 ,CB_COMMON_STANDARD_PKG.CB_FIND_SMALL_NAME_1(IM.ORG_ID
                                                             ,IM.COMPANY_ID
                                                             ,'CMM'
                                                             ,'UOM'
                                                             ,IM.UOM
                                                             ,'LABEL') AS UOMNAME
                 ,WOH.WORK_PLAN_START_DATE AS WORKPLANSTARTDATE
                 ,WOH.WORK_PLAN_END_DATE AS WORKPLANENDDATE
                 ,WO.WORK_STATUS AS WORKSTATUS
                 ,TRUNC(SYSDATE, 'DD') AS TODAY
                 ,(CASE WHEN CB_MFG_PKG.CB_PRE_WORK_ORDER_SEQ_FIND(WO.ORG_ID
                                                                  ,WO.COMPANY_ID
                                                                  ,WO.ITEM_CODE
                                                                  ,WO.WORK_ORDER_ID
                                                                  ,WO.ROUTING_CODE
                                                                  ,TRUNC(SYSDATE, 'DD')) IS NOT NULL THEN
                           NVL((SELECT SUM(NVL(WOD.QTY, 0))
                                  FROM CB_WORK_ORDER_D WOD
                                 WHERE WOD.ORG_ID = WO.ORG_ID
                                   AND WOD.COMPANY_ID = WO.COMPANY_ID
                                   AND WOD.WORK_ORDER_ID = WO.WORK_ORDER_ID
                                   AND WOD.WORK_ORDER_SEQ = CB_MFG_PKG.CB_PRE_WORK_ORDER_SEQ_FIND(WO.ORG_ID
                                                                                                 ,WO.COMPANY_ID
                                                                                                 ,WO.ITEM_CODE
                                                                                                 ,WO.WORK_ORDER_ID
                                                                                                 ,WO.ROUTING_CODE
                                                                                                 ,TRUNC(SYSDATE, 'DD'))), 0)
                         ELSE
                           0
                         END) AS IMPORTQTY
                 ,NVL((SELECT SUM(NVL(OD.ORDER_QTY, 0))
                         FROM CB_OUT_ORDER_H OH
                             ,CB_OUT_ORDER_D OD
                        WHERE OH.ORG_ID = OD.ORG_ID
                          AND OH.COMPANY_ID = OD.COMPANY_ID
                          AND OH.OUT_PO_NO = OD.OUT_PO_NO
                          AND OD.ORG_ID = WO.ORG_ID
                          AND OD.COMPANY_ID = WO.COMPANY_ID
                          AND OD.WORK_ORDER_ID = WO.WORK_ORDER_ID
                          AND OD.WORK_ORDER_SEQ = WO.WORK_ORDER_SEQ), 0) AS ORDERQTY
                 ,(CASE WHEN #GUBUN# = 'Y' THEN
                           (SELECT MAX(OH.OUT_PO_NO)
				                     FROM CB_OUT_ORDER_H OH
				                         ,CB_OUT_ORDER_D OD
				                    WHERE OH.ORG_ID = OD.ORG_ID
				                      AND OH.COMPANY_ID = OD.COMPANY_ID
				                      AND OH.OUT_PO_NO = OD.OUT_PO_NO
				                      AND OD.ORG_ID = WO.ORG_ID
				                      AND OD.COMPANY_ID = WO.COMPANY_ID
				                      AND OD.WORK_ORDER_ID = WO.WORK_ORDER_ID
				                      AND OD.WORK_ORDER_SEQ = WO.WORK_ORDER_SEQ)
                         ELSE
                           NULL
                         END) AS OUTPONO
         FROM CB_WORK_ORDER_HEADER WOH
             ,CB_WORK_ORDER         WO
             ,CB_ITEM_MASTER        IM
             ,CB_ORG_COMPANY_V      OV
        WHERE WOH.ORG_ID = WO.ORG_ID
          AND WOH.COMPANY_ID = WO.COMPANY_ID
          AND WOH.WORK_ORDER_ID = WO.WORK_ORDER_ID
          AND WOH.ORG_ID = IM.ORG_ID
          AND WOH.COMPANY_ID = IM.COMPANY_ID
          AND WOH.ITEM_CODE = IM.ITEM_CODE
          AND WOH.ORG_ID = OV.ORG_ID
          AND WOH.COMPANY_ID = OV.COMPANY_ID
          AND WOH.WORK_STATUS NOT IN ('CANCEL', 'COMPLETE')
          AND WO.OUTSIDE_ORDER_GUBUN = 'Y'
          AND WO.WORK_ORDER_ID IN (SELECT WOD.WORK_ORDER_ID
                                     FROM CB_WORK_ORDER_D WOD
                                    WHERE WOD.ORG_ID = WO.ORG_ID
                                      AND WOD.COMPANY_ID = WO.COMPANY_ID
                                      AND WOD.START_TIME IS NOT NULL
                                      AND NVL(WOD.START_TIME, SYSDATE) >= TO_DATE('2021-01-01', 'YYYY-MM-DD'))
          ) GR
         ,CB_WORK_ORDER WOB
         ,CB_ROUTING_CONTROL RC
   ]]>
   </sql>

   <sql id="prod.work.outorder.sql-where">
      WHERE GR.ORGID = WOB.ORG_ID
         AND GR.COMPANYID = WOB.COMPANY_ID
         AND GR.WORKORDERID = WOB.WORK_ORDER_ID
         AND GR.WORKORDERSEQ = WOB.WORK_ORDER_SEQ
         AND WOB.ORG_ID = RC.ORG_ID
         AND WOB.COMPANY_ID = RC.COMPANY_ID
         AND WOB.ROUTING_CODE = RC.ROUTING_ID
         /*AND TODAY BETWEEN GR.WORKPLANSTARTDATE AND GR.WORKPLANENDDATE*/
         AND WOB.WORK_STATUS NOT IN ('CANCEL', 'COMPLETE')
         AND RC.ROUTING_NO IN (SELECT SC.SMALL_CODE
                                 FROM CB_SMALL_CODE SC
                                WHERE SC.ORG_ID = RC.ORG_ID
                                  AND SC.COMPANY_ID = RC.COMPANY_ID
                                  AND SC.BIG_CODE = 'MFG'
                                  AND SC.MIDDLE_CODE = 'ROUTING_NAME'
                                  AND SC.ATTRIBUTE1 = '08')
		     <isNotEmpty property="ORGID" prepend="AND">
		        GR.ORGID = #ORGID#
		     </isNotEmpty>
		     <isNotEmpty property="COMPANYID" prepend="AND">
		        GR.COMPANYID = #COMPANYID#
		     </isNotEmpty>
         <isNotEmpty property="GUBUN">
            <!-- <isEqual property="GUBUN" compareValue="Y" prepend="AND">
                TODATE BETWEEN GR.WORKPLANSTARTDATE AND GR.WORKPLANENDDATE
            </isEqual> -->
            <isEqual property="GUBUN" compareValue="Y" prepend="AND">
                GR.ORDERQTY > 0
            </isEqual>
            <isEqual property="GUBUN" compareValue="N" prepend="AND">
                GR.IMPORTQTY > 0
            AND (GR.IMPORTQTY - GR.ORDERQTY) > 0
            </isEqual>
         </isNotEmpty>
   </sql>

   <select id="prod.work.outorder.select" parameterClass="java.util.Map"
       resultClass="java.util.HashMap">
       <include refid="prod.work.outorder.sql-select" />
       <include refid="prod.work.outorder.sql-where" />
   </select>
   
   <select id="prod.work.outorder.count" parameterClass="java.util.Map"
        resultClass="java.lang.Integer">
        SELECT COUNT(*) FROM (
            <include refid="prod.work.outorder.sql-select" />
            <include refid="prod.work.outorder.sql-where" />
        ) TOT
   </select>
   
   <select id="prod.work.order.out.itemcode.select" parameterClass="java.util.Map" resultClass="java.util.HashMap">
        SELECT MAX(V.ITEM_CODE) AS ITEMCODE
				  FROM CB_ITEM_MASTER_V V
				 WHERE V.ITEM_NAME = #ITEMNAME#
				   AND V.MODEL = #MODEL#
				   AND V.ITEM_STANDARD_DETAIL = #ITEMSTANDARDDETAIL#
    </select>
    
    <select id="prod.work.order.out.new.select" parameterClass="java.util.Map" resultClass="java.util.HashMap">
        SELECT 'OU' || TO_CHAR(SYSDATE, 'YYMMDD') || '-' ||
                 (CASE
                    WHEN NUM BETWEEN 0 AND 8 THEN
                     TO_CHAR('00')
                    WHEN NUM BETWEEN 9 AND 98 THEN
                     TO_CHAR('0')
                    ELSE
                     TO_CHAR('')
                  END) || TO_NUMBER(NUM + 1) AS WORKOUTID
        FROM (SELECT NVL(TO_NUMBER(SUBSTR(MAX(WORK_OUT_ID), -3)), 0) AS NUM
                FROM CB_WORK_ORDER_OUT
               WHERE ORG_ID = #ORGID#
                 AND COMPANY_ID = #COMPANYID#
                 AND WORK_OUT_ID LIKE  'OU'|| TO_CHAR(SYSDATE, 'YYMMDD') || '%'
                 )
    </select>
    
    <insert id="prod.work.order.out.insert" parameterClass="java.util.Map">
       <![CDATA[
           INSERT INTO CB_WORK_ORDER_OUT
             (ORG_ID
						 ,COMPANY_ID
						 ,WORK_OUT_ID
						 ,ITEM_CODE
						 ,OUT_TYPE
						 ,OUT_DATE
						 ,OUT_QTY
						 ,CREATED_BY
						 ,CREATION_DATE
						 ,LAST_UPDATED_BY
						 ,LAST_UPDATE_DATE
              )
           VALUES
             ($ORGID$
             ,$COMPANYID$
             ,#WORKOUTID#
             ,#ITEMCODE#
             ,#OUTTYPE#
             ,TO_DATE(#OUTDATE#,'YYYY-MM-DD')
             ,#OUTQTY#
             ,#REGISTID#
             ,SYSDATE
             ,#REGISTID#
             ,SYSDATE
              )
       ]]>
   </insert>
   
   <update id="prod.work.order.out.update" parameterClass="java.util.Map">
        <![CDATA[
        UPDATE CB_WORK_ORDER_OUT
           SET LAST_UPDATED_BY  = #UPDATEID#
             , LAST_UPDATE_DATE = SYSDATE
             , OUT_QTY = #OUTQTY#
        WHERE ORG_ID = #ORGID#
            AND COMPANY_ID = #COMPANYID#
            AND WORK_OUT_ID = #WORKOUTID#
        ]]>
    </update>
    
   <sql id="prod.work.order.out.list.sql-select">
     SELECT  RANK() OVER(ORDER BY V.ORGID, V.COMPANYID, V.OUTDATE DESC, V.WORKOUTID,V.INDATE,V.WORKINID) AS RN
			      ,ORGID
			      ,COMPANYID
			      ,WORKOUTID
			      ,ITEMCODE
			      ,ITEMNAME
			      ,ORDERNAME
			      ,MODEL
			      ,MODELNAME
			      ,ITEMSTANDARDDETAIL
			      ,OUTTYPE
			      ,OUTTYPENAME
			      ,OUTDATE
			      ,OUTQTY
			      ,WORKINID
			      ,INDATE
			      ,INQTY
			  FROM CB_WORK_ORDER_INOUT_V V
    </sql>

    <sql id="prod.work.order.out.list.sql-where">
         WHERE OUTQTY > 0 
         <isNotEmpty property="GUBUN">
          <isEqual property="GUBUN" compareValue="OUT" prepend="AND">
            WORKINID IS NULL
          </isEqual>
          <isEqual property="GUBUN" compareValue="IN" prepend="AND">
            WORKOUTID IS NOT NULL
            AND OUTQTY > SUMINQTY
          </isEqual>
         </isNotEmpty>
         <isNotEmpty property="OUTTO">
          <isNotEmpty property="OUTFROM" prepend="AND">
             V.OUTDATE BETWEEN TO_DATE(#OUTFROM#, 'YYYY-MM-DD') AND TO_DATE(#OUTTO#, 'YYYY-MM-DD')
          </isNotEmpty>
        </isNotEmpty>
         <isNotEmpty property="MODELNAME" prepend="AND">
              V.MODELNAME LIKE '%' || #MODELNAME# || '%'
         </isNotEmpty>
         <isNotEmpty property="ITEMSTANDARDDETAIL" prepend="AND">
              V.ITEMSTANDARDDETAIL LIKE '%' || #ITEMSTANDARDDETAIL# || '%'
         </isNotEmpty>
         ORDER BY V.ORGID, V.COMPANYID, V.OUTDATE DESC, V.WORKOUTID,V.INDATE,V.WORKINID
    </sql>

    <select id="prod.work.order.out.list.select" parameterClass="java.util.Map"
        resultClass="java.util.HashMap">
        <include refid="prod.work.order.out.list.sql-select" />
        <include refid="prod.work.order.out.list.sql-where" />
    </select>

    <select id="prod.work.order.out.list.count" parameterClass="java.util.Map"
        resultClass="java.lang.Integer">
        SELECT COUNT(*) FROM (
            <include refid="prod.work.order.out.list.sql-select" />
            <include refid="prod.work.order.out.list.sql-where" />
        ) TOT
    </select>
   
    <select id="prod.work.order.in.new.select" parameterClass="java.util.Map" resultClass="java.util.HashMap">
        SELECT 'IN' || TO_CHAR(SYSDATE, 'YYMMDD') || '-' ||
                 (CASE
                    WHEN NUM BETWEEN 0 AND 8 THEN
                     TO_CHAR('00')
                    WHEN NUM BETWEEN 9 AND 98 THEN
                     TO_CHAR('0')
                    ELSE
                     TO_CHAR('')
                  END) || TO_NUMBER(NUM + 1) AS WORKINID
        FROM (SELECT NVL(TO_NUMBER(SUBSTR(MAX(WORK_IN_ID), -3)), 0) AS NUM
                FROM CB_WORK_ORDER_IN
               WHERE ORG_ID = #ORGID#
                 AND COMPANY_ID = #COMPANYID#
                 AND WORK_IN_ID LIKE  'IN'|| TO_CHAR(SYSDATE, 'YYMMDD') || '%'
                 )
    </select>
    
    <insert id="prod.work.order.in.insert" parameterClass="java.util.Map">
       <![CDATA[
           INSERT INTO CB_WORK_ORDER_IN
             (ORG_ID
						 ,COMPANY_ID
						 ,WORK_IN_ID
						 ,WORK_OUT_ID
						 ,IN_DATE
						 ,IN_QTY
						 ,CREATED_BY
						 ,CREATION_DATE
						 ,LAST_UPDATED_BY
						 ,LAST_UPDATE_DATE
              )
           VALUES
             ($ORGID$
             ,$COMPANYID$
             ,#WORKINID#
             ,#WORKOUTID#
             ,TO_DATE(#INDATE#,'YYYY-MM-DD')
             ,#INQTY#
             ,#REGISTID#
             ,SYSDATE
             ,#REGISTID#
             ,SYSDATE
              )
       ]]>
   </insert>
   
   
    <!-- 새로운 작업지시 조회 화면 START -->
    <sql id="prod.work.order.button.list.sql-select">
       <![CDATA[
       SELECT RANK() OVER(ORDER BY WC.WORK_CENTER_NAME, (SELECT SC.SMALL_NAME
                  FROM CB_SMALL_CODE SC
                 WHERE SC.ORG_ID = IM.ORG_ID
                   AND SC.COMPANY_ID = IM.COMPANY_ID
                   AND SC.BIG_CODE = 'CMM'
                   AND SC.MIDDLE_CODE = 'MODEL'
                   AND SC.SMALL_CODE = IM.CAR_TYPE), NVL(IM.SORT_ORDER, 999), IM.ITEM_STANDARD_DETAIL, IM.ITEM_NAME, IM.ORDER_NAME, WD.LEV, WO.WORK_ORDER_ID, WO.WORK_ORDER_SEQ, WD.WORK_DIV) AS RN
              ,RANK() OVER(PARTITION BY WC.WORK_CENTER_NAME, IM.ITEM_NAME, IM.ORDER_NAME, WD.LEV, WO.WORK_ORDER_ID, WO.WORK_ORDER_SEQ ORDER BY WD.WORK_DIV) AS WORKRN
              ,WO.ORG_ID AS ORGID
              ,WO.COMPANY_ID AS COMPANYID
              ,WO.WORK_ORDER_ID AS WORKORDERID
              ,WO.WORK_ORDER_SEQ AS WORKORDERSEQ
              ,WO.WORK_STATUS AS WORKSTATUS
              ,(SELECT SC.SMALL_NAME
                  FROM CB_SMALL_CODE SC
                 WHERE SC.ORG_ID = WO.ORG_ID
                   AND SC.COMPANY_ID = WO.COMPANY_ID
                   AND SC.BIG_CODE = 'MFG'
                   AND SC.MIDDLE_CODE = 'STATUS'
                   AND SC.SMALL_CODE = WO.WORK_STATUS) AS WORKSTATUSNAME
              ,WD.LEV
              ,WC.WORK_DEPT
              ,(CASE WHEN WD.LEV = 1 THEN
                       WO.WORK_CENTER_CODE
                     WHEN WD.LEV = 2 THEN
                       WO.WORK_CENTER_CODE2
                     WHEN WD.LEV = 3 THEN
                       WO.WORK_CENTER_CODE3
                     WHEN WD.LEV = 4 THEN
                       WO.WORK_CENTER_CODE4
                     WHEN WD.LEV = 5 THEN
                       WO.WORK_CENTER_CODE5
                     WHEN WD.LEV = 6 THEN
                       WO.WORK_CENTER_CODE6
                     WHEN WD.LEV = 7 THEN
                       WO.WORK_CENTER_CODE7
                     WHEN WD.LEV = 8 THEN
                       WO.WORK_CENTER_CODE8
                     WHEN WD.LEV = 9 THEN
                       WO.WORK_CENTER_CODE9
                     WHEN WD.LEV = 10 THEN
                       WO.WORK_CENTER_CODE10
                     WHEN WD.LEV = 11 THEN
                       WO.WORK_CENTER_CODE11
                     WHEN WD.LEV = 12 THEN
                       WO.WORK_CENTER_CODE12
                     WHEN WD.LEV = 13 THEN
                       WO.WORK_CENTER_CODE13
                     WHEN WD.LEV = 14 THEN
                       WO.WORK_CENTER_CODE14
                     WHEN WD.LEV = 15 THEN
                       WO.WORK_CENTER_CODE15
                     ELSE
                       NULL
                     END) AS WORKCENTERCODE
              ,WC.WORK_CENTER_NAME AS WORKCENTERNAME
              ,WD.WORK_DIV AS WORKDIV
              ,WD.WORK_DIV_NAME AS WORKDIVNAME
              ,WO.ITEM_CODE AS ITEMCODE
              ,IM.ITEM_NAME AS ITEMNAME
              ,IM.ORDER_NAME AS ORDERNAME
              ,IM.CAR_TYPE AS CARTYPE
              ,(SELECT SC.SMALL_NAME
                  FROM CB_SMALL_CODE SC
                 WHERE SC.ORG_ID = IM.ORG_ID
                   AND SC.COMPANY_ID = IM.COMPANY_ID
                   AND SC.BIG_CODE = 'CMM'
                   AND SC.MIDDLE_CODE = 'MODEL'
                   AND SC.SMALL_CODE = IM.CAR_TYPE) AS CARTYPENAME
              ,IM.ITEM_STANDARD_DETAIL AS ITEMSTANDARDDETAIL
             ,CB_COMMON_STANDARD_PKG.CB_FIND_SMALL_NAME_1(IM.ORG_ID
                                                         ,IM.COMPANY_ID
                                                         ,'MFG'
                                                         ,'WORK_RATE'
                                                         ,'01'
                                                         ,'LABEL') AS WORKRATE
              ,(SELECT WOD1.WORKER
                  FROM CB_WORK_ORDER_D WOD1
                 WHERE WOD1.ORG_ID = WO.ORG_ID
                   AND WOD1.COMPANY_ID = WO.COMPANY_ID
                   AND WOD1.WORK_ORDER_ID = WO.WORK_ORDER_ID
                   AND WOD1.WORK_ORDER_SEQ = WO.WORK_ORDER_SEQ
                   AND WOD1.SEQ_NO = (SELECT MAX(WOD.SEQ_NO)
                                        FROM CB_WORK_ORDER_D WOD
                                       WHERE WOD.ORG_ID = WO.ORG_ID
                                         AND WOD.COMPANY_ID = WO.COMPANY_ID
                                         AND WOD.WORK_ORDER_ID = WO.WORK_ORDER_ID
                                         AND WOD.WORK_ORDER_SEQ = WO.WORK_ORDER_SEQ
                                         AND WOD.WORK_CENTER_CODE = (CASE WHEN WD.LEV = 1 THEN
                                                                            WO.WORK_CENTER_CODE
                                                                          WHEN WD.LEV = 2 THEN
                                                                            WO.WORK_CENTER_CODE2
                                                                          WHEN WD.LEV = 3 THEN
                                                                            WO.WORK_CENTER_CODE3
                                                                          WHEN WD.LEV = 4 THEN
                                                                            WO.WORK_CENTER_CODE4
                                                                          WHEN WD.LEV = 5 THEN
                                                                            WO.WORK_CENTER_CODE5
									                                                        WHEN WD.LEV = 6 THEN
									                                                          WO.WORK_CENTER_CODE6
									                                                        WHEN WD.LEV = 7 THEN
									                                                          WO.WORK_CENTER_CODE7
									                                                        WHEN WD.LEV = 8 THEN
									                                                          WO.WORK_CENTER_CODE8
									                                                        WHEN WD.LEV = 9 THEN
									                                                          WO.WORK_CENTER_CODE9
									                                                        WHEN WD.LEV = 10 THEN
									                                                          WO.WORK_CENTER_CODE10
									                                                        WHEN WD.LEV = 11 THEN
									                                                          WO.WORK_CENTER_CODE11
									                                                        WHEN WD.LEV = 12 THEN
									                                                          WO.WORK_CENTER_CODE12
									                                                        WHEN WD.LEV = 13 THEN
									                                                          WO.WORK_CENTER_CODE13
									                                                        WHEN WD.LEV = 14 THEN
									                                                          WO.WORK_CENTER_CODE14
									                                                        WHEN WD.LEV = 15 THEN
									                                                          WO.WORK_CENTER_CODE15
                                                                          END)
                                         AND WOD.WORK_DIV = WD.WORK_DIV
                                         AND START_TIME BETWEEN TO_DATE(CB_COMMON_STANDARD_PKG.CB_WORK_DIV_FNC(WD.WORK_DIV, 'DAILY', 'START_DATE'), 'YYYY-MM-DD HH24:MI')
                                                            AND TO_DATE(CB_COMMON_STANDARD_PKG.CB_WORK_DIV_FNC(WD.WORK_DIV, 'DAILY', 'END_DATE')  , 'YYYY-MM-DD HH24:MI')
                                      )
                ) AS WORKER
              ,(SELECT (SELECT HM.KR_NAME
                          FROM CB_HUMANRESOURCE_MANAGER HM
                         WHERE HM.EMPLOYEE_NUMBER = WOD1.WORKER)
                  FROM CB_WORK_ORDER_D WOD1
                 WHERE WOD1.ORG_ID = WO.ORG_ID
                   AND WOD1.COMPANY_ID = WO.COMPANY_ID
                   AND WOD1.WORK_ORDER_ID = WO.WORK_ORDER_ID
                   AND WOD1.WORK_ORDER_SEQ = WO.WORK_ORDER_SEQ
                   AND WOD1.SEQ_NO = (SELECT MAX(WOD.SEQ_NO)
                                        FROM CB_WORK_ORDER_D WOD
                                       WHERE WOD.ORG_ID = WO.ORG_ID
                                         AND WOD.COMPANY_ID = WO.COMPANY_ID
                                         AND WOD.WORK_ORDER_ID = WO.WORK_ORDER_ID
                                         AND WOD.WORK_ORDER_SEQ = WO.WORK_ORDER_SEQ
                                         AND WOD.WORK_CENTER_CODE = (CASE WHEN WD.LEV = 1 THEN
                                                                            WO.WORK_CENTER_CODE
                                                                          WHEN WD.LEV = 2 THEN
                                                                            WO.WORK_CENTER_CODE2
                                                                          WHEN WD.LEV = 3 THEN
                                                                            WO.WORK_CENTER_CODE3
                                                                          WHEN WD.LEV = 4 THEN
                                                                            WO.WORK_CENTER_CODE4
                                                                          WHEN WD.LEV = 5 THEN
                                                                            WO.WORK_CENTER_CODE5
									                                                        WHEN WD.LEV = 6 THEN
									                                                          WO.WORK_CENTER_CODE6
									                                                        WHEN WD.LEV = 7 THEN
									                                                          WO.WORK_CENTER_CODE7
									                                                        WHEN WD.LEV = 8 THEN
									                                                          WO.WORK_CENTER_CODE8
									                                                        WHEN WD.LEV = 9 THEN
									                                                          WO.WORK_CENTER_CODE9
									                                                        WHEN WD.LEV = 10 THEN
									                                                          WO.WORK_CENTER_CODE10
									                                                        WHEN WD.LEV = 11 THEN
									                                                          WO.WORK_CENTER_CODE11
									                                                        WHEN WD.LEV = 12 THEN
									                                                          WO.WORK_CENTER_CODE12
									                                                        WHEN WD.LEV = 13 THEN
									                                                          WO.WORK_CENTER_CODE13
									                                                        WHEN WD.LEV = 14 THEN
									                                                          WO.WORK_CENTER_CODE14
									                                                        WHEN WD.LEV = 15 THEN
									                                                          WO.WORK_CENTER_CODE15
                                                                          END)
                                         AND WOD.WORK_DIV = WD.WORK_DIV
                                         AND START_TIME BETWEEN TO_DATE(CB_COMMON_STANDARD_PKG.CB_WORK_DIV_FNC(WD.WORK_DIV, 'DAILY', 'START_DATE'), 'YYYY-MM-DD HH24:MI')
                                                            AND TO_DATE(CB_COMMON_STANDARD_PKG.CB_WORK_DIV_FNC(WD.WORK_DIV, 'DAILY', 'END_DATE')  , 'YYYY-MM-DD HH24:MI')
                                      )
                ) AS WORKERNAME
              ,WO.ROUTING_CODE AS ROUTINGID
              ,(SELECT (SELECT SC.SMALL_NAME
                          FROM CB_SMALL_CODE SC
                         WHERE SC.ORG_ID = RC.ORG_ID
                           AND SC.COMPANY_ID = RC.COMPANY_ID
                           AND SC.BIG_CODE = 'MFG'
                           AND SC.MIDDLE_CODE = 'ROUTING_NAME'
                           AND SC.SMALL_CODE = RC.ROUTING_NO)
                  FROM CB_ROUTING_CONTROL RC
                 WHERE RC.ORG_ID = WO.ORG_ID
                   AND RC.COMPANY_ID = WO.COMPANY_ID
                   AND RC.ROUTING_ID = WO.ROUTING_CODE) AS ROUTINGNAME
              ,NVL((SELECT SUM(WOD.QTY)
                      FROM CB_WORK_ORDER_D WOD
                     WHERE WOD.ORG_ID = WO.ORG_ID
                       AND WOD.COMPANY_ID = WO.COMPANY_ID
                       AND WOD.WORK_ORDER_ID = WO.WORK_ORDER_ID
                       AND WOD.WORK_ORDER_SEQ = WO.WORK_ORDER_SEQ
                       AND WOD.WORK_CENTER_CODE = (CASE WHEN WD.LEV = 1 THEN
                                                          WO.WORK_CENTER_CODE
                                                        WHEN WD.LEV = 2 THEN
                                                          WO.WORK_CENTER_CODE2
                                                        WHEN WD.LEV = 3 THEN
                                                          WO.WORK_CENTER_CODE3
                                                        WHEN WD.LEV = 4 THEN
                                                          WO.WORK_CENTER_CODE4
                                                        WHEN WD.LEV = 5 THEN
                                                          WO.WORK_CENTER_CODE5
                                                        WHEN WD.LEV = 6 THEN
                                                          WO.WORK_CENTER_CODE6
                                                        WHEN WD.LEV = 7 THEN
                                                          WO.WORK_CENTER_CODE7
                                                        WHEN WD.LEV = 8 THEN
                                                          WO.WORK_CENTER_CODE8
                                                        WHEN WD.LEV = 9 THEN
                                                          WO.WORK_CENTER_CODE9
                                                        WHEN WD.LEV = 10 THEN
                                                          WO.WORK_CENTER_CODE10
                                                        WHEN WD.LEV = 11 THEN
                                                          WO.WORK_CENTER_CODE11
                                                        WHEN WD.LEV = 12 THEN
                                                          WO.WORK_CENTER_CODE12
                                                        WHEN WD.LEV = 13 THEN
                                                          WO.WORK_CENTER_CODE13
                                                        WHEN WD.LEV = 14 THEN
                                                          WO.WORK_CENTER_CODE14
                                                        WHEN WD.LEV = 15 THEN
                                                          WO.WORK_CENTER_CODE15
                                                        END)
                       AND START_TIME BETWEEN TO_DATE(CB_COMMON_STANDARD_PKG.CB_WORK_DIV_FNC('01', 'MONTHLY', 'START_DATE'), 'YYYY-MM-DD HH24:MI')
                                          AND TO_DATE(CB_COMMON_STANDARD_PKG.CB_WORK_DIV_FNC('01', 'MONTHLY', 'END_DATE')  , 'YYYY-MM-DD HH24:MI')
                       AND WOD.WORK_DIV = '01'), 0) +
               NVL((SELECT SUM(WOF.FAULT_QTY)
                      FROM CB_WORK_ORDER_FAULT WOF
                     WHERE WOF.ORG_ID = WO.ORG_ID
                       AND WOF.COMPANY_ID = WO.COMPANY_ID
                       AND WOF.WORK_ORDER_ID = WO.WORK_ORDER_ID
                       AND WOF.WORK_ORDER_SEQ = WO.WORK_ORDER_SEQ
                       AND WOF.WORK_CENTER_CODE = (CASE WHEN WD.LEV = 1 THEN
                                                          WO.WORK_CENTER_CODE
                                                        WHEN WD.LEV = 2 THEN
                                                          WO.WORK_CENTER_CODE2
                                                        WHEN WD.LEV = 3 THEN
                                                          WO.WORK_CENTER_CODE3
                                                        WHEN WD.LEV = 4 THEN
                                                          WO.WORK_CENTER_CODE4
                                                        WHEN WD.LEV = 5 THEN
                                                          WO.WORK_CENTER_CODE5
                                                        WHEN WD.LEV = 6 THEN
                                                          WO.WORK_CENTER_CODE6
                                                        WHEN WD.LEV = 7 THEN
                                                          WO.WORK_CENTER_CODE7
                                                        WHEN WD.LEV = 8 THEN
                                                          WO.WORK_CENTER_CODE8
                                                        WHEN WD.LEV = 9 THEN
                                                          WO.WORK_CENTER_CODE9
                                                        WHEN WD.LEV = 10 THEN
                                                          WO.WORK_CENTER_CODE10
                                                        WHEN WD.LEV = 11 THEN
                                                          WO.WORK_CENTER_CODE11
                                                        WHEN WD.LEV = 12 THEN
                                                          WO.WORK_CENTER_CODE12
                                                        WHEN WD.LEV = 13 THEN
                                                          WO.WORK_CENTER_CODE13
                                                        WHEN WD.LEV = 14 THEN
                                                          WO.WORK_CENTER_CODE14
                                                        WHEN WD.LEV = 15 THEN
                                                          WO.WORK_CENTER_CODE15
                                                        END)
                       AND FAULT_DATE BETWEEN TO_DATE(CB_COMMON_STANDARD_PKG.CB_WORK_DIV_FNC('01' , 'MONTHLY', 'START_DATE'), 'YYYY-MM-DD HH24:MI')
                                          AND TO_DATE(CB_COMMON_STANDARD_PKG.CB_WORK_DIV_FNC('01' , 'MONTHLY', 'END_DATE')  , 'YYYY-MM-DD HH24:MI')
                       AND (CASE WHEN TO_CHAR(FAULT_DATE, 'HH24:MI') BETWEEN CB_COMMON_STANDARD_PKG.CB_WORK_DIV_FNC('01' ,'DAILY', 'START_TIME') AND CB_COMMON_STANDARD_PKG.CB_WORK_DIV_FNC('01' ,'DAILY', 'END_TIME') THEN
                                   '01'
                                 ELSE
                                   '02'
                                 END) = '01'), 0) AS MONTHLYQTY01
              ,NVL((SELECT SUM(WOD.QTY)
                      FROM CB_WORK_ORDER_D WOD
                     WHERE WOD.ORG_ID = WO.ORG_ID
                       AND WOD.COMPANY_ID = WO.COMPANY_ID
                       AND WOD.WORK_ORDER_ID = WO.WORK_ORDER_ID
                       AND WOD.WORK_ORDER_SEQ = WO.WORK_ORDER_SEQ
                       AND WOD.WORK_CENTER_CODE = (CASE WHEN WD.LEV = 1 THEN
                                                          WO.WORK_CENTER_CODE
                                                        WHEN WD.LEV = 2 THEN
                                                          WO.WORK_CENTER_CODE2
                                                        WHEN WD.LEV = 3 THEN
                                                          WO.WORK_CENTER_CODE3
                                                        WHEN WD.LEV = 4 THEN
                                                          WO.WORK_CENTER_CODE4
                                                        WHEN WD.LEV = 5 THEN
                                                          WO.WORK_CENTER_CODE5
                                                        WHEN WD.LEV = 6 THEN
                                                          WO.WORK_CENTER_CODE6
                                                        WHEN WD.LEV = 7 THEN
                                                          WO.WORK_CENTER_CODE7
                                                        WHEN WD.LEV = 8 THEN
                                                          WO.WORK_CENTER_CODE8
                                                        WHEN WD.LEV = 9 THEN
                                                          WO.WORK_CENTER_CODE9
                                                        WHEN WD.LEV = 10 THEN
                                                          WO.WORK_CENTER_CODE10
                                                        WHEN WD.LEV = 11 THEN
                                                          WO.WORK_CENTER_CODE11
                                                        WHEN WD.LEV = 12 THEN
                                                          WO.WORK_CENTER_CODE12
                                                        WHEN WD.LEV = 13 THEN
                                                          WO.WORK_CENTER_CODE13
                                                        WHEN WD.LEV = 14 THEN
                                                          WO.WORK_CENTER_CODE14
                                                        WHEN WD.LEV = 15 THEN
                                                          WO.WORK_CENTER_CODE15
                                                        END)
                       AND START_TIME BETWEEN TO_DATE(CB_COMMON_STANDARD_PKG.CB_WORK_DIV_FNC('02', 'MONTHLY', 'START_DATE'), 'YYYY-MM-DD HH24:MI')
                                          AND TO_DATE(CB_COMMON_STANDARD_PKG.CB_WORK_DIV_FNC('02', 'MONTHLY', 'END_DATE')  , 'YYYY-MM-DD HH24:MI')
                       AND WOD.WORK_DIV = '02'), 0) +
               NVL((SELECT SUM(WOF.FAULT_QTY)
                      FROM CB_WORK_ORDER_FAULT WOF
                     WHERE WOF.ORG_ID = WO.ORG_ID
                       AND WOF.COMPANY_ID = WO.COMPANY_ID
                       AND WOF.WORK_ORDER_ID = WO.WORK_ORDER_ID
                       AND WOF.WORK_ORDER_SEQ = WO.WORK_ORDER_SEQ
                       AND WOF.WORK_CENTER_CODE = (CASE WHEN WD.LEV = 1 THEN
                                                          WO.WORK_CENTER_CODE
                                                        WHEN WD.LEV = 2 THEN
                                                          WO.WORK_CENTER_CODE2
                                                        WHEN WD.LEV = 3 THEN
                                                          WO.WORK_CENTER_CODE3
                                                        WHEN WD.LEV = 4 THEN
                                                          WO.WORK_CENTER_CODE4
                                                        WHEN WD.LEV = 5 THEN
                                                          WO.WORK_CENTER_CODE5
                                                        WHEN WD.LEV = 6 THEN
                                                          WO.WORK_CENTER_CODE6
                                                        WHEN WD.LEV = 7 THEN
                                                          WO.WORK_CENTER_CODE7
                                                        WHEN WD.LEV = 8 THEN
                                                          WO.WORK_CENTER_CODE8
                                                        WHEN WD.LEV = 9 THEN
                                                          WO.WORK_CENTER_CODE9
                                                        WHEN WD.LEV = 10 THEN
                                                          WO.WORK_CENTER_CODE10
                                                        WHEN WD.LEV = 11 THEN
                                                          WO.WORK_CENTER_CODE11
                                                        WHEN WD.LEV = 12 THEN
                                                          WO.WORK_CENTER_CODE12
                                                        WHEN WD.LEV = 13 THEN
                                                          WO.WORK_CENTER_CODE13
                                                        WHEN WD.LEV = 14 THEN
                                                          WO.WORK_CENTER_CODE14
                                                        WHEN WD.LEV = 15 THEN
                                                          WO.WORK_CENTER_CODE15
                                                        END)
                       AND FAULT_DATE BETWEEN TO_DATE(CB_COMMON_STANDARD_PKG.CB_WORK_DIV_FNC('02', 'MONTHLY', 'START_DATE'), 'YYYY-MM-DD HH24:MI')
                                          AND TO_DATE(CB_COMMON_STANDARD_PKG.CB_WORK_DIV_FNC('02', 'MONTHLY', 'END_DATE')  , 'YYYY-MM-DD HH24:MI')
                       AND (CASE WHEN TO_CHAR(FAULT_DATE, 'HH24:MI') BETWEEN CB_COMMON_STANDARD_PKG.CB_WORK_DIV_FNC('01' ,'DAILY', 'START_TIME') AND CB_COMMON_STANDARD_PKG.CB_WORK_DIV_FNC('01' ,'DAILY', 'END_TIME') THEN
                                   '01'
                                 ELSE
                                   '02'
                                 END) = '02'), 0) AS MONTHLYQTY02
              ,NVL((SELECT SUM(WOD.QTY)
                      FROM CB_WORK_ORDER_D WOD
                     WHERE WOD.ORG_ID = WO.ORG_ID
                       AND WOD.COMPANY_ID = WO.COMPANY_ID
                       AND WOD.WORK_ORDER_ID = WO.WORK_ORDER_ID
                       AND WOD.WORK_ORDER_SEQ = WO.WORK_ORDER_SEQ
                       AND WOD.WORK_CENTER_CODE = (CASE WHEN WD.LEV = 1 THEN
                                                          WO.WORK_CENTER_CODE
                                                        WHEN WD.LEV = 2 THEN
                                                          WO.WORK_CENTER_CODE2
                                                        WHEN WD.LEV = 3 THEN
                                                          WO.WORK_CENTER_CODE3
                                                        WHEN WD.LEV = 4 THEN
                                                          WO.WORK_CENTER_CODE4
                                                        WHEN WD.LEV = 5 THEN
                                                          WO.WORK_CENTER_CODE5
                                                        WHEN WD.LEV = 6 THEN
                                                          WO.WORK_CENTER_CODE6
                                                        WHEN WD.LEV = 7 THEN
                                                          WO.WORK_CENTER_CODE7
                                                        WHEN WD.LEV = 8 THEN
                                                          WO.WORK_CENTER_CODE8
                                                        WHEN WD.LEV = 9 THEN
                                                          WO.WORK_CENTER_CODE9
                                                        WHEN WD.LEV = 10 THEN
                                                          WO.WORK_CENTER_CODE10
                                                        WHEN WD.LEV = 11 THEN
                                                          WO.WORK_CENTER_CODE11
                                                        WHEN WD.LEV = 12 THEN
                                                          WO.WORK_CENTER_CODE12
                                                        WHEN WD.LEV = 13 THEN
                                                          WO.WORK_CENTER_CODE13
                                                        WHEN WD.LEV = 14 THEN
                                                          WO.WORK_CENTER_CODE14
                                                        WHEN WD.LEV = 15 THEN
                                                          WO.WORK_CENTER_CODE15
                                                        END)
                       AND START_TIME BETWEEN TO_DATE(CB_COMMON_STANDARD_PKG.CB_WORK_DIV_FNC('01', 'MONTHLY', 'START_DATE'), 'YYYY-MM-DD HH24:MI')
                                          AND TO_DATE(CB_COMMON_STANDARD_PKG.CB_WORK_DIV_FNC('02', 'MONTHLY', 'END_DATE')  , 'YYYY-MM-DD HH24:MI')), 0) AS MONTHLYQTY
              ,NVL((SELECT SUM(WOD.QTY)
                      FROM CB_WORK_ORDER_D WOD
                     WHERE WOD.ORG_ID = WO.ORG_ID
                       AND WOD.COMPANY_ID = WO.COMPANY_ID
                       AND WOD.WORK_ORDER_ID = WO.WORK_ORDER_ID
                       AND WOD.WORK_ORDER_SEQ = WO.WORK_ORDER_SEQ
                       AND WOD.WORK_CENTER_CODE = (CASE WHEN WD.LEV = 1 THEN
                                                          WO.WORK_CENTER_CODE
                                                        WHEN WD.LEV = 2 THEN
                                                          WO.WORK_CENTER_CODE2
                                                        WHEN WD.LEV = 3 THEN
                                                          WO.WORK_CENTER_CODE3
                                                        WHEN WD.LEV = 4 THEN
                                                          WO.WORK_CENTER_CODE4
                                                        WHEN WD.LEV = 5 THEN
                                                          WO.WORK_CENTER_CODE5
                                                        WHEN WD.LEV = 6 THEN
                                                          WO.WORK_CENTER_CODE6
                                                        WHEN WD.LEV = 7 THEN
                                                          WO.WORK_CENTER_CODE7
                                                        WHEN WD.LEV = 8 THEN
                                                          WO.WORK_CENTER_CODE8
                                                        WHEN WD.LEV = 9 THEN
                                                          WO.WORK_CENTER_CODE9
                                                        WHEN WD.LEV = 10 THEN
                                                          WO.WORK_CENTER_CODE10
                                                        WHEN WD.LEV = 11 THEN
                                                          WO.WORK_CENTER_CODE11
                                                        WHEN WD.LEV = 12 THEN
                                                          WO.WORK_CENTER_CODE12
                                                        WHEN WD.LEV = 13 THEN
                                                          WO.WORK_CENTER_CODE13
                                                        WHEN WD.LEV = 14 THEN
                                                          WO.WORK_CENTER_CODE14
                                                        WHEN WD.LEV = 15 THEN
                                                          WO.WORK_CENTER_CODE15
                                                        END)
                       AND WOD.WORK_DIV = WD.WORK_DIV
                       AND START_TIME BETWEEN TO_DATE(CB_COMMON_STANDARD_PKG.CB_WORK_DIV_FNC(WD.WORK_DIV, 'DAILY', 'START_DATE'), 'YYYY-MM-DD HH24:MI')
                                          AND TO_DATE(CB_COMMON_STANDARD_PKG.CB_WORK_DIV_FNC(WD.WORK_DIV, 'DAILY', 'END_DATE')  , 'YYYY-MM-DD HH24:MI')
                    ), 0) AS DAILYQTY
              ,NVL((SELECT SUM(WOF.FAULT_QTY)
                      FROM CB_WORK_ORDER_FAULT WOF
                     WHERE WOF.ORG_ID = WO.ORG_ID
                       AND WOF.COMPANY_ID = WO.COMPANY_ID
                       AND WOF.WORK_ORDER_ID = WO.WORK_ORDER_ID
                       AND WOF.WORK_ORDER_SEQ = WO.WORK_ORDER_SEQ
                       AND WOF.WORK_CENTER_CODE = (CASE WHEN WD.LEV = 1 THEN
                                                          WO.WORK_CENTER_CODE
                                                        WHEN WD.LEV = 2 THEN
                                                          WO.WORK_CENTER_CODE2
                                                        WHEN WD.LEV = 3 THEN
                                                          WO.WORK_CENTER_CODE3
                                                        WHEN WD.LEV = 4 THEN
                                                          WO.WORK_CENTER_CODE4
                                                        WHEN WD.LEV = 5 THEN
                                                          WO.WORK_CENTER_CODE5
                                                        WHEN WD.LEV = 6 THEN
                                                          WO.WORK_CENTER_CODE6
                                                        WHEN WD.LEV = 7 THEN
                                                          WO.WORK_CENTER_CODE7
                                                        WHEN WD.LEV = 8 THEN
                                                          WO.WORK_CENTER_CODE8
                                                        WHEN WD.LEV = 9 THEN
                                                          WO.WORK_CENTER_CODE9
                                                        WHEN WD.LEV = 10 THEN
                                                          WO.WORK_CENTER_CODE10
                                                        WHEN WD.LEV = 11 THEN
                                                          WO.WORK_CENTER_CODE11
                                                        WHEN WD.LEV = 12 THEN
                                                          WO.WORK_CENTER_CODE12
                                                        WHEN WD.LEV = 13 THEN
                                                          WO.WORK_CENTER_CODE13
                                                        WHEN WD.LEV = 14 THEN
                                                          WO.WORK_CENTER_CODE14
                                                        WHEN WD.LEV = 15 THEN
                                                          WO.WORK_CENTER_CODE15
                                                        END)
                       AND FAULT_DATE BETWEEN TO_DATE(CB_COMMON_STANDARD_PKG.CB_WORK_DIV_FNC('01' ,'MONTHLY', 'START_DATE'), 'YYYY-MM-DD HH24:MI')
                                          AND TO_DATE(CB_COMMON_STANDARD_PKG.CB_WORK_DIV_FNC('02' ,'MONTHLY', 'END_DATE')  , 'YYYY-MM-DD HH24:MI')), 0) AS MONTHLYFAULTQTY
              ,NVL((SELECT SUM(WOF.FAULT_QTY)
                      FROM CB_WORK_ORDER_FAULT WOF
                     WHERE WOF.ORG_ID = WO.ORG_ID
                       AND WOF.COMPANY_ID = WO.COMPANY_ID
                       AND WOF.WORK_ORDER_ID = WO.WORK_ORDER_ID
                       AND WOF.WORK_ORDER_SEQ = WO.WORK_ORDER_SEQ
                       AND WOF.WORK_CENTER_CODE = (CASE WHEN WD.LEV = 1 THEN
                                                          WO.WORK_CENTER_CODE
                                                        WHEN WD.LEV = 2 THEN
                                                          WO.WORK_CENTER_CODE2
                                                        WHEN WD.LEV = 3 THEN
                                                          WO.WORK_CENTER_CODE3
                                                        WHEN WD.LEV = 4 THEN
                                                          WO.WORK_CENTER_CODE4
                                                        WHEN WD.LEV = 5 THEN
                                                          WO.WORK_CENTER_CODE5
                                                        WHEN WD.LEV = 6 THEN
                                                          WO.WORK_CENTER_CODE6
                                                        WHEN WD.LEV = 7 THEN
                                                          WO.WORK_CENTER_CODE7
                                                        WHEN WD.LEV = 8 THEN
                                                          WO.WORK_CENTER_CODE8
                                                        WHEN WD.LEV = 9 THEN
                                                          WO.WORK_CENTER_CODE9
                                                        WHEN WD.LEV = 10 THEN
                                                          WO.WORK_CENTER_CODE10
                                                        WHEN WD.LEV = 11 THEN
                                                          WO.WORK_CENTER_CODE11
                                                        WHEN WD.LEV = 12 THEN
                                                          WO.WORK_CENTER_CODE12
                                                        WHEN WD.LEV = 13 THEN
                                                          WO.WORK_CENTER_CODE13
                                                        WHEN WD.LEV = 14 THEN
                                                          WO.WORK_CENTER_CODE14
                                                        WHEN WD.LEV = 15 THEN
                                                          WO.WORK_CENTER_CODE15
                                                        END)
                       AND FAULT_DATE BETWEEN TO_DATE(CB_COMMON_STANDARD_PKG.CB_WORK_DIV_FNC(WD.WORK_DIV ,'DAILY', 'START_DATE'), 'YYYY-MM-DD HH24:MI')
                                          AND TO_DATE(CB_COMMON_STANDARD_PKG.CB_WORK_DIV_FNC(WD.WORK_DIV ,'DAILY', 'END_DATE')  , 'YYYY-MM-DD HH24:MI')
                       AND (CASE WHEN TO_CHAR(FAULT_DATE, 'HH24:MI') BETWEEN CB_COMMON_STANDARD_PKG.CB_WORK_DIV_FNC('01' ,'DAILY', 'START_TIME') AND CB_COMMON_STANDARD_PKG.CB_WORK_DIV_FNC('01' ,'DAILY', 'END_TIME') THEN
                                   '01'
                                 ELSE
                                   '02'
                                 END) = WD.WORK_DIV
                       ), 0) AS DAILYFAULTQTY
              ,TRUNC(CB_MFG_PKG.CB_WORK_FIND_DAY_QTY(WO.ORG_ID
                                              ,WO.COMPANY_ID
                                              ,WO.WORK_ORDER_ID
                                              ,WO.WORK_ORDER_SEQ
                                              ,(CASE WHEN WD.LEV = 1 THEN
                                                       WO.WORK_CENTER_CODE
                                                     WHEN WD.LEV = 2 THEN
                                                       WO.WORK_CENTER_CODE2
                                                     WHEN WD.LEV = 3 THEN
                                                       WO.WORK_CENTER_CODE3
                                                     WHEN WD.LEV = 4 THEN
                                                       WO.WORK_CENTER_CODE4
                                                     WHEN WD.LEV = 5 THEN
                                                       WO.WORK_CENTER_CODE5
                                                     WHEN WD.LEV = 6 THEN
                                                       WO.WORK_CENTER_CODE6
                                                     WHEN WD.LEV = 7 THEN
                                                       WO.WORK_CENTER_CODE7
                                                     WHEN WD.LEV = 8 THEN
                                                       WO.WORK_CENTER_CODE8
                                                     WHEN WD.LEV = 9 THEN
                                                       WO.WORK_CENTER_CODE9
                                                     WHEN WD.LEV = 10 THEN
                                                       WO.WORK_CENTER_CODE10
                                                     WHEN WD.LEV = 11 THEN
                                                       WO.WORK_CENTER_CODE11
                                                     WHEN WD.LEV = 12 THEN
                                                       WO.WORK_CENTER_CODE12
                                                     WHEN WD.LEV = 13 THEN
                                                       WO.WORK_CENTER_CODE13
                                                     WHEN WD.LEV = 14 THEN
                                                       WO.WORK_CENTER_CODE14
                                                     WHEN WD.LEV = 15 THEN
                                                       WO.WORK_CENTER_CODE15
                                                     END)
                                              ,'GOAL_QTY'), 0) AS DAILYGOALQTY
		      ,(SELECT MIN(CASE WHEN CB_MFG_PKG.CB_FML_CHECK_QTY(FCR.ORG_ID
                                                     ,FCR.COMPANY_ID
                                                     ,FCR.FML_ID
                                                     ,FCR.ORDER_NO)  > 0 THEN
		                          'Y'
		                        ELSE
		                          'N'
		                        END
		                   )
		          FROM CB_WORK_ORDER_D WOD
		              ,CB_FML_CHECK_MASTER FCM
		              ,CB_FML_CHECK_RESULT FCR
		         WHERE WOD.ORG_ID = WO.ORG_ID
		           AND WOD.COMPANY_ID = WO.COMPANY_ID
		           AND WOD.WORK_ORDER_ID = WO.WORK_ORDER_ID
		           AND WOD.WORK_ORDER_SEQ = WO.WORK_ORDER_SEQ
		           AND FCM.ORG_ID = WOD.ORG_ID
		           AND FCM.COMPANY_ID = WOD.COMPANY_ID
		           AND FCM.WORK_ORDER_ID = WOD.WORK_ORDER_ID
		           AND FCM.WORK_ORDER_SEQ = WOD.WORK_ORDER_SEQ
		           AND FCM.EMPLOYEE_SEQ = WOD.SEQ_NO
		           AND FCM.ORG_ID = FCR.ORG_ID
		           AND FCM.COMPANY_ID = FCR.COMPANY_ID
		           AND FCM.FML_ID = FCR.FML_ID
		           AND WOD.END_TIME IS NULL
		           AND WOD.WORK_DIV = WD.WORK_DIV) AS FMLYN
      FROM CB_WORK_ORDER WO
              ,CB_WORK_CENTER WC
              ,CB_ITEM_MASTER IM
              ,(SELECT TMP.LEV AS LEV
                      ,SC.ORG_ID AS ORG_ID
                      ,SC.COMPANY_ID AS COMPANY_ID
                      ,SC.SMALL_CODE AS WORK_DIV
                      ,SC.SMALL_NAME AS WORK_DIV_NAME
                  FROM CB_SMALL_CODE SC
                      ,(SELECT LEVEL AS LEV
                          FROM DUAL
                        CONNECT BY LEVEL <= 15) TMP
                 WHERE SC.BIG_CODE = 'MFG'
                   AND SC.MIDDLE_CODE = 'WORK_DIV'
                   AND SC.USE_YN = 'Y') WD
        ]]>
    </sql>

    <sql id="prod.work.order.button.list.sql-where">
         WHERE WC.ORG_ID = WO.ORG_ID
				   AND WC.COMPANY_ID = WO.COMPANY_ID
				   AND WC.WORK_CENTER_CODE = (CASE WHEN WD.LEV = 1 THEN
												                                     WO.WORK_CENTER_CODE
												                                   WHEN WD.LEV = 2 THEN
												                                     WO.WORK_CENTER_CODE2
												                                   WHEN WD.LEV = 3 THEN
												                                     WO.WORK_CENTER_CODE3
												                                   WHEN WD.LEV = 4 THEN
												                                     WO.WORK_CENTER_CODE4
												                                   WHEN WD.LEV = 5 THEN
												                                     WO.WORK_CENTER_CODE5
                                                           WHEN WD.LEV = 6 THEN
                                                             WO.WORK_CENTER_CODE6
                                                           WHEN WD.LEV = 7 THEN
                                                             WO.WORK_CENTER_CODE7
                                                           WHEN WD.LEV = 8 THEN
                                                             WO.WORK_CENTER_CODE8
                                                           WHEN WD.LEV = 9 THEN
                                                             WO.WORK_CENTER_CODE9
                                                           WHEN WD.LEV = 10 THEN
                                                             WO.WORK_CENTER_CODE10
                                                           WHEN WD.LEV = 11 THEN
                                                             WO.WORK_CENTER_CODE11
                                                           WHEN WD.LEV = 12 THEN
                                                             WO.WORK_CENTER_CODE12
                                                           WHEN WD.LEV = 13 THEN
                                                             WO.WORK_CENTER_CODE13
                                                           WHEN WD.LEV = 14 THEN
                                                             WO.WORK_CENTER_CODE14
                                                           WHEN WD.LEV = 15 THEN
                                                             WO.WORK_CENTER_CODE15
												                                   END)
				   AND WO.ORG_ID = IM.ORG_ID
				   AND WO.COMPANY_ID = IM.COMPANY_ID
				   AND WO.ITEM_CODE = IM.ITEM_CODE
				   AND WO.ORG_ID = WD.ORG_ID
				   AND WO.COMPANY_ID = WD.COMPANY_ID
				   AND WO.WORK_STATUS NOT IN ('STAND_BY', 'CANCEL', 'HOLD', 'COMPLETE')
         <isNotEmpty property="ORGID" prepend="AND">
            WC.ORG_ID = #ORGID#
         </isNotEmpty>
         <isNotEmpty property="COMPANYID" prepend="AND">
            WC.COMPANY_ID = #COMPANYID#
         </isNotEmpty>
         <isNotEmpty property="WORKDEPT" prepend="AND">
            WC.WORK_DEPT = #WORKDEPT#
         </isNotEmpty>
         <isNotEmpty property="WORKCENTERCODE" prepend="AND">
            WC.WORK_CENTER_CODE = #WORKCENTERCODE#
         </isNotEmpty>
         <isNotEmpty property="WORKDIV" prepend="AND">
            WD.WORK_DIV = #WORKDIV#
         </isNotEmpty>
         <isNotEmpty property="CARTYPE" prepend="AND">
            IM.CAR_TYPE = #CARTYPE#
         </isNotEmpty>
         <isNotEmpty property="CARTYPENAME" prepend="AND">
            (SELECT SC.SMALL_NAME
               FROM CB_SMALL_CODE SC
              WHERE SC.ORG_ID = IM.ORG_ID
                AND SC.COMPANY_ID = IM.COMPANY_ID
                AND SC.BIG_CODE = 'CMM'
                AND SC.MIDDLE_CODE = 'MODEL'
                AND SC.SMALL_CODE = IM.CAR_TYPE) LIKE '%' || #CARTYPENAME# || '%'
         </isNotEmpty>
         <isNotEmpty property="ITEMSTANDARDDETAIL" prepend="AND">
            IM.ITEM_STANDARD_DETAIL LIKE '%' || #ITEMSTANDARDDETAIL# || '%'
         </isNotEmpty>
    </sql>

    <select id="prod.work.order.button.list.select" parameterClass="java.util.Map"
        resultClass="java.util.HashMap">
        <include refid="prod.work.order.button.list.sql-select" />
        <include refid="prod.work.order.button.list.sql-where" />
    </select>

    <select id="prod.work.order.button.list.count" parameterClass="java.util.Map"
        resultClass="java.lang.Integer">
        SELECT COUNT(*) FROM (
            <include refid="prod.work.order.button.list.sql-select" />
            <include refid="prod.work.order.button.list.sql-where" />
        ) TOT
    </select>
    <!-- 새로운 작업지시 조회 화면 END -->
    
    <sql id="prod.work.fault.list.find.sql-select">
        SELECT COUNT(SEQ_NO) AS COUNT
          FROM CB_WORK_ORDER_D
    </sql>

    <sql id="prod.work.fault.list.find.sql-where">
         WHERE 1 = 1
         <isNotEmpty property="ORGID" prepend="AND">
            ORG_ID = #ORGID#
         </isNotEmpty>
         <isNotEmpty property="COMPANYID" prepend="AND">
            COMPANY_ID = #COMPANYID#
         </isNotEmpty>
         <isNotEmpty property="WORKORDERID" prepend="AND">
            WORK_ORDER_ID = #WORKORDERID#
         </isNotEmpty>
         <isNotEmpty property="WORKORDERSEQ" prepend="AND">
            WORK_ORDER_SEQ = #WORKORDERSEQ#
         </isNotEmpty>
         <isNotEmpty property="SEQNO" prepend="AND">
            SEQ_NO = #SEQNO#
         </isNotEmpty>
    </sql>

    <select id="prod.work.fault.list.find.select" parameterClass="java.util.Map"
        resultClass="java.util.HashMap">
        <include refid="prod.work.fault.list.find.sql-select" />
        <include refid="prod.work.fault.list.find.sql-where" />
    </select>
    
    <select id="prod.work.order.create.find.select" parameterClass="java.util.Map" resultClass="java.util.HashMap">
        <![CDATA[
            SELECT COUNT(*) AS COUNT
              FROM CB_NEW_WO_EQUIP_LIST_V WOH
             WHERE TRUNC(SYSDATE, 'DD') BETWEEN NVL(WOH.WORK_PLAN_START_DATE, TRUNC(SYSDATE, 'DD')) AND NVL(WOH.WORK_PLAN_END_DATE, TO_DATE('4999-12-31', 'YYYY-MM-DD'))
        ]]>
        <isNotEmpty property="ORGID" prepend="AND">
            WOH.ORG_ID = #ORGID#
        </isNotEmpty>
        <isNotEmpty property="COMPANYID" prepend="AND">
            WOH.COMPANY_ID = #COMPANYID#
        </isNotEmpty>
        <isNotEmpty property="ITEMCODE" prepend="AND">
            WOH.ITEM_CODE = #ITEMCODE#
        </isNotEmpty>
        <isNotEmpty property="ROUTINGID" prepend="AND">
            WOH.ROUTING_ID = #ROUTINGID#
        </isNotEmpty>
        <isNotEmpty property="WORKCENTERCODE" prepend="AND">
            WOH.WORK_CENTER_CODE = #WORKCENTERCODE#
        </isNotEmpty>
    </select>
    
    
    <sql id="prod.work.equipment.list.sql-select">
    <![CDATA[
    SELECT RANK() OVER(ORDER BY TO_NUMBER(CB_COMMON_STANDARD_PKG.CB_FIND_SMALL_NAME_1(WC.ORG_ID
                                                                        ,WC.COMPANY_ID
                                                                        ,'CMM'
                                                                        ,'WORK_DEPT'
                                                                        ,WC.WORK_DEPT
                                                                        ,'LABEL'))
				                           ,WC.WORK_CENTER_CODE
				                           ,WOE.START_TIME
				                           ,WOE.WORK_ORDER_ID) AS RN
				      ,WC.ORG_ID AS ORGID
				      ,WC.COMPANY_ID AS COMPANYID
				      ,WC.WORK_DEPT AS WORKDEPT
				      ,CB_COMMON_STANDARD_PKG.CB_FIND_SMALL_NAME_1(WC.ORG_ID
				                                                  ,WC.COMPANY_ID
				                                                  ,'CMM'
				                                                  ,'WORK_DEPT'
				                                                  ,WC.WORK_DEPT
				                                                  ,'LABEL') AS WORKDEPTNAME
				      ,WC.WORK_CENTER_CODE AS WORKCENTERCODE
				      ,WC.WORK_CENTER_NAME AS WORKCENTERNAME
				      ,(CASE WHEN WOE.WORK_ORDER_ID IS NULL THEN
				               '##FFFF00'
				             ELSE
				               (CASE WHEN (SELECT (SELECT PP.SO_NO
				                                     FROM CB_PROD_PLAN PP
				                                    WHERE PP.ORG_ID = WOH.ORG_ID
				                                      AND PP.COMPANY_ID = WOH.COMPANY_ID
				                                      AND PP.WORK_PLAN_NO = WOH.WORK_PLAN_NO)
				                             FROM CB_WORK_ORDER_HEADER WOH
				                            WHERE WOH.ORG_ID = WOE.ORG_ID
				                              AND WOH.COMPANY_ID = WOE.COMPANY_ID
				                              AND WOH.WORK_ORDER_ID = WOE.WORK_ORDER_ID) IS NULL THEN
				                       '##FF0000'
				                     ELSE
				                       '##0BE710'
				                     END)
				             END) AS OPERATEYN
              ,(CASE WHEN WOE.WORK_ORDER_ID IS NULL THEN
                       (CASE WHEN (SELECT COUNT(WV.WORK_ORDER_ID)
                                     FROM CB_NEW_WO_EQUIP_LIST_V WV
                                    WHERE WV.ORG_ID = WC.ORG_ID
                                      AND WV.COMPANY_ID = WC.COMPANY_ID
                                      AND WV.WORK_CENTER_CODE = WC.WORK_CENTER_CODE) > 0 THEN
                               '##FFC000'
                             ELSE
                               '##FFFFFF'
                             END)
                     ELSE
                       (CASE WHEN (SELECT (SELECT PP.SO_NO
                                             FROM CB_PROD_PLAN PP
                                            WHERE PP.ORG_ID = WOH.ORG_ID
                                              AND PP.COMPANY_ID = WOH.COMPANY_ID
                                              AND PP.WORK_PLAN_NO = WOH.WORK_PLAN_NO)
                                     FROM CB_WORK_ORDER_HEADER WOH
                                    WHERE WOH.ORG_ID = WOE.ORG_ID
                                      AND WOH.COMPANY_ID = WOE.COMPANY_ID
                                      AND WOH.WORK_ORDER_ID = WOE.WORK_ORDER_ID) IS NULL THEN
                               (CASE WHEN (SELECT COUNT(*)
                                             FROM CB_PROD_PLAN_MANAGE_V PV
                                            WHERE PV.ORG_ID = WOE.ORG_ID
                                              AND PV.COMPANY_ID = WOE.COMPANY_ID
                                              AND PV.ITEM_CODE = WOE.ITEM_CODE
                                              AND PV.COMPLETEYN = 'N') > 0 THEN
                                       '##FFC000'
                                     ELSE
                                       '##FFFFFF'
                                     END)
                             ELSE
                               '##FFFFFF'
                             END)
                     END) AS SOWOYN
				      ,(CASE WHEN WOE.WORK_ORDER_ID IS NULL THEN
				               'N'
				             ELSE
				               (CASE WHEN (SELECT (SELECT PP.SO_NO
				                                     FROM CB_PROD_PLAN PP
				                                    WHERE PP.ORG_ID = WOH.ORG_ID
				                                      AND PP.COMPANY_ID = WOH.COMPANY_ID
				                                      AND PP.WORK_PLAN_NO = WOH.WORK_PLAN_NO)
				                             FROM CB_WORK_ORDER_HEADER WOH
				                            WHERE WOH.ORG_ID = WOE.ORG_ID
				                              AND WOH.COMPANY_ID = WOE.COMPANY_ID
				                              AND WOH.WORK_ORDER_ID = WOE.WORK_ORDER_ID) IS NULL THEN
				                       'Y'
				                     ELSE
				                       'N'
				                     END)
				             END) AS BTNDISABLEDYN
				      ,(SELECT (SELECT PP.SO_NO
                           FROM CB_PROD_PLAN PP
                          WHERE PP.ORG_ID = WOH.ORG_ID
                            AND PP.COMPANY_ID = WOH.COMPANY_ID
                            AND PP.WORK_PLAN_NO = WOH.WORK_PLAN_NO)
                   FROM CB_WORK_ORDER_HEADER WOH
                  WHERE WOH.ORG_ID = WOE.ORG_ID
                    AND WOH.COMPANY_ID = WOE.COMPANY_ID
                    AND WOH.WORK_ORDER_ID = WOE.WORK_ORDER_ID) AS SONO
				      ,WC.SEQ AS SEQ
				      ,WOE.ITEM_CODE AS ITEMCODE
				      ,WOE.ORDER_NAME AS ORDERNAME
				      ,WOE.ITEM_NAME AS ITEMNAME
				      ,WOE.MODEL AS MODEL
				      ,WOE.MODEL_NAME AS MODELNAME
              ,WOE.ITEM_STANDARD_DETAIL AS ITEMSTANDARDDETAIL
				      ,WOE.WORK_ORDER_ID AS WORKORDERID
				      ,WOE.WORK_ORDER_SEQ AS WORKORDERSEQ
				      ,WOE.SEQ_NO AS SEQNO
				      ,WOE.ROUTING_ID AS ROUTINGID
				      ,WOE.ROUTING_NAME AS ROUTINGNAME
				      ,WOE.EMPLOYEE_NUMBER AS EMPLOYEENUMBER
				      ,WOE.KR_NAME AS KRNAME
				      ,WOE.QTY AS QTY
				      ,TO_CHAR(WOE.START_TIME, 'YYYY-MM-DD HH24:MI') AS STARTTIME
				      ,TO_CHAR(WOE.END_TIME, 'YYYY-MM-DD HH24:MI') AS ENDTIME
		  FROM CB_WORK_CENTER WC
		          ,CB_WORK_ORDER_EQUIPMENT WOE
    ]]>
    </sql>

    <sql id="prod.work.equipment.list.sql-where">
		 WHERE WC.ORG_ID = WOE.ORG_ID (+)
		   AND WC.COMPANY_ID = WOE.COMPANY_ID (+)
		   AND WC.WORK_CENTER_CODE = WOE.WORK_CENTER_CODE (+)
		   AND WC.WORK_DEPT IS NOT NULL
		   AND SYSDATE BETWEEN WC.EFFECTIVE_START_DATE AND WC.EFFECTIVE_END_DATE
         <isNotEmpty property="ORGID" prepend="AND">
            WC.ORG_ID = #ORGID#
         </isNotEmpty>
         <isNotEmpty property="COMPANYID" prepend="AND">
            WC.COMPANY_ID = #COMPANYID#
         </isNotEmpty>
         <isNotEmpty property="SEARCHDATE" prepend="AND">
            TRUNC(WOE.START_TIME (+), 'DD') = TO_DATE(#SEARCHDATE#, 'YYYY-MM-DD')
         </isNotEmpty>
         <isNotEmpty property="WORKCENTERNAME" prepend="AND">
            WC.WORK_CENTER_NAME LIKE '%' || #WORKCENTERNAME# || '%'
         </isNotEmpty>
         <isNotEmpty property="ORDERNAME" prepend="AND">
            WOE.ORDER_NAME(+) LIKE '%' || #ORDERNAME# || '%'
         </isNotEmpty>
         <isNotEmpty property="ITEMNAME" prepend="AND">
            WOE.ITEM_NAME(+) LIKE '%' || #ITEMNAME# || '%'
         </isNotEmpty>
         <isNotEmpty property="MODELNAME" prepend="AND">
            WOE.MODEL_NAME(+) LIKE '%' || #MODELNAME# || '%'
         </isNotEmpty>
         <isNotEmpty property="ITEMSTANDARDDETAIL" prepend="AND">
            WOE.ITEM_STANDARD_DETAIL(+) LIKE '%' || #ITEMSTANDARDDETAIL# || '%'
         </isNotEmpty>
    </sql>

    <select id="prod.work.equipment.list.select" parameterClass="java.util.Map"
        resultClass="java.util.HashMap">
        <include refid="prod.work.equipment.list.sql-select" />
        <include refid="prod.work.equipment.list.sql-where" />
    </select>

    <select id="prod.work.equipment.list.count" parameterClass="java.util.Map"
        resultClass="java.lang.Integer">
        SELECT COUNT(*) FROM (
            <include refid="prod.work.equipment.list.sql-select" />
            <include refid="prod.work.equipment.list.sql-where" />
        ) TOT
    </select>
    
</sqlMap>